{"code":"import { __assign } from \"tslib\";\r\nimport { each, isBoolean, isEmpty } from 'lodash';\r\n/**\r\n * re-arrange field values by custom arrange hooks\r\n * @param fieldValues\r\n * @param facetCfg\r\n * @param parent\r\n * @param field\r\n */\r\nexport var layoutArrange = function (fieldValues, facetCfg, parent, field) {\r\n    if (facetCfg.layoutArrange) {\r\n        return facetCfg.layoutArrange(facetCfg.spreadsheet, parent, field, fieldValues);\r\n    }\r\n    return fieldValues;\r\n};\r\n/**\r\n * Push node directly or custom push according to Hierarchy Hooks\r\n * @param facetCfg\r\n * @param parentNode\r\n * @param currentNode\r\n * @param hierarchy\r\n */\r\nexport var layoutHierarchy = function (facetCfg, parentNode, currentNode, hierarchy) {\r\n    var expandCurrentNode = true;\r\n    var addNode = function (node, insetIndex, hierarchyIndex) {\r\n        if (insetIndex === void 0) { insetIndex = -1; }\r\n        if (hierarchyIndex === void 0) { hierarchyIndex = -1; }\r\n        if (insetIndex === -1) {\r\n            // add in parent\r\n            parentNode.children.push(node);\r\n            hierarchy.pushNode(node);\r\n        }\r\n        else {\r\n            parentNode.children.splice(insetIndex, 0, node);\r\n            hierarchy.pushNode(node, hierarchyIndex);\r\n        }\r\n    };\r\n    if (facetCfg.layoutHierarchy) {\r\n        var facetLayoutHierarchy = facetCfg.layoutHierarchy(facetCfg.spreadsheet, currentNode);\r\n        if (facetLayoutHierarchy) {\r\n            var deleteNode = !isBoolean(facetLayoutHierarchy === null || facetLayoutHierarchy === void 0 ? void 0 : facetLayoutHierarchy.delete)\r\n                ? false\r\n                : facetLayoutHierarchy === null || facetLayoutHierarchy === void 0 ? void 0 : facetLayoutHierarchy.delete;\r\n            expandCurrentNode = !deleteNode;\r\n            var pushNodes = facetLayoutHierarchy.push, unshiftNodes = facetLayoutHierarchy.unshift;\r\n            var currentIndex = parentNode.children.length;\r\n            var hierarchyIndex = hierarchy.getNodes().length;\r\n            if (!isEmpty(unshiftNodes)) {\r\n                each(unshiftNodes, function (v) {\r\n                    addNode(v);\r\n                });\r\n                currentIndex = parentNode.children.length;\r\n                hierarchyIndex = hierarchy.getNodes().length;\r\n            }\r\n            if (!isEmpty(pushNodes)) {\r\n                each(pushNodes, function (v) {\r\n                    addNode(v);\r\n                });\r\n            }\r\n            if (!deleteNode) {\r\n                addNode(currentNode, currentIndex, hierarchyIndex);\r\n            }\r\n        }\r\n        else {\r\n            addNode(currentNode);\r\n        }\r\n    }\r\n    else {\r\n        addNode(currentNode);\r\n    }\r\n    return expandCurrentNode;\r\n};\r\n/**\r\n * custom control every header node's coordinates\r\n * @param facetCfg\r\n * @param rowNode\r\n * @param colNode\r\n */\r\nexport var layoutCoordinate = function (facetCfg, rowNode, colNode) {\r\n    if (facetCfg === null || facetCfg === void 0 ? void 0 : facetCfg.layoutCoordinate) {\r\n        // only leaf node's coordinates can be modified\r\n        if ((rowNode === null || rowNode === void 0 ? void 0 : rowNode.isLeaf) || (colNode === null || colNode === void 0 ? void 0 : colNode.isLeaf)) {\r\n            facetCfg === null || facetCfg === void 0 ? void 0 : facetCfg.layoutCoordinate(facetCfg.spreadsheet, rowNode, colNode);\r\n        }\r\n    }\r\n};\r\n/**\r\n * Custom position cell's data\r\n * @param facetCfg\r\n * @param layoutResult\r\n */\r\nexport var layoutDataPosition = function (facetCfg, layoutResult) {\r\n    var dataPosition = facetCfg === null || facetCfg === void 0 ? void 0 : facetCfg.layoutDataPosition;\r\n    if (dataPosition) {\r\n        var getCellMeta = layoutResult.getCellMeta;\r\n        var handledGetCellMeta = dataPosition(facetCfg.spreadsheet, getCellMeta);\r\n        return __assign(__assign({}, layoutResult), { getCellMeta: handledGetCellMeta });\r\n    }\r\n    return layoutResult;\r\n};\r\n//# sourceMappingURL=layout-hooks.js.map","references":["F:/Ismart/S2-master/node_modules/@types/lodash/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/node.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/index.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/hierarchy.ts"],"map":"{\"version\":3,\"file\":\"layout-hooks.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/facet/layout/layout-hooks.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"F:/Ismart/S2-master/packages/s2-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/facet/layout/layout-hooks.d.ts","writeByteOrderMark":false,"text":"import { Node } from \"./node\";\r\nimport { LayoutResult, SpreadSheetFacetCfg } from \"../../common/interface\";\r\nimport { Hierarchy } from \"./hierarchy\";\r\n/**\r\n * re-arrange field values by custom arrange hooks\r\n * @param fieldValues\r\n * @param facetCfg\r\n * @param parent\r\n * @param field\r\n */\r\nexport declare const layoutArrange: (fieldValues: string[], facetCfg: SpreadSheetFacetCfg, parent: Node, field: string) => string[];\r\n/**\r\n * Push node directly or custom push according to Hierarchy Hooks\r\n * @param facetCfg\r\n * @param parentNode\r\n * @param currentNode\r\n * @param hierarchy\r\n */\r\nexport declare const layoutHierarchy: (facetCfg: SpreadSheetFacetCfg, parentNode: Node, currentNode: Node, hierarchy: Hierarchy) => boolean;\r\n/**\r\n * custom control every header node's coordinates\r\n * @param facetCfg\r\n * @param rowNode\r\n * @param colNode\r\n */\r\nexport declare const layoutCoordinate: (facetCfg: SpreadSheetFacetCfg, rowNode: Node, colNode: Node) => void;\r\n/**\r\n * Custom position cell's data\r\n * @param facetCfg\r\n * @param layoutResult\r\n */\r\nexport declare const layoutDataPosition: (facetCfg: SpreadSheetFacetCfg, layoutResult: LayoutResult) => LayoutResult;\r\n"}}
