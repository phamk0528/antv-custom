{"code":"import { __extends, __read, __spreadArray } from \"tslib\";\r\nimport { isEmpty } from 'lodash';\r\nimport { getCellMeta } from \"../utils/interaction/select-event\";\r\nimport { BaseEvent } from './base-interaction';\r\nimport { getActiveCellsTooltipData } from \"../utils/tooltip\";\r\nimport { InterceptType, InteractionKeyboardKey, InteractionStateName, S2Event, } from \"../common/constant\";\r\nvar DataCellMultiSelection = /** @class */ (function (_super) {\r\n    __extends(DataCellMultiSelection, _super);\r\n    function DataCellMultiSelection() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.isMultiSelection = false;\r\n        return _this;\r\n    }\r\n    DataCellMultiSelection.prototype.bindEvents = function () {\r\n        this.bindKeyboardDown();\r\n        this.bindDataCellClick();\r\n        this.bindKeyboardUp();\r\n    };\r\n    DataCellMultiSelection.prototype.bindKeyboardDown = function () {\r\n        var _this = this;\r\n        this.spreadsheet.on(S2Event.GLOBAL_KEYBOARD_DOWN, function (event) {\r\n            if ([\r\n                InteractionKeyboardKey.META,\r\n                InteractionKeyboardKey.CONTROL,\r\n            ].includes(event.key)) {\r\n                _this.isMultiSelection = true;\r\n                _this.spreadsheet.interaction.addIntercepts([InterceptType.CLICK]);\r\n            }\r\n        });\r\n    };\r\n    DataCellMultiSelection.prototype.bindKeyboardUp = function () {\r\n        var _this = this;\r\n        this.spreadsheet.on(S2Event.GLOBAL_KEYBOARD_UP, function (event) {\r\n            if ([InteractionKeyboardKey.META, InteractionKeyboardKey.CONTROL].includes(event.key)) {\r\n                _this.isMultiSelection = false;\r\n                _this.spreadsheet.interaction.removeIntercepts([InterceptType.CLICK]);\r\n            }\r\n        });\r\n    };\r\n    DataCellMultiSelection.prototype.getSelectedCells = function (cell) {\r\n        var id = cell.getMeta().id;\r\n        var interaction = this.spreadsheet.interaction;\r\n        var selectedCells = interaction.getCells();\r\n        var cells = [];\r\n        if (interaction.getCurrentStateName() !== InteractionStateName.SELECTED) {\r\n            selectedCells = [];\r\n        }\r\n        if (selectedCells.find(function (meta) { return meta.id === id; })) {\r\n            cells = selectedCells.filter(function (item) { return item.id !== id; });\r\n        }\r\n        else {\r\n            cells = __spreadArray(__spreadArray([], __read(selectedCells), false), [getCellMeta(cell)], false);\r\n        }\r\n        return cells;\r\n    };\r\n    DataCellMultiSelection.prototype.bindDataCellClick = function () {\r\n        var _this = this;\r\n        this.spreadsheet.on(S2Event.DATA_CELL_CLICK, function (event) {\r\n            event.stopPropagation();\r\n            var cell = _this.spreadsheet.getCell(event.target);\r\n            var meta = cell.getMeta();\r\n            var interaction = _this.spreadsheet.interaction;\r\n            if (_this.isMultiSelection && meta) {\r\n                var selectedCells = _this.getSelectedCells(cell);\r\n                if (isEmpty(selectedCells)) {\r\n                    interaction.clearState();\r\n                    _this.spreadsheet.hideTooltip();\r\n                    return;\r\n                }\r\n                interaction.addIntercepts([InterceptType.CLICK, InterceptType.HOVER]);\r\n                _this.spreadsheet.hideTooltip();\r\n                interaction.changeState({\r\n                    cells: selectedCells,\r\n                    stateName: InteractionStateName.SELECTED,\r\n                });\r\n                _this.spreadsheet.emit(S2Event.GLOBAL_SELECTED, interaction.getActiveCells());\r\n                _this.spreadsheet.showTooltipWithInfo(event, getActiveCellsTooltipData(_this.spreadsheet));\r\n            }\r\n        });\r\n    };\r\n    return DataCellMultiSelection;\r\n}(BaseEvent));\r\nexport { DataCellMultiSelection };\r\n//# sourceMappingURL=data-cell-multi-selection.js.map","references":["F:/Ismart/S2-master/node_modules/@antv/g-canvas/lib/index.d.ts","F:/Ismart/S2-master/node_modules/@types/lodash/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/interaction/select-event.ts","F:/Ismart/S2-master/packages/s2-core/src/interaction/base-interaction/index.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/tooltip.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/index.ts","F:/Ismart/S2-master/packages/s2-core/src/cell/index.ts"],"map":"{\"version\":3,\"file\":\"data-cell-multi-selection.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/interaction/data-cell-multi-selection.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"F:/Ismart/S2-master/packages/s2-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/interaction/data-cell-multi-selection.d.ts","writeByteOrderMark":false,"text":"import { BaseEvent, BaseEventImplement } from './base-interaction';\r\nexport declare class DataCellMultiSelection extends BaseEvent implements BaseEventImplement {\r\n    private isMultiSelection;\r\n    bindEvents(): void;\r\n    private bindKeyboardDown;\r\n    private bindKeyboardUp;\r\n    private getSelectedCells;\r\n    private bindDataCellClick;\r\n}\r\n"}}
