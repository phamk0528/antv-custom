{"code":"import { __read, __spreadArray } from \"tslib\";\r\nimport { compact, get, isEmpty, isEqual, last, uniq } from 'lodash';\r\nimport { ID_SEPARATOR, S2Event } from \"../common/constant\";\r\nexport var getHiddenColumnFieldKey = function (field) {\r\n    var targetFieldKey = (field.includes(ID_SEPARATOR) ? 'id' : 'field');\r\n    return targetFieldKey;\r\n};\r\n/**\r\n * @name 获取需要隐藏的 field 转成对应的 Node\r\n */\r\nexport var getHiddenColumnNodes = function (spreadsheet, hiddenColumnFields) {\r\n    if (hiddenColumnFields === void 0) { hiddenColumnFields = []; }\r\n    var columnNodes = spreadsheet.getInitColumnLeafNodes();\r\n    return compact(hiddenColumnFields.map(function (field) {\r\n        var targetFieldKey = getHiddenColumnFieldKey(field);\r\n        return columnNodes.find(function (node) { return node[targetFieldKey] === field; });\r\n    }));\r\n};\r\n/**\r\n * @name 获取隐藏列兄弟节点\r\n * @description 获取当前隐藏列(兼容多选) 所对应为未隐藏的兄弟节点\r\n * @param hideColumns 经过分组的连续隐藏列\r\n   [ 1, 2, 3, -, -, -, (7 √), 8, 9 ]\r\n  [ 1, 2, 3, (4 √), - ]\r\n */\r\nexport var getHiddenColumnDisplaySiblingNode = function (spreadsheet, hiddenColumnFields) {\r\n    if (hiddenColumnFields === void 0) { hiddenColumnFields = []; }\r\n    if (isEmpty(hiddenColumnFields)) {\r\n        return {\r\n            prev: null,\r\n            next: null,\r\n        };\r\n    }\r\n    var initColumnLeafNodes = spreadsheet.getInitColumnLeafNodes();\r\n    var hiddenColumnIndexes = getHiddenColumnNodes(spreadsheet, hiddenColumnFields).map(function (node) { return node === null || node === void 0 ? void 0 : node.colIndex; });\r\n    var lastHiddenColumnIndex = Math.max.apply(Math, __spreadArray([], __read(hiddenColumnIndexes), false));\r\n    var firstHiddenColumnIndex = Math.min.apply(Math, __spreadArray([], __read(hiddenColumnIndexes), false));\r\n    var nextSiblingNode = initColumnLeafNodes.find(function (node) { return node.colIndex === lastHiddenColumnIndex + 1; });\r\n    var prevSiblingNode = initColumnLeafNodes.find(function (node) { return node.colIndex === firstHiddenColumnIndex - 1; });\r\n    return {\r\n        prev: prevSiblingNode || null,\r\n        next: nextSiblingNode || null,\r\n    };\r\n};\r\n/**\r\n * @name 获取隐藏列组\r\n * @description 如果给定的隐藏列不是连续的, 比如原始列是 [1,2,3,4,5,6,7], 隐藏列是 [2,3,6], 那么其实在表格上需要显示两个展开按钮\r\n   [[2,3],[6]]\r\n */\r\nexport var getHiddenColumnsThunkGroup = function (columns, hiddenColumnFields) {\r\n    if (isEmpty(hiddenColumnFields)) {\r\n        return [];\r\n    }\r\n    // 上一个需要隐藏项的序号\r\n    var prevHiddenIndex = Number.NEGATIVE_INFINITY;\r\n    return columns.reduce(function (result, field, index) {\r\n        if (!hiddenColumnFields.includes(field)) {\r\n            return result;\r\n        }\r\n        if (index === prevHiddenIndex + 1) {\r\n            var lastGroup = last(result);\r\n            lastGroup.push(field);\r\n        }\r\n        else {\r\n            var group = [field];\r\n            result.push(group);\r\n        }\r\n        prevHiddenIndex = index;\r\n        return result;\r\n    }, []);\r\n};\r\n/**\r\n * @name 隐藏指定列\r\n * @description 1. 通过分析组件隐藏, 2. 点击列头隐藏\r\n   存储: 1.隐藏列所对应的兄弟节点 (显示展开按钮), 2.当前隐藏列 (点击展开按钮恢复隐藏)\r\n   重置交互: 比如选中当前列, 显示高亮背景色, 隐藏后需要取消高亮\r\n   钩子: 提供当前被隐藏的列, 和全量的隐藏组\r\n */\r\nexport var hideColumns = function (spreadsheet, selectedColumnFields, forceRender) {\r\n    if (selectedColumnFields === void 0) { selectedColumnFields = []; }\r\n    if (forceRender === void 0) { forceRender = false; }\r\n    var lastHiddenColumnDetail = spreadsheet.store.get('hiddenColumnsDetail', []);\r\n    var lastHiddenColumnFields = spreadsheet.options.interaction.hiddenColumnFields;\r\n    if (isEqual(selectedColumnFields, lastHiddenColumnFields) && !forceRender) {\r\n        return;\r\n    }\r\n    var hiddenColumnFields = uniq(__spreadArray(__spreadArray([], __read(selectedColumnFields), false), __read(lastHiddenColumnFields), false));\r\n    spreadsheet.setOptions({\r\n        interaction: {\r\n            hiddenColumnFields: hiddenColumnFields,\r\n        },\r\n    });\r\n    var displaySiblingNode = getHiddenColumnDisplaySiblingNode(spreadsheet, selectedColumnFields);\r\n    var currentHiddenColumnsInfo = {\r\n        hideColumnNodes: getHiddenColumnNodes(spreadsheet, selectedColumnFields),\r\n        displaySiblingNode: displaySiblingNode,\r\n    };\r\n    var hiddenColumnsDetail = __spreadArray(__spreadArray([], __read(lastHiddenColumnDetail), false), [\r\n        currentHiddenColumnsInfo,\r\n    ], false);\r\n    spreadsheet.emit(S2Event.LAYOUT_COLS_HIDDEN, currentHiddenColumnsInfo, hiddenColumnsDetail);\r\n    spreadsheet.store.set('hiddenColumnsDetail', hiddenColumnsDetail);\r\n    spreadsheet.interaction.reset();\r\n    spreadsheet.render(false);\r\n};\r\n/**\r\n * @name 获取配置的列头\r\n * @description 明细表: 配置的是 field,直接使用, 透视表: 需要将 field 转成布局之后的唯一id\r\n */\r\nexport var getColumns = function (spreadsheet) {\r\n    var _a = spreadsheet.dataCfg.fields.columns, columns = _a === void 0 ? [] : _a;\r\n    if (spreadsheet.isTableMode()) {\r\n        return columns;\r\n    }\r\n    return spreadsheet.getInitColumnLeafNodes().map(function (_a) {\r\n        var id = _a.id;\r\n        return id;\r\n    });\r\n};\r\n/**\r\n * @name 根据分组隐藏指定列\r\n * @description 根据配置的隐藏列自动分组, 批量隐藏\r\n */\r\nexport var hideColumnsByThunkGroup = function (spreadsheet, hiddenColumnFields, forceRender) {\r\n    if (hiddenColumnFields === void 0) { hiddenColumnFields = []; }\r\n    if (forceRender === void 0) { forceRender = false; }\r\n    var columns = getColumns(spreadsheet);\r\n    var hiddenColumnsGroup = getHiddenColumnsThunkGroup(columns, hiddenColumnFields);\r\n    hiddenColumnsGroup.forEach(function (fields) {\r\n        hideColumns(spreadsheet, fields, forceRender);\r\n    });\r\n};\r\nexport var isLastColumnAfterHidden = function (spreadsheet, columnField) {\r\n    var columnNodes = spreadsheet.getColumnNodes();\r\n    var initColumnLeafNodes = spreadsheet.getInitColumnLeafNodes();\r\n    var fieldKey = getHiddenColumnFieldKey(columnField);\r\n    return (get(last(columnNodes), fieldKey) === columnField &&\r\n        get(last(initColumnLeafNodes), fieldKey) !== columnField);\r\n};\r\nexport var getValidDisplaySiblingNode = function (displaySiblingNode) {\r\n    return (displaySiblingNode === null || displaySiblingNode === void 0 ? void 0 : displaySiblingNode.next) || (displaySiblingNode === null || displaySiblingNode === void 0 ? void 0 : displaySiblingNode.prev);\r\n};\r\nexport var getValidDisplaySiblingNodeId = function (displaySiblingNode) {\r\n    var node = getValidDisplaySiblingNode(displaySiblingNode);\r\n    return node === null || node === void 0 ? void 0 : node.id;\r\n};\r\nexport var isEqualDisplaySiblingNodeId = function (displaySiblingNode, nodeId) {\r\n    return getValidDisplaySiblingNodeId(displaySiblingNode) === nodeId;\r\n};\r\n//# sourceMappingURL=hide-columns.js.map","references":["F:/Ismart/S2-master/node_modules/@types/lodash/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/store.ts","F:/Ismart/S2-master/packages/s2-core/src/sheet-type/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/index.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/node.ts"],"map":"{\"version\":3,\"file\":\"hide-columns.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/hide-columns.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"F:/Ismart/S2-master/packages/s2-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/utils/hide-columns.d.ts","writeByteOrderMark":false,"text":"import { HiddenColumnsInfo } from \"../common/interface/store\";\r\nimport { SpreadSheet } from \"../sheet-type\";\r\nimport { Node } from \"../facet/layout/node\";\r\nexport declare const getHiddenColumnFieldKey: (field: string) => keyof Node;\r\n/**\r\n * @name 获取需要隐藏的 field 转成对应的 Node\r\n */\r\nexport declare const getHiddenColumnNodes: (spreadsheet: SpreadSheet, hiddenColumnFields?: string[]) => Node[];\r\n/**\r\n * @name 获取隐藏列兄弟节点\r\n * @description 获取当前隐藏列(兼容多选) 所对应为未隐藏的兄弟节点\r\n * @param hideColumns 经过分组的连续隐藏列\r\n   [ 1, 2, 3, -, -, -, (7 √), 8, 9 ]\r\n  [ 1, 2, 3, (4 √), - ]\r\n */\r\nexport declare const getHiddenColumnDisplaySiblingNode: (spreadsheet: SpreadSheet, hiddenColumnFields?: string[]) => HiddenColumnsInfo['displaySiblingNode'];\r\n/**\r\n * @name 获取隐藏列组\r\n * @description 如果给定的隐藏列不是连续的, 比如原始列是 [1,2,3,4,5,6,7], 隐藏列是 [2,3,6], 那么其实在表格上需要显示两个展开按钮\r\n   [[2,3],[6]]\r\n */\r\nexport declare const getHiddenColumnsThunkGroup: (columns: string[], hiddenColumnFields: string[]) => string[][];\r\n/**\r\n * @name 隐藏指定列\r\n * @description 1. 通过分析组件隐藏, 2. 点击列头隐藏\r\n   存储: 1.隐藏列所对应的兄弟节点 (显示展开按钮), 2.当前隐藏列 (点击展开按钮恢复隐藏)\r\n   重置交互: 比如选中当前列, 显示高亮背景色, 隐藏后需要取消高亮\r\n   钩子: 提供当前被隐藏的列, 和全量的隐藏组\r\n */\r\nexport declare const hideColumns: (spreadsheet: SpreadSheet, selectedColumnFields?: string[], forceRender?: boolean) => void;\r\n/**\r\n * @name 获取配置的列头\r\n * @description 明细表: 配置的是 field,直接使用, 透视表: 需要将 field 转成布局之后的唯一id\r\n */\r\nexport declare const getColumns: (spreadsheet: SpreadSheet) => string[];\r\n/**\r\n * @name 根据分组隐藏指定列\r\n * @description 根据配置的隐藏列自动分组, 批量隐藏\r\n */\r\nexport declare const hideColumnsByThunkGroup: (spreadsheet: SpreadSheet, hiddenColumnFields?: string[], forceRender?: boolean) => void;\r\nexport declare const isLastColumnAfterHidden: (spreadsheet: SpreadSheet, columnField: string) => boolean;\r\nexport declare const getValidDisplaySiblingNode: (displaySiblingNode: HiddenColumnsInfo['displaySiblingNode']) => Node;\r\nexport declare const getValidDisplaySiblingNodeId: (displaySiblingNode: HiddenColumnsInfo['displaySiblingNode']) => string;\r\nexport declare const isEqualDisplaySiblingNodeId: (displaySiblingNode: HiddenColumnsInfo['displaySiblingNode'], nodeId: string) => boolean;\r\n"}}
