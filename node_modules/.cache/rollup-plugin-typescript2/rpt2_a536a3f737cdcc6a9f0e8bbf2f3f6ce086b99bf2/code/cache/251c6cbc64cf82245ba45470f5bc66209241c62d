{"code":"import { __assign, __read, __spreadArray } from \"tslib\";\r\nimport { VALUE_FIELD } from \"../../common/constant/basic\";\r\nimport { copyToClipboard } from \"./\";\r\nimport { CellTypes, InteractionStateName } from \"../../common/constant/interaction\";\r\nexport function keyEqualTo(key, compareKey) {\r\n    if (!key || !compareKey) {\r\n        return false;\r\n    }\r\n    return String(key).toLowerCase() === String(compareKey).toLowerCase();\r\n}\r\nvar newLine = '\\r\\n';\r\nvar newTab = '\\t';\r\nvar getColNodeField = function (spreadsheet, id) {\r\n    var colNode = spreadsheet.getColumnNodes().find(function (col) { return col.id === id; });\r\n    if (spreadsheet.isPivotMode()) {\r\n        return colNode === null || colNode === void 0 ? void 0 : colNode.value;\r\n    }\r\n    return colNode === null || colNode === void 0 ? void 0 : colNode.field;\r\n};\r\nvar getFiledIdFromMeta = function (meta, spreadsheet) {\r\n    var ids = meta.id.split('-');\r\n    return getColNodeField(spreadsheet, ids[ids.length - 1]);\r\n};\r\nvar getHeaderNodeFromMeta = function (meta, spreadsheet) {\r\n    var _a = __read(meta.id.split('-'), 2), rowId = _a[0], colId = _a[1];\r\n    return [\r\n        spreadsheet.getRowNodes().find(function (row) { return row.id === rowId; }),\r\n        spreadsheet.getColumnNodes().find(function (col) { return col.id === colId; }),\r\n    ];\r\n};\r\nvar getFormat = function (cellId, spreadsheet) {\r\n    var ids = cellId.split('-');\r\n    var fieldId = getColNodeField(spreadsheet, ids[ids.length - 1]);\r\n    if (spreadsheet.options.interaction.copyWithFormat) {\r\n        return spreadsheet.dataSet.getFieldFormatter(fieldId);\r\n    }\r\n    return function (v) { return v; };\r\n};\r\nvar getValueFromMeta = function (meta, displayData, spreadsheet) {\r\n    if (spreadsheet.isPivotMode()) {\r\n        var _a = __read(getHeaderNodeFromMeta(meta, spreadsheet), 2), rowNode = _a[0], colNode = _a[1];\r\n        var cell = spreadsheet.dataSet.getCellData({\r\n            query: __assign(__assign({}, rowNode.query), colNode.query),\r\n            rowNode: rowNode,\r\n        });\r\n        return cell[VALUE_FIELD];\r\n    }\r\n    var fieldId = getFiledIdFromMeta(meta, spreadsheet);\r\n    return displayData[meta.rowIndex][fieldId];\r\n};\r\nvar format = function (meta, displayData, spreadsheet) {\r\n    var formatter = getFormat(meta.id, spreadsheet);\r\n    return formatter(getValueFromMeta(meta, displayData, spreadsheet));\r\n};\r\nexport var convertString = function (v) {\r\n    if (/\\n/.test(v)) {\r\n        // 单元格内换行\r\n        return '\"' + v.replace(/\\r\\n?/g, '\\n') + '\"';\r\n    }\r\n    return v;\r\n};\r\nexport var processCopyData = function (displayData, cells, spreadsheet) {\r\n    var getRowString = function (pre, cur) {\r\n        return pre +\r\n            (cur ? convertString(format(cur, displayData, spreadsheet)) : '') +\r\n            newTab;\r\n    };\r\n    var getColString = function (pre, cur) {\r\n        return pre + cur.reduce(getRowString, '').slice(0, -1) + newLine;\r\n    };\r\n    return cells.reduce(getColString, '').slice(0, -2);\r\n};\r\nexport var getTwoDimData = function (cells) {\r\n    if (!(cells === null || cells === void 0 ? void 0 : cells.length))\r\n        return [];\r\n    var _a = __read([\r\n        { row: Infinity, col: Infinity },\r\n        { row: 0, col: 0 },\r\n    ], 2), minCell = _a[0], maxCell = _a[1];\r\n    // get left-top cell and right-bottom cell position\r\n    cells.forEach(function (e) {\r\n        var rowIndex = e.rowIndex, colIndex = e.colIndex;\r\n        minCell.col = Math.min(colIndex, minCell.col);\r\n        minCell.row = Math.min(rowIndex, minCell.row);\r\n        maxCell.col = Math.max(colIndex, maxCell.col);\r\n        maxCell.row = Math.max(rowIndex, maxCell.row);\r\n    });\r\n    var _b = __read([\r\n        maxCell.row - minCell.row + 1,\r\n        maxCell.col - minCell.col + 1,\r\n    ], 2), rowLen = _b[0], colLen = _b[1];\r\n    var twoDimDataArray = new Array(rowLen)\r\n        .fill('')\r\n        .map(function () { return new Array(colLen).fill(''); });\r\n    cells.forEach(function (e) {\r\n        var rowIndex = e.rowIndex, colIndex = e.colIndex;\r\n        var _a = __read([rowIndex - minCell.row, colIndex - minCell.col], 2), diffRow = _a[0], diffCol = _a[1];\r\n        twoDimDataArray[diffRow][diffCol] = e;\r\n    });\r\n    return twoDimDataArray;\r\n};\r\nvar processTableColSelected = function (displayData, spreadsheet, selectedCols) {\r\n    var selectedFiled = selectedCols.length\r\n        ? selectedCols.map(function (e) { return getColNodeField(spreadsheet, e.id); })\r\n        : spreadsheet.dataCfg.fields.columns;\r\n    return displayData\r\n        .map(function (row) {\r\n        return selectedFiled\r\n            .map(function (filed) { return convertString(row[filed]); })\r\n            .join(newTab);\r\n    })\r\n        .join(newLine);\r\n};\r\nvar getPivotCopyData = function (spreadsheet, leafRows, leafCols) {\r\n    return leafRows\r\n        .map(function (rowNode) {\r\n        return leafCols\r\n            .map(function (colNode) {\r\n            var cellData = spreadsheet.dataSet.getCellData({\r\n                query: __assign(__assign({}, rowNode.query), colNode.query),\r\n                rowNode: rowNode,\r\n            });\r\n            return getFormat(colNode.id, spreadsheet)(cellData[VALUE_FIELD]);\r\n        })\r\n            .join(newTab);\r\n    })\r\n        .join(newLine);\r\n};\r\nvar processPivotColSelected = function (spreadsheet, selectedCols) {\r\n    var allRowLeafNodes = spreadsheet\r\n        .getRowNodes()\r\n        .filter(function (node) { return node.isLeaf; });\r\n    var allColLeafNodes = spreadsheet\r\n        .getColumnNodes()\r\n        .filter(function (node) { return node.isLeaf; });\r\n    var colNodes = selectedCols.length\r\n        ? selectedCols.reduce(function (arr, e) {\r\n            arr.push.apply(arr, __spreadArray([], __read(allColLeafNodes.filter(function (node) { return node.id.startsWith(e.id); })), false));\r\n            return arr;\r\n        }, [])\r\n        : allColLeafNodes;\r\n    return getPivotCopyData(spreadsheet, allRowLeafNodes, colNodes);\r\n};\r\nvar processColSelected = function (displayData, spreadsheet, selectedCols) {\r\n    if (spreadsheet.isPivotMode()) {\r\n        return processPivotColSelected(spreadsheet, selectedCols);\r\n    }\r\n    return processTableColSelected(displayData, spreadsheet, selectedCols);\r\n};\r\nvar processTableRowSelected = function (displayData, selectedRows) {\r\n    var selectedIndex = selectedRows.map(function (e) { return e.rowIndex; });\r\n    return displayData\r\n        .filter(function (e, i) { return selectedIndex.includes(i); })\r\n        .map(function (e) {\r\n        return Object.keys(e)\r\n            .map(function (key) { return convertString(e[key]); })\r\n            .join(newTab);\r\n    })\r\n        .join(newLine);\r\n};\r\nvar processPivotRowSelected = function (spreadsheet, selectedRows) {\r\n    var allRowLeafNodes = spreadsheet\r\n        .getRowNodes()\r\n        .filter(function (node) { return node.isLeaf; });\r\n    var allColLeafNodes = spreadsheet\r\n        .getColumnNodes()\r\n        .filter(function (node) { return node.isLeaf; });\r\n    var rowNodes = selectedRows.reduce(function (arr, e) {\r\n        arr.push.apply(arr, __spreadArray([], __read(allRowLeafNodes.filter(function (node) { return node.id.startsWith(e.id); })), false));\r\n        return arr;\r\n    }, []);\r\n    return getPivotCopyData(spreadsheet, rowNodes, allColLeafNodes);\r\n};\r\nvar processRowSelected = function (displayData, spreadsheet, selectedRows) {\r\n    if (spreadsheet.isPivotMode()) {\r\n        return processPivotRowSelected(spreadsheet, selectedRows);\r\n    }\r\n    return processTableRowSelected(displayData, selectedRows);\r\n};\r\nexport var getSelectedData = function (spreadsheet) {\r\n    var interaction = spreadsheet.interaction;\r\n    var cells = interaction.getState().cells || [];\r\n    var data;\r\n    var selectedCols = cells.filter(function (_a) {\r\n        var type = _a.type;\r\n        return type === CellTypes.COL_CELL;\r\n    });\r\n    var selectedRows = cells.filter(function (_a) {\r\n        var type = _a.type;\r\n        return type === CellTypes.ROW_CELL;\r\n    });\r\n    var displayData = spreadsheet.dataSet.getDisplayDataSet();\r\n    if (spreadsheet.isPivotMode() && spreadsheet.isHierarchyTreeType()) {\r\n        // 树状模式透视表之后实现\r\n        return;\r\n    }\r\n    if (interaction.getCurrentStateName() === InteractionStateName.ALL_SELECTED) {\r\n        data = processColSelected(displayData, spreadsheet, []);\r\n    }\r\n    else if (selectedCols.length) {\r\n        data = processColSelected(displayData, spreadsheet, selectedCols);\r\n    }\r\n    else if (selectedRows.length) {\r\n        data = processRowSelected(displayData, spreadsheet, selectedRows);\r\n    }\r\n    else {\r\n        if (!cells.length) {\r\n            return;\r\n        }\r\n        // normal selected\r\n        data = processCopyData(displayData, getTwoDimData(cells), spreadsheet);\r\n    }\r\n    if (data) {\r\n        copyToClipboard(data);\r\n    }\r\n    return data;\r\n};\r\n//# sourceMappingURL=copy.js.map","references":["F:/Ismart/S2-master/packages/s2-core/src/common/constant/basic.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/export/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/index.ts","F:/Ismart/S2-master/packages/s2-core/src/sheet-type/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/interaction.ts","F:/Ismart/S2-master/packages/s2-core/src/data-set/interface.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/node.ts"],"map":"{\"version\":3,\"file\":\"copy.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/utils/export/copy.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"F:/Ismart/S2-master/packages/s2-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/utils/export/copy.d.ts","writeByteOrderMark":false,"text":"import { CellMeta } from \"../../common/interface\";\r\nimport { SpreadSheet } from \"../../sheet-type\";\r\nimport { DataType } from \"../../data-set/interface\";\r\nexport declare function keyEqualTo(key: string, compareKey: string): boolean;\r\nexport declare const convertString: (v: string) => string;\r\nexport declare const processCopyData: (displayData: DataType[], cells: CellMeta[][], spreadsheet: SpreadSheet) => string;\r\nexport declare const getTwoDimData: (cells: CellMeta[]) => CellMeta[][];\r\nexport declare const getSelectedData: (spreadsheet: SpreadSheet) => string;\r\n"}}
