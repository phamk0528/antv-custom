{"code":"import { concat, filter, find, forEach, isEmpty, isNil, map } from 'lodash';\r\nimport { getCellMeta } from \"../utils/interaction/select-event\";\r\nimport { DataCellClick, MergedCellClick, RowColumnClick, RowTextClick, } from './base-interaction/click';\r\nimport { HoverEvent } from './base-interaction/hover';\r\nimport { EventController } from './event-controller';\r\nimport { RangeSelection } from './range-selection';\r\nimport { SelectedCellMove } from './selected-cell-move';\r\nimport { BrushSelection, DataCellMultiSelection, RowColumnResize } from './';\r\nimport { hideColumnsByThunkGroup } from \"../utils/hide-columns\";\r\nimport { Node } from \"../facet/layout/node\";\r\nimport { ColCell, DataCell } from \"../cell\";\r\nimport { CellTypes, InteractionName, InteractionStateName, INTERACTION_STATE_INFO_KEY, InterceptType, S2Event, } from \"../common/constant\";\r\nimport { ColHeader, RowHeader } from \"../facet/header\";\r\nimport { getAllChildCells } from \"../utils/get-all-child-cells\";\r\nimport { clearState, setState } from \"../utils/interaction/state-controller\";\r\nimport { isMobile } from \"../utils/is-mobile\";\r\nimport { mergeCell, unmergeCell } from \"../utils/interaction/merge-cell\";\r\nvar RootInteraction = /** @class */ (function () {\r\n    function RootInteraction(spreadsheet) {\r\n        var _this = this;\r\n        this.interactions = new Map();\r\n        // 用来标记需要拦截的交互，interaction和本身的hover等事件可能会有冲突，有冲突时在此屏蔽\r\n        this.intercepts = new Set();\r\n        // hover有keep-hover态，是个计时器，hover后800毫秒还在当前cell的情况下，该cell进入keep-hover状态\r\n        // 在任何触发点击，或者点击空白区域时，说明已经不是hover了，因此需要取消这个计时器。\r\n        this.hoverTimer = null;\r\n        this.defaultState = {\r\n            cells: [],\r\n            force: false,\r\n        };\r\n        this.selectAll = function () {\r\n            _this.changeState({\r\n                stateName: InteractionStateName.ALL_SELECTED,\r\n            });\r\n        };\r\n        this.selectHeaderCell = function (selectHeaderCellInfo) {\r\n            var cell = (selectHeaderCellInfo || {}).cell;\r\n            if (isEmpty(cell)) {\r\n                return;\r\n            }\r\n            var lastState = _this.getState();\r\n            var meta = cell === null || cell === void 0 ? void 0 : cell.getMeta();\r\n            if (isNil(meta.x)) {\r\n                return;\r\n            }\r\n            _this.addIntercepts([InterceptType.HOVER]);\r\n            // 树状结构的行头点击不需要遍历当前行头的所有子节点，因为只会有一级\r\n            var leafNodes = (selectHeaderCellInfo === null || selectHeaderCellInfo === void 0 ? void 0 : selectHeaderCellInfo.isTreeRowClick)\r\n                ? Node.getAllLeavesOfNode(meta).filter(function (node) { return node.rowIndex === meta.rowIndex; })\r\n                : Node.getAllChildrenNode(meta);\r\n            var selectedCells = [getCellMeta(cell)];\r\n            if ((selectHeaderCellInfo === null || selectHeaderCellInfo === void 0 ? void 0 : selectHeaderCellInfo.isMultiSelection) && _this.isSelectedState()) {\r\n                selectedCells = isEmpty(lastState === null || lastState === void 0 ? void 0 : lastState.cells)\r\n                    ? selectedCells\r\n                    : concat(lastState === null || lastState === void 0 ? void 0 : lastState.cells, selectedCells);\r\n                leafNodes = isEmpty(lastState === null || lastState === void 0 ? void 0 : lastState.nodes)\r\n                    ? leafNodes\r\n                    : concat(lastState === null || lastState === void 0 ? void 0 : lastState.nodes, leafNodes);\r\n            }\r\n            // 兼容行列多选\r\n            // Set the header cells (colCell or RowCell)  selected information and update the dataCell state.\r\n            _this.changeState({\r\n                cells: selectedCells,\r\n                nodes: leafNodes,\r\n                stateName: InteractionStateName.SELECTED,\r\n            });\r\n            var selectedCellIds = selectedCells.map(function (_a) {\r\n                var id = _a.id;\r\n                return id;\r\n            });\r\n            // Update the interaction state of all the selected cells:  header cells(colCell or RowCell) and dataCells belong to them.\r\n            _this.updateCells(_this.getRowColActiveCells(selectedCellIds));\r\n            if (!(selectHeaderCellInfo === null || selectHeaderCellInfo === void 0 ? void 0 : selectHeaderCellInfo.isTreeRowClick)) {\r\n                leafNodes.forEach(function (node) {\r\n                    var _a;\r\n                    (_a = node === null || node === void 0 ? void 0 : node.belongsCell) === null || _a === void 0 ? void 0 : _a.updateByState(InteractionStateName.SELECTED, node.belongsCell);\r\n                });\r\n            }\r\n            _this.spreadsheet.emit(S2Event.GLOBAL_SELECTED, _this.getActiveCells());\r\n            return true;\r\n        };\r\n        this.mergeCells = function (cellsInfo, hideData) {\r\n            mergeCell(_this.spreadsheet, cellsInfo, hideData);\r\n        };\r\n        this.unmergeCell = function (removedCells) {\r\n            unmergeCell(_this.spreadsheet, removedCells);\r\n        };\r\n        this.spreadsheet = spreadsheet;\r\n        this.registerEventController();\r\n        this.registerInteractions();\r\n    }\r\n    RootInteraction.prototype.destroy = function () {\r\n        this.interactions.clear();\r\n        this.intercepts.clear();\r\n        this.eventController.clear();\r\n        this.clearHoverTimer();\r\n        this.resetState();\r\n    };\r\n    RootInteraction.prototype.reset = function () {\r\n        this.clearState();\r\n        this.clearHoverTimer();\r\n        this.intercepts.clear();\r\n        this.spreadsheet.hideTooltip();\r\n    };\r\n    RootInteraction.prototype.setState = function (interactionStateInfo) {\r\n        setState(this.spreadsheet, interactionStateInfo);\r\n    };\r\n    RootInteraction.prototype.getState = function () {\r\n        return (this.spreadsheet.store.get(INTERACTION_STATE_INFO_KEY) ||\r\n            this.defaultState);\r\n    };\r\n    RootInteraction.prototype.setInteractedCells = function (cell) {\r\n        var interactedCells = this.getInteractedCells().concat([cell]);\r\n        var state = this.getState();\r\n        state.interactedCells = interactedCells;\r\n        this.setState(state);\r\n    };\r\n    RootInteraction.prototype.getInteractedCells = function () {\r\n        var currentState = this.getState();\r\n        return (currentState === null || currentState === void 0 ? void 0 : currentState.interactedCells) || [];\r\n    };\r\n    RootInteraction.prototype.resetState = function () {\r\n        this.spreadsheet.store.set(INTERACTION_STATE_INFO_KEY, this.defaultState);\r\n    };\r\n    RootInteraction.prototype.getCurrentStateName = function () {\r\n        return this.getState().stateName;\r\n    };\r\n    RootInteraction.prototype.isEqualStateName = function (stateName) {\r\n        return this.getCurrentStateName() === stateName;\r\n    };\r\n    RootInteraction.prototype.isStateOf = function (stateName) {\r\n        var currentState = this.getState();\r\n        return (currentState === null || currentState === void 0 ? void 0 : currentState.stateName) === stateName;\r\n    };\r\n    RootInteraction.prototype.isSelectedState = function () {\r\n        return this.isStateOf(InteractionStateName.SELECTED);\r\n    };\r\n    RootInteraction.prototype.isHoverFocusState = function () {\r\n        return this.isStateOf(InteractionStateName.HOVER_FOCUS);\r\n    };\r\n    RootInteraction.prototype.isHoverState = function () {\r\n        return this.isStateOf(InteractionStateName.HOVER);\r\n    };\r\n    RootInteraction.prototype.isActiveCell = function (cell) {\r\n        return this.getCells().find(function (meta) { return cell.getMeta().id === meta.id; });\r\n    };\r\n    RootInteraction.prototype.isSelectedCell = function (cell) {\r\n        return this.isSelectedState() && this.isActiveCell(cell);\r\n    };\r\n    // 获取当前 interaction 记录的 Cells 元信息列表，包括不在可视区域内的格子\r\n    RootInteraction.prototype.getCells = function () {\r\n        var currentState = this.getState();\r\n        return (currentState === null || currentState === void 0 ? void 0 : currentState.cells) || [];\r\n    };\r\n    // 获取 cells 中在可视区域内的实例列表\r\n    RootInteraction.prototype.getActiveCells = function () {\r\n        var ids = this.getCells().map(function (item) { return item.id; });\r\n        var allCells = this.getAllCells();\r\n        // 这里的顺序要以 ids 中的顺序为准，代表点击 cell 的顺序\r\n        return map(ids, function (id) {\r\n            return find(allCells, function (cell) { var _a; return ((_a = cell === null || cell === void 0 ? void 0 : cell.getMeta()) === null || _a === void 0 ? void 0 : _a.id) === id; });\r\n        }).filter(function (cell) { return cell; }); // 去除 undefined\r\n    };\r\n    RootInteraction.prototype.clearStyleIndependent = function () {\r\n        var currentState = this.getState();\r\n        if ((currentState === null || currentState === void 0 ? void 0 : currentState.stateName) === InteractionStateName.SELECTED ||\r\n            (currentState === null || currentState === void 0 ? void 0 : currentState.stateName) === InteractionStateName.HOVER) {\r\n            this.getPanelGroupAllDataCells().forEach(function (cell) {\r\n                cell.hideInteractionShape();\r\n            });\r\n        }\r\n    };\r\n    RootInteraction.prototype.getPanelGroupAllUnSelectedDataCells = function () {\r\n        var _this = this;\r\n        return this.getPanelGroupAllDataCells().filter(function (cell) { return !_this.isActiveCell(cell); });\r\n    };\r\n    RootInteraction.prototype.getPanelGroupAllDataCells = function () {\r\n        var _a;\r\n        return getAllChildCells((_a = this.spreadsheet.panelGroup) === null || _a === void 0 ? void 0 : _a.getChildren(), DataCell);\r\n    };\r\n    RootInteraction.prototype.getAllRowHeaderCells = function () {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        var children = (_a = this.spreadsheet.foregroundGroup) === null || _a === void 0 ? void 0 : _a.getChildren();\r\n        var rowHeader = (_b = filter(children, function (group) { return group instanceof RowHeader; })) === null || _b === void 0 ? void 0 : _b[0];\r\n        var currentNode = (_c = rowHeader === null || rowHeader === void 0 ? void 0 : rowHeader.cfg) === null || _c === void 0 ? void 0 : _c.children;\r\n        if (isEmpty(currentNode)) {\r\n            return [];\r\n        }\r\n        while (!((_d = currentNode === null || currentNode === void 0 ? void 0 : currentNode[0]) === null || _d === void 0 ? void 0 : _d.cellType)) {\r\n            currentNode = (_f = (_e = currentNode === null || currentNode === void 0 ? void 0 : currentNode[0]) === null || _e === void 0 ? void 0 : _e.cfg) === null || _f === void 0 ? void 0 : _f.children;\r\n        }\r\n        var rowCells = currentNode || [];\r\n        return rowCells.filter(function (cell) { return cell.cellType === CellTypes.ROW_CELL; });\r\n    };\r\n    RootInteraction.prototype.getAllColHeaderCells = function () {\r\n        var _a, _b, _c;\r\n        var children = (_b = (_a = this.spreadsheet) === null || _a === void 0 ? void 0 : _a.foregroundGroup) === null || _b === void 0 ? void 0 : _b.getChildren();\r\n        var colHeader = filter(children, function (group) { return group instanceof ColHeader; })[0];\r\n        var headerChildren = (_c = colHeader === null || colHeader === void 0 ? void 0 : colHeader.cfg) === null || _c === void 0 ? void 0 : _c.children;\r\n        if (isEmpty(headerChildren)) {\r\n            return [];\r\n        }\r\n        var colCells = getAllChildCells(headerChildren, ColCell);\r\n        return colCells.filter(function (cell) { return cell.cellType === CellTypes.COL_CELL; });\r\n    };\r\n    RootInteraction.prototype.getRowColActiveCells = function (ids) {\r\n        return concat(this.getAllRowHeaderCells(), this.getAllColHeaderCells()).filter(function (item) { return ids.includes(item.getMeta().id); });\r\n    };\r\n    RootInteraction.prototype.getAllCells = function () {\r\n        return concat(this.getPanelGroupAllDataCells(), this.getAllRowHeaderCells(), this.getAllColHeaderCells());\r\n    };\r\n    RootInteraction.prototype.hideColumns = function (hiddenColumnFields) {\r\n        if (hiddenColumnFields === void 0) { hiddenColumnFields = []; }\r\n        hideColumnsByThunkGroup(this.spreadsheet, hiddenColumnFields, true);\r\n    };\r\n    RootInteraction.prototype.getDefaultInteractions = function () {\r\n        var _a = this.spreadsheet.options.interaction, resize = _a.resize, brushSelection = _a.brushSelection, multiSelection = _a.multiSelection, rangeSelection = _a.rangeSelection, selectedCellMove = _a.selectedCellMove;\r\n        return [\r\n            {\r\n                key: InteractionName.DATA_CELL_CLICK,\r\n                interaction: DataCellClick,\r\n            },\r\n            {\r\n                key: InteractionName.ROW_COLUMN_CLICK,\r\n                interaction: RowColumnClick,\r\n            },\r\n            {\r\n                key: InteractionName.ROW_TEXT_CLICK,\r\n                interaction: RowTextClick,\r\n            },\r\n            {\r\n                key: InteractionName.MERGED_CELLS_CLICK,\r\n                interaction: MergedCellClick,\r\n            },\r\n            {\r\n                key: InteractionName.HOVER,\r\n                interaction: HoverEvent,\r\n                enable: !isMobile(),\r\n            },\r\n            {\r\n                key: InteractionName.BRUSH_SELECTION,\r\n                interaction: BrushSelection,\r\n                enable: !isMobile() && brushSelection,\r\n            },\r\n            {\r\n                key: InteractionName.COL_ROW_RESIZE,\r\n                interaction: RowColumnResize,\r\n                enable: !isMobile() && resize,\r\n            },\r\n            {\r\n                key: InteractionName.DATA_CELL_MULTI_SELECTION,\r\n                interaction: DataCellMultiSelection,\r\n                enable: !isMobile() && multiSelection,\r\n            },\r\n            {\r\n                key: InteractionName.RANGE_SELECTION,\r\n                interaction: RangeSelection,\r\n                enable: !isMobile() && rangeSelection,\r\n            },\r\n            {\r\n                key: InteractionName.SELECTED_CELL_MOVE,\r\n                interaction: SelectedCellMove,\r\n                enable: !isMobile() && selectedCellMove,\r\n            },\r\n        ];\r\n    };\r\n    RootInteraction.prototype.registerInteractions = function () {\r\n        var _this = this;\r\n        var customInteractions = this.spreadsheet.options.interaction.customInteractions;\r\n        this.interactions.clear();\r\n        var defaultInteractions = this.getDefaultInteractions();\r\n        defaultInteractions.forEach(function (_a) {\r\n            var key = _a.key, Interaction = _a.interaction, enable = _a.enable;\r\n            if (enable !== false) {\r\n                _this.interactions.set(key, new Interaction(_this.spreadsheet));\r\n            }\r\n        });\r\n        if (!isEmpty(customInteractions)) {\r\n            forEach(customInteractions, function (customInteraction) {\r\n                var CustomInteractionClass = customInteraction.interaction;\r\n                _this.interactions.set(customInteraction.key, new CustomInteractionClass(_this.spreadsheet));\r\n            });\r\n        }\r\n    };\r\n    RootInteraction.prototype.registerEventController = function () {\r\n        this.eventController = new EventController(this.spreadsheet);\r\n    };\r\n    RootInteraction.prototype.draw = function () {\r\n        this.spreadsheet.container.draw();\r\n    };\r\n    RootInteraction.prototype.clearState = function () {\r\n        clearState(this.spreadsheet);\r\n        this.draw();\r\n    };\r\n    RootInteraction.prototype.changeState = function (interactionStateInfo) {\r\n        var interaction = this.spreadsheet.interaction;\r\n        var cells = interactionStateInfo.cells, force = interactionStateInfo.force, stateName = interactionStateInfo.stateName;\r\n        if (isEmpty(cells) && stateName === InteractionStateName.SELECTED) {\r\n            if (force) {\r\n                interaction.changeState({\r\n                    cells: [],\r\n                    stateName: InteractionStateName.UNSELECTED,\r\n                });\r\n            }\r\n            return;\r\n        }\r\n        this.clearState();\r\n        this.setState(interactionStateInfo);\r\n        this.updatePanelGroupAllDataCells();\r\n        this.draw();\r\n    };\r\n    RootInteraction.prototype.updatePanelGroupAllDataCells = function () {\r\n        this.updateCells(this.getPanelGroupAllDataCells());\r\n    };\r\n    RootInteraction.prototype.updateCells = function (cells) {\r\n        if (cells === void 0) { cells = []; }\r\n        cells.forEach(function (cell) {\r\n            cell.update();\r\n        });\r\n    };\r\n    RootInteraction.prototype.addIntercepts = function (interceptTypes) {\r\n        var _this = this;\r\n        if (interceptTypes === void 0) { interceptTypes = []; }\r\n        interceptTypes.forEach(function (interceptType) {\r\n            _this.intercepts.add(interceptType);\r\n        });\r\n    };\r\n    RootInteraction.prototype.hasIntercepts = function (interceptTypes) {\r\n        var _this = this;\r\n        if (interceptTypes === void 0) { interceptTypes = []; }\r\n        return interceptTypes.some(function (interceptType) {\r\n            return _this.intercepts.has(interceptType);\r\n        });\r\n    };\r\n    RootInteraction.prototype.removeIntercepts = function (interceptTypes) {\r\n        var _this = this;\r\n        if (interceptTypes === void 0) { interceptTypes = []; }\r\n        interceptTypes.forEach(function (interceptType) {\r\n            _this.intercepts.delete(interceptType);\r\n        });\r\n    };\r\n    RootInteraction.prototype.clearHoverTimer = function () {\r\n        clearTimeout(this.hoverTimer);\r\n    };\r\n    RootInteraction.prototype.setHoverTimer = function (timer) {\r\n        this.hoverTimer = timer;\r\n    };\r\n    RootInteraction.prototype.getHoverTimer = function () {\r\n        return this.hoverTimer;\r\n    };\r\n    return RootInteraction;\r\n}());\r\nexport { RootInteraction };\r\n//# sourceMappingURL=root.js.map","references":["F:/Ismart/S2-master/node_modules/@types/lodash/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/interaction/select-event.ts","F:/Ismart/S2-master/node_modules/@antv/g-canvas/lib/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/interaction/base-interaction/click/index.ts","F:/Ismart/S2-master/packages/s2-core/src/interaction/base-interaction/hover.ts","F:/Ismart/S2-master/packages/s2-core/src/interaction/event-controller.ts","F:/Ismart/S2-master/packages/s2-core/src/interaction/range-selection.ts","F:/Ismart/S2-master/packages/s2-core/src/interaction/selected-cell-move.ts","F:/Ismart/S2-master/packages/s2-core/src/interaction/index.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/hide-columns.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/node.ts","F:/Ismart/S2-master/packages/s2-core/src/cell/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/index.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/header/index.ts","F:/Ismart/S2-master/packages/s2-core/src/interaction/base-event.ts","F:/Ismart/S2-master/packages/s2-core/src/sheet-type/index.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/get-all-child-cells.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/interaction/state-controller.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/is-mobile.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/interaction/merge-cell.ts"],"map":"{\"version\":3,\"file\":\"root.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/interaction/root.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"F:/Ismart/S2-master/packages/s2-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/interaction/root.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"node\" />\r\nimport { EventController } from './event-controller';\r\nimport { ColCell, DataCell, MergedCell, RowCell } from \"../cell\";\r\nimport { InteractionStateName, InterceptType } from \"../common/constant\";\r\nimport { InteractionStateInfo, Intercept, MergedCellInfo, S2CellType, SelectHeaderCellInfo } from \"../common/interface\";\r\nimport { BaseEvent } from \"./base-event\";\r\nimport { SpreadSheet } from \"../sheet-type\";\r\nexport declare class RootInteraction {\r\n    spreadsheet: SpreadSheet;\r\n    interactions: Map<string, BaseEvent>;\r\n    intercepts: Set<Intercept>;\r\n    private hoverTimer;\r\n    eventController: EventController;\r\n    private defaultState;\r\n    constructor(spreadsheet: SpreadSheet);\r\n    destroy(): void;\r\n    reset(): void;\r\n    setState(interactionStateInfo: InteractionStateInfo): void;\r\n    getState(): InteractionStateInfo;\r\n    setInteractedCells(cell: S2CellType): void;\r\n    getInteractedCells(): S2CellType<import(\"../common/interface\").ViewMeta>[];\r\n    resetState(): void;\r\n    getCurrentStateName(): InteractionStateName;\r\n    isEqualStateName(stateName: InteractionStateName): boolean;\r\n    private isStateOf;\r\n    isSelectedState(): boolean;\r\n    isHoverFocusState(): boolean;\r\n    isHoverState(): boolean;\r\n    isActiveCell(cell: S2CellType): import(\"../common/interface\").CellMeta;\r\n    isSelectedCell(cell: S2CellType): import(\"../common/interface\").CellMeta;\r\n    getCells(): import(\"../common/interface\").CellMeta[];\r\n    getActiveCells(): S2CellType<import(\"../common/interface\").ViewMeta>[];\r\n    clearStyleIndependent(): void;\r\n    getPanelGroupAllUnSelectedDataCells(): DataCell[];\r\n    getPanelGroupAllDataCells(): DataCell[];\r\n    getAllRowHeaderCells(): RowCell[];\r\n    getAllColHeaderCells(): ColCell[];\r\n    getRowColActiveCells(ids: string[]): S2CellType<import(\"../common/interface\").ViewMeta>[];\r\n    getAllCells(): S2CellType<import(\"../common/interface\").ViewMeta>[];\r\n    selectAll: () => void;\r\n    selectHeaderCell: (selectHeaderCellInfo: SelectHeaderCellInfo) => boolean;\r\n    mergeCells: (cellsInfo?: MergedCellInfo[], hideData?: boolean) => void;\r\n    unmergeCell: (removedCells: MergedCell) => void;\r\n    hideColumns(hiddenColumnFields?: string[]): void;\r\n    private getDefaultInteractions;\r\n    private registerInteractions;\r\n    private registerEventController;\r\n    draw(): void;\r\n    clearState(): void;\r\n    changeState(interactionStateInfo: InteractionStateInfo): void;\r\n    updatePanelGroupAllDataCells(): void;\r\n    updateCells(cells?: S2CellType[]): void;\r\n    addIntercepts(interceptTypes?: InterceptType[]): void;\r\n    hasIntercepts(interceptTypes?: InterceptType[]): boolean;\r\n    removeIntercepts(interceptTypes?: InterceptType[]): void;\r\n    clearHoverTimer(): void;\r\n    setHoverTimer(timer: NodeJS.Timeout): void;\r\n    getHoverTimer(): NodeJS.Timeout;\r\n}\r\n"}}
