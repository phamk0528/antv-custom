{"code":"import { isEmpty } from 'lodash';\r\nexport var shouldShowActionIcons = function (actionIconCfg, meta, cellType) {\r\n    if (!actionIconCfg) {\r\n        return false;\r\n    }\r\n    var iconNames = actionIconCfg.iconNames, displayCondition = actionIconCfg.displayCondition, belongsCell = actionIconCfg.belongsCell;\r\n    if (isEmpty(iconNames)) {\r\n        return false;\r\n    }\r\n    if (belongsCell !== cellType) {\r\n        return false;\r\n    }\r\n    if (!displayCondition) {\r\n        // 没有展示条件参数默认全展示\r\n        return true;\r\n    }\r\n    return displayCondition(meta);\r\n};\r\n//# sourceMappingURL=header-cell.js.map","references":["F:/Ismart/S2-master/packages/s2-core/src/facet/layout/node.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/basic.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/index.ts","F:/Ismart/S2-master/node_modules/@types/lodash/index.d.ts"],"map":"{\"version\":3,\"file\":\"header-cell.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/utils/cell/header-cell.ts\"],\"names\":[],\"mappings\":\"AAGA,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AAEjC,MAAM,CAAC,IAAM,qBAAqB,GAAG,UACnC,aAA+B,EAC/B,IAAU,EACV,QAAmB;IAEnB,IAAI,CAAC,aAAa,EAAE;QAClB,OAAO,KAAK,CAAC;KACd;IACO,IAAA,SAAS,GAAoC,aAAa,UAAjD,EAAE,gBAAgB,GAAkB,aAAa,iBAA/B,EAAE,WAAW,GAAK,aAAa,YAAlB,CAAmB;IAEnE,IAAI,OAAO,CAAC,SAAS,CAAC,EAAE;QACtB,OAAO,KAAK,CAAC;KACd;IACD,IAAI,WAAW,KAAK,QAAQ,EAAE;QAC5B,OAAO,KAAK,CAAC;KACd;IACD,IAAI,CAAC,gBAAgB,EAAE;QACrB,gBAAgB;QAChB,OAAO,IAAI,CAAC;KACb;IACD,OAAO,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAChC,CAAC,CAAC\"}","dts":{"name":"F:/Ismart/S2-master/packages/s2-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/utils/cell/header-cell.d.ts","writeByteOrderMark":false,"text":"import { Node } from \"../../facet/layout/node\";\r\nimport { HeaderActionIcon } from \"../../common/interface/basic\";\r\nimport { CellTypes } from \"../../common/constant\";\r\nexport declare const shouldShowActionIcons: (actionIconCfg: HeaderActionIcon, meta: Node, cellType: CellTypes) => boolean;\r\n"}}
