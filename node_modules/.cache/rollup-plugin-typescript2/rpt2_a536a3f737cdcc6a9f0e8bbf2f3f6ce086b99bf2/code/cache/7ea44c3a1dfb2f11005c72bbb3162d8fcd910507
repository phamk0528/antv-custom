{"code":"import { __extends } from \"tslib\";\r\n/**\r\n * @Description: 请严格要求 svg 的 viewBox，若设计产出的 svg 不是此规格，请叫其修改为 '0 0 1024 1024'\r\n */\r\nimport { Group, Shape } from '@antv/g-canvas';\r\nimport { omit, clone } from 'lodash';\r\nimport { getIcon } from './factory';\r\nvar STYLE_PLACEHOLDER = '<svg';\r\n// Image 缓存\r\nvar ImageCache = {};\r\n/**\r\n * 使用 iconfont 上的 svg 来创建 Icon\r\n */\r\nvar GuiIcon = /** @class */ (function (_super) {\r\n    __extends(GuiIcon, _super);\r\n    function GuiIcon(cfg) {\r\n        var _this = _super.call(this, cfg) || this;\r\n        _this.hasSupportSuffix = function (image) {\r\n            return ['.png', '.jpg', '.gif', '.svg'].some(function (suffix) {\r\n                return image === null || image === void 0 ? void 0 : image.endsWith(suffix);\r\n            });\r\n        };\r\n        _this.render();\r\n        return _this;\r\n    }\r\n    // 获取 Image 实例，使用缓存，以避免滚动时因重复的 new Image() 耗时导致的闪烁问题\r\n    /* 异步获取 image 实例 */\r\n    GuiIcon.prototype.getImage = function (name, cacheKey, fill) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var img = new Image();\r\n            // 成功\r\n            img.onload = function () {\r\n                ImageCache[cacheKey] = img;\r\n                resolve(img);\r\n            };\r\n            // 失败\r\n            img.onerror = function (e) {\r\n                reject(e);\r\n            };\r\n            var svg = getIcon(name);\r\n            // 兼容三种情况\r\n            // 1、base 64\r\n            // 2、svg本地文件（兼容老方式，可以改颜色）\r\n            // 3、线上支持的图片地址\r\n            if (svg &&\r\n                (svg.includes('data:image/svg+xml') || _this.hasSupportSuffix(svg))) {\r\n                // 传入 base64 字符串\r\n                // 或者 online 链接\r\n                img.src = svg;\r\n            }\r\n            else if (svg) {\r\n                // 传入 svg 字符串（支持颜色fill）\r\n                if (fill) {\r\n                    // 如果有fill，移除原来的 fill\r\n                    // 这里有一个潜在的问题，不同的svg里面的schema不尽相同，导致这个正则考虑不全\r\n                    // 1、fill='' 2、fill 3、fill-***(不需要处理)\r\n                    // eslint-disable-next-line no-useless-escape\r\n                    svg = svg.replace(/fill=[\\'\\\"]#?\\w+[\\'\\\"]/g, ''); // 移除 fill=\"red|#fff\"\r\n                    svg = svg.replace(/fill>/g, '>'); // fill> 替换为 >\r\n                }\r\n                // https://www.chromestatus.com/features/5656049583390720\r\n                // # 井号不能当做svg的body，这个bug在chrome72已经修复.\r\n                svg = svg\r\n                    .replace(STYLE_PLACEHOLDER, \"\".concat(STYLE_PLACEHOLDER, \" fill=\\\"\").concat(fill, \"\\\"\"))\r\n                    .replace(/#/g, '%23');\r\n                img.src = \"data:image/svg+xml;utf-8,\".concat(svg);\r\n            }\r\n        });\r\n    };\r\n    GuiIcon.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.cfg, name = _a.name, fill = _a.fill;\r\n        var attrs = clone(this.cfg);\r\n        var image = new Shape.Image({\r\n            attrs: omit(attrs, 'fill'),\r\n        });\r\n        var cacheKey = \"\".concat(name, \"-\").concat(fill);\r\n        var img = ImageCache[cacheKey];\r\n        if (img) {\r\n            // already in cache\r\n            image.attr('img', img);\r\n            this.addShape('image', image);\r\n        }\r\n        else {\r\n            this.getImage(name, cacheKey, fill)\r\n                .then(function (value) {\r\n                image.attr('img', value);\r\n                _this.addShape('image', image);\r\n            })\r\n                .catch(function (err) {\r\n                // eslint-disable-next-line no-console\r\n                console.warn(\"GuiIcon \".concat(name, \" load error\"), err);\r\n            });\r\n        }\r\n        this.image = image;\r\n    };\r\n    return GuiIcon;\r\n}(Group));\r\nexport { GuiIcon };\r\n//# sourceMappingURL=gui-icon.js.map","references":["F:/Ismart/S2-master/node_modules/@antv/g-canvas/lib/index.d.ts","F:/Ismart/S2-master/node_modules/@types/lodash/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/common/icons/factory.ts"],"map":"{\"version\":3,\"file\":\"gui-icon.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/common/icons/gui-icon.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"F:/Ismart/S2-master/packages/s2-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/common/icons/gui-icon.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @Description: 请严格要求 svg 的 viewBox，若设计产出的 svg 不是此规格，请叫其修改为 '0 0 1024 1024'\r\n */\r\nimport { Group, ShapeAttrs } from '@antv/g-canvas';\r\nexport interface GuiIconCfg extends ShapeAttrs {\r\n    readonly name: string;\r\n}\r\n/**\r\n * 使用 iconfont 上的 svg 来创建 Icon\r\n */\r\nexport declare class GuiIcon extends Group {\r\n    private image;\r\n    constructor(cfg: GuiIconCfg);\r\n    private getImage;\r\n    hasSupportSuffix: (image: string) => boolean;\r\n    private render;\r\n}\r\n"}}
