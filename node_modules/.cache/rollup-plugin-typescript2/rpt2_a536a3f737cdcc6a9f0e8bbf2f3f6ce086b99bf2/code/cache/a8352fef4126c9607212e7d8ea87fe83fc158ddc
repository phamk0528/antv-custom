{"code":"import { __read, __spreadArray } from \"tslib\";\r\nimport { isEmpty } from 'lodash';\r\n/**\r\n * 是否在 视窗索引范围中\r\n * @param x\r\n * @param y\r\n * @param indexes\r\n */\r\nexport var isXYInRange = function (x, y, indexes) {\r\n    var _a = __read(indexes, 4), xMin = _a[0], xMax = _a[1], yMin = _a[2], yMax = _a[3];\r\n    return x >= xMin && x <= xMax && y >= yMin && y <= yMax;\r\n};\r\nexport var allIndexes = function (indexes) {\r\n    var _a = __read(indexes, 4), minI = _a[0], maxI = _a[1], minJ = _a[2], maxJ = _a[3];\r\n    var r = [];\r\n    for (var i = minI; i <= maxI; i += 1) {\r\n        for (var j = minJ; j <= maxJ; j += 1) {\r\n            r.push([i, j]);\r\n        }\r\n    }\r\n    return r;\r\n};\r\n/**\r\n * 计算两个 indexes 的 diff，获取 sourceIndexes -> targetIndexes 过程中新增的和移除的index\r\n * @param sourceIndexes\r\n * @param targetIndexes\r\n */\r\nexport var diffIndexes = function (sourceIndexes, targetIndexes) {\r\n    var add = [];\r\n    var remove = [];\r\n    // source 为空\r\n    if (isEmpty(sourceIndexes)) {\r\n        if (isEmpty(targetIndexes)) {\r\n            // 都为空\r\n            return { add: add, remove: remove };\r\n        }\r\n        // target 不为空\r\n        return { add: allIndexes(targetIndexes), remove: remove };\r\n    }\r\n    // source 不为空，target 为空\r\n    if (isEmpty(targetIndexes)) {\r\n        return { add: add, remove: allIndexes(sourceIndexes) };\r\n    }\r\n    var _a = __read(sourceIndexes, 4), sourceMinI = _a[0], sourceMaxI = _a[1], sourceMinJ = _a[2], sourceMaxJ = _a[3];\r\n    var _b = __read(targetIndexes, 4), targetMinI = _b[0], targetMaxI = _b[1], targetMinJ = _b[2], targetMaxJ = _b[3];\r\n    // sourceIndexes -> targetIndexes 过程中，remove 掉的单元格\r\n    for (var i = sourceMinI; i <= sourceMaxI; i++) {\r\n        for (var j = sourceMinJ; j <= sourceMaxJ; j++) {\r\n            if (!isXYInRange(i, j, targetIndexes)) {\r\n                remove.push([i, j]);\r\n            }\r\n        }\r\n    }\r\n    // sourceIndexes -> targetIndexes 过程中，add 新增的单元格\r\n    for (var i = targetMinI; i <= targetMaxI; i += 1) {\r\n        for (var j = targetMinJ; j <= targetMaxJ; j += 1) {\r\n            if (!isXYInRange(i, j, sourceIndexes)) {\r\n                add.push([i, j]);\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        add: add,\r\n        remove: remove,\r\n    };\r\n};\r\n/**\r\n * 计算 Panel 下所有子 Group的 Indexes Diff\r\n */\r\nexport var diffPanelIndexes = function (sourceIndexes, targetIndexes) {\r\n    var allAdd = [];\r\n    var allRemove = [];\r\n    Object.keys(targetIndexes).forEach(function (key) {\r\n        var _a = diffIndexes((sourceIndexes === null || sourceIndexes === void 0 ? void 0 : sourceIndexes[key]) || [], targetIndexes[key]), add = _a.add, remove = _a.remove;\r\n        allAdd.push.apply(allAdd, __spreadArray([], __read(add), false));\r\n        allRemove.push.apply(allRemove, __spreadArray([], __read(remove), false));\r\n    });\r\n    return {\r\n        add: allAdd,\r\n        remove: allRemove,\r\n    };\r\n};\r\n//# sourceMappingURL=indexes.js.map","references":["F:/Ismart/S2-master/node_modules/@types/lodash/index.d.ts"],"map":"{\"version\":3,\"file\":\"indexes.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/indexes.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"F:/Ismart/S2-master/packages/s2-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/utils/indexes.d.ts","writeByteOrderMark":false,"text":"export declare type Indexes = [number, number, number, number];\r\nexport declare type PanelIndexes = {\r\n    center: Indexes;\r\n    frozenRow?: Indexes;\r\n    frozenCol?: Indexes;\r\n    frozenTrailingRow?: Indexes;\r\n    frozenTrailingCol?: Indexes;\r\n};\r\nexport interface Diff {\r\n    add: [number, number][];\r\n    remove: [number, number][];\r\n}\r\n/**\r\n * 是否在 视窗索引范围中\r\n * @param x\r\n * @param y\r\n * @param indexes\r\n */\r\nexport declare const isXYInRange: (x: number, y: number, indexes: number[]) => boolean;\r\nexport declare const allIndexes: (indexes: Indexes) => any[];\r\n/**\r\n * 计算两个 indexes 的 diff，获取 sourceIndexes -> targetIndexes 过程中新增的和移除的index\r\n * @param sourceIndexes\r\n * @param targetIndexes\r\n */\r\nexport declare const diffIndexes: (sourceIndexes: Indexes, targetIndexes: Indexes) => Diff;\r\n/**\r\n * 计算 Panel 下所有子 Group的 Indexes Diff\r\n */\r\nexport declare const diffPanelIndexes: (sourceIndexes: PanelIndexes, targetIndexes: PanelIndexes) => Diff;\r\n"}}
