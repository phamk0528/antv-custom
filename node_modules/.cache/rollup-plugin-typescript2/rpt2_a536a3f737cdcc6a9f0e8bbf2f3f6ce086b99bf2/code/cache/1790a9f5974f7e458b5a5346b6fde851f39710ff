{"code":"import { __assign, __extends, __read, __spreadArray, __values } from \"tslib\";\r\nimport { compact, each, find, get, has, includes, isEmpty, isUndefined, keys, uniq, values, filter, forEach, unset, isNumber, difference, every, first, } from 'lodash';\r\nimport { Node } from \"../facet/layout/node\";\r\nimport { filterUndefined, flatten as customFlatten, flattenDeep as customFlattenDeep, getFieldKeysByDimensionValues, getListBySorted, isEveryUndefined, splitTotal, isTotalData, } from \"../utils/data-set-operate\";\r\nimport { EXTRA_FIELD, TOTAL_VALUE, VALUE_FIELD, ID_SEPARATOR, } from \"../common/constant\";\r\nimport { DebuggerUtil, DEBUG_TRANSFORM_DATA } from \"../common/debug\";\r\nimport { i18n } from \"../common/i18n\";\r\nimport { BaseDataSet } from \"./base-data-set\";\r\nimport { handleSortAction } from \"../utils/sort-action\";\r\nimport { transformIndexesData, getDataPath, getQueryDimValues, deleteMetaById, getDimensionsWithoutPathPre, } from \"../utils/dataset/pivot-data-set\";\r\nimport { calcActionByType } from \"../utils/number-calculate\";\r\nimport { getAggregationAndCalcFuncByQuery } from \"../utils/data-set-operate\";\r\nvar PivotDataSet = /** @class */ (function (_super) {\r\n    __extends(PivotDataSet, _super);\r\n    function PivotDataSet() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        // each path items max index\r\n        _this.pathIndexMax = [];\r\n        /**\r\n         * 排序优先级：\r\n         * 1、sortParams里的条件优先级高于原始数据\r\n         * 2、sortParams多个item：按照顺序优先级，排在后面的优先级高\r\n         * 3、item中多个条件：sortByField > sortFunc > sortBy > sortMethod\r\n         */\r\n        _this.handleDimensionValuesSort = function () {\r\n            each(_this.sortParams, function (item) {\r\n                var sortFieldId = item.sortFieldId, sortByMeasure = item.sortByMeasure;\r\n                // 万物排序的前提\r\n                if (!sortFieldId)\r\n                    return;\r\n                var originValues = __spreadArray([], __read((_this.sortedDimensionValues[sortFieldId] || [])), false);\r\n                var result = handleSortAction({\r\n                    dataSet: _this,\r\n                    sortParam: item,\r\n                    originValues: originValues,\r\n                    isSortByMeasure: !isEmpty(sortByMeasure),\r\n                });\r\n                _this.sortedDimensionValues[sortFieldId] = result;\r\n            });\r\n        };\r\n        _this.getCustomData = function (path) {\r\n            var _a;\r\n            var hadUndefined = false;\r\n            var currentData = _this.indexesData;\r\n            var _loop_1 = function (i) {\r\n                var current = path[i];\r\n                if (hadUndefined) {\r\n                    if (isUndefined(current)) {\r\n                        currentData = customFlatten(currentData);\r\n                    }\r\n                    else {\r\n                        currentData = (_a = values(currentData)) === null || _a === void 0 ? void 0 : _a.map(function (d) { return d && get(d, current); });\r\n                    }\r\n                }\r\n                else if (isUndefined(current)) {\r\n                    hadUndefined = true;\r\n                }\r\n                else {\r\n                    currentData = currentData === null || currentData === void 0 ? void 0 : currentData[current];\r\n                }\r\n            };\r\n            for (var i = 0; i < path.length; i++) {\r\n                _loop_1(i);\r\n            }\r\n            return currentData;\r\n        };\r\n        _this.getTotalStatus = function (query) {\r\n            var _a = _this.fields, columns = _a.columns, rows = _a.rows;\r\n            var isTotals = function (dimensions, isSubTotal) {\r\n                if (isSubTotal) {\r\n                    var firstDimension = find(dimensions, function (item) { return !has(query, item); });\r\n                    return firstDimension && firstDimension !== first(dimensions);\r\n                }\r\n                return every(dimensions, function (item) { return !has(query, item); });\r\n            };\r\n            var getDimensions = function (dimensions, hasExtra) {\r\n                return hasExtra\r\n                    ? dimensions.filter(function (item) { return item !== EXTRA_FIELD; })\r\n                    : dimensions;\r\n            };\r\n            return {\r\n                isRowTotal: isTotals(getDimensions(rows, !_this.spreadsheet.isValueInCols())),\r\n                isRowSubTotal: isTotals(rows, true),\r\n                isColTotal: isTotals(getDimensions(columns, _this.spreadsheet.isValueInCols())),\r\n                isColSubTotal: isTotals(columns, true),\r\n            };\r\n        };\r\n        return _this;\r\n    }\r\n    /**\r\n     * When data related config changed, we need\r\n     * 1、re-process config\r\n     * 2、re-transform origin data\r\n     * 3、sort and other things\r\n     * @param dataCfg\r\n     */\r\n    PivotDataSet.prototype.setDataCfg = function (dataCfg) {\r\n        var _this = this;\r\n        _super.prototype.setDataCfg.call(this, dataCfg);\r\n        this.sortedDimensionValues = {};\r\n        this.rowPivotMeta = new Map();\r\n        this.colPivotMeta = new Map();\r\n        // total data in raw data scene.\r\n        this.totalData = []\r\n            .concat(splitTotal(dataCfg.data, dataCfg.fields))\r\n            .concat(this.totalData);\r\n        DebuggerUtil.getInstance().debugCallback(DEBUG_TRANSFORM_DATA, function () {\r\n            var _a = _this.fields, rows = _a.rows, columns = _a.columns;\r\n            var indexesData = transformIndexesData({\r\n                rows: rows,\r\n                columns: columns,\r\n                originData: _this.originData,\r\n                totalData: _this.totalData,\r\n                indexesData: _this.indexesData,\r\n                sortedDimensionValues: _this.sortedDimensionValues,\r\n                rowPivotMeta: _this.rowPivotMeta,\r\n                colPivotMeta: _this.colPivotMeta,\r\n            }).indexesData;\r\n            _this.indexesData = indexesData;\r\n        });\r\n        this.handleDimensionValuesSort();\r\n    };\r\n    /**\r\n     * Provide a way to append some drill-down data in indexesData\r\n     * @param extraRowField\r\n     * @param drillDownData\r\n     * @param rowNode\r\n     */\r\n    PivotDataSet.prototype.transformDrillDownData = function (extraRowField, drillDownData, rowNode) {\r\n        var _this = this;\r\n        var _a;\r\n        var _b = this.fields, columns = _b.columns, dataValues = _b.values;\r\n        var currentRowFields = Node.getFieldPath(rowNode, true);\r\n        var nextRowFields = __spreadArray(__spreadArray([], __read(currentRowFields), false), [extraRowField], false);\r\n        var store = this.spreadsheet.store;\r\n        // 1、通过values在data中注入额外的维度信息，并分离`明细数据`&`汇总数据`\r\n        var transformedData = this.standardTransform(drillDownData, dataValues);\r\n        var totalData = splitTotal(transformedData, {\r\n            columns: this.fields.columns,\r\n            rows: nextRowFields,\r\n        });\r\n        var originData = difference(transformedData, totalData);\r\n        // 2. 检查该节点是否已经存在下钻维度\r\n        var rowNodeId = rowNode === null || rowNode === void 0 ? void 0 : rowNode.id;\r\n        var idPathMap = (_a = store.get('drillDownIdPathMap')) !== null && _a !== void 0 ? _a : new Map();\r\n        if (idPathMap.has(rowNodeId)) {\r\n            // the current node has a drill-down field, clean it\r\n            forEach(idPathMap.get(rowNodeId), function (path) {\r\n                unset(_this.indexesData, path);\r\n            });\r\n            deleteMetaById(this.rowPivotMeta, rowNodeId);\r\n        }\r\n        // 3、转换数据\r\n        var _c = transformIndexesData({\r\n            rows: nextRowFields,\r\n            columns: columns,\r\n            originData: originData,\r\n            totalData: totalData,\r\n            indexesData: this.indexesData,\r\n            sortedDimensionValues: this.sortedDimensionValues,\r\n            rowPivotMeta: this.rowPivotMeta,\r\n            colPivotMeta: this.colPivotMeta,\r\n        }), drillDownDataPaths = _c.paths, indexesData = _c.indexesData, rowPivotMeta = _c.rowPivotMeta, colPivotMeta = _c.colPivotMeta, sortedDimensionValues = _c.sortedDimensionValues;\r\n        this.indexesData = indexesData;\r\n        this.rowPivotMeta = rowPivotMeta;\r\n        this.colPivotMeta = colPivotMeta;\r\n        this.sortedDimensionValues = sortedDimensionValues;\r\n        // 4、record data paths by nodeId\r\n        // set new drill-down data path\r\n        idPathMap.set(rowNodeId, drillDownDataPaths);\r\n        store.set('drillDownIdPathMap', idPathMap);\r\n    };\r\n    /**\r\n     * Clear drill down data by rowNodeId\r\n     * rowNodeId is undefined => clear all\r\n     * @param rowNodeId\r\n     */\r\n    PivotDataSet.prototype.clearDrillDownData = function (rowNodeId) {\r\n        var _this = this;\r\n        var store = this.spreadsheet.store;\r\n        var idPathMap = store.get('drillDownIdPathMap');\r\n        if (!idPathMap) {\r\n            return;\r\n        }\r\n        var drillDownDataCache = store.get('drillDownDataCache', []);\r\n        if (rowNodeId) {\r\n            // 1. 删除 indexesData 当前下钻层级对应数据\r\n            var currentIdPathMap = idPathMap.get(rowNodeId);\r\n            if (currentIdPathMap) {\r\n                forEach(currentIdPathMap, function (path) {\r\n                    unset(_this.indexesData, path);\r\n                });\r\n            }\r\n            // 2. 删除 rowPivotMeta 当前下钻层级对应 meta 信息\r\n            deleteMetaById(this.rowPivotMeta, rowNodeId);\r\n            // 3. 删除下钻缓存路径\r\n            idPathMap.delete(rowNodeId);\r\n            // 4. 过滤清除的下钻缓存\r\n            var restDataCache = filter(drillDownDataCache, function (cache) {\r\n                return idPathMap.has(cache === null || cache === void 0 ? void 0 : cache.rowId);\r\n            });\r\n            store.set('drillDownDataCache', restDataCache);\r\n            // 5. 过滤清除的下钻层级\r\n            var restDrillLevels_1 = restDataCache.map(function (cache) { return cache === null || cache === void 0 ? void 0 : cache.drillLevel; });\r\n            var drillDownFieldInLevel = store.get('drillDownFieldInLevel', []);\r\n            var restFieldInLevel = drillDownFieldInLevel.filter(function (filed) {\r\n                return includes(restDrillLevels_1, filed === null || filed === void 0 ? void 0 : filed.drillLevel);\r\n            });\r\n            store.set('drillDownFieldInLevel', restFieldInLevel);\r\n        }\r\n        else {\r\n            idPathMap.clear();\r\n            // 需要对应清空所有下钻后的dataCfg信息\r\n            // 因此如果缓存有下钻前原始dataCfg，需要清空所有的下钻数据\r\n            var originalDataCfg = this.spreadsheet.store.get('originalDataCfg');\r\n            if (!isEmpty(originalDataCfg)) {\r\n                this.spreadsheet.setDataCfg(originalDataCfg);\r\n            }\r\n            // 清空所有的下钻信息\r\n            this.spreadsheet.store.set('drillItemsNum', -1);\r\n            this.spreadsheet.store.set('drillDownDataCache', []);\r\n            this.spreadsheet.store.set('drillDownFieldInLevel', []);\r\n        }\r\n        store.set('drillDownIdPathMap', idPathMap);\r\n    };\r\n    PivotDataSet.prototype.standardTransform = function (originData, fieldsValues) {\r\n        if (isEmpty(fieldsValues)) {\r\n            return originData;\r\n        }\r\n        var transformedData = [];\r\n        forEach(fieldsValues, function (value) {\r\n            forEach(originData, function (dataItem) {\r\n                var _a;\r\n                if (has(dataItem, value)) {\r\n                    transformedData.push(__assign(__assign({}, dataItem), (_a = {}, _a[EXTRA_FIELD] = value, _a[VALUE_FIELD] = dataItem[value], _a)));\r\n                }\r\n            });\r\n        });\r\n        return transformedData;\r\n    };\r\n    PivotDataSet.prototype.processDataCfg = function (dataCfg) {\r\n        var data = dataCfg.data, _a = dataCfg.meta, meta = _a === void 0 ? [] : _a, fields = dataCfg.fields, _b = dataCfg.sortParams, sortParams = _b === void 0 ? [] : _b, totalData = dataCfg.totalData;\r\n        var columns = fields.columns, rows = fields.rows, values = fields.values, valueInCols = fields.valueInCols, customValueOrder = fields.customValueOrder;\r\n        var newColumns = columns;\r\n        var newRows = rows;\r\n        if (valueInCols) {\r\n            newColumns = this.isCustomMeasuresPosition(customValueOrder)\r\n                ? this.handleCustomMeasuresOrder(customValueOrder, newColumns)\r\n                : uniq(__spreadArray(__spreadArray([], __read(columns), false), [EXTRA_FIELD], false));\r\n        }\r\n        else {\r\n            newRows = this.isCustomMeasuresPosition(customValueOrder)\r\n                ? this.handleCustomMeasuresOrder(customValueOrder, newRows)\r\n                : uniq(__spreadArray(__spreadArray([], __read(rows), false), [EXTRA_FIELD], false));\r\n        }\r\n        var valueFormatter = function (value) {\r\n            var findOne = find(meta, function (mt) { return mt.field === value; });\r\n            return get(findOne, 'name', value);\r\n        };\r\n        var newMeta = __spreadArray(__spreadArray([], __read(meta), false), [\r\n            // 虚拟列字段，为文本分类字段\r\n            {\r\n                field: EXTRA_FIELD,\r\n                name: i18n('数值'),\r\n                formatter: function (value) { return valueFormatter(value); },\r\n            },\r\n        ], false);\r\n        var newData = this.standardTransform(data, values);\r\n        var newTotalData = this.standardTransform(totalData, values);\r\n        // 返回新的结构\r\n        return {\r\n            data: newData,\r\n            meta: newMeta,\r\n            fields: __assign(__assign({}, fields), { rows: newRows, columns: newColumns, values: values }),\r\n            totalData: newTotalData,\r\n            sortParams: sortParams,\r\n        };\r\n    };\r\n    PivotDataSet.prototype.getDimensionValues = function (field, query) {\r\n        var e_1, _a;\r\n        var _b, _c;\r\n        var _d = this.fields || {}, _e = _d.rows, rows = _e === void 0 ? [] : _e, _f = _d.columns, columns = _f === void 0 ? [] : _f;\r\n        var meta = new Map();\r\n        var dimensions = [];\r\n        if (includes(rows, field)) {\r\n            meta = this.rowPivotMeta;\r\n            dimensions = rows;\r\n        }\r\n        else if (includes(columns, field)) {\r\n            meta = this.colPivotMeta;\r\n            dimensions = columns;\r\n        }\r\n        if (!isEmpty(query)) {\r\n            var sortedMeta = [];\r\n            var dimensionValuePath = [];\r\n            var _loop_2 = function (dimension) {\r\n                var value = get(query, dimension);\r\n                dimensionValuePath.push(\"\".concat(value));\r\n                var cacheKey = dimensionValuePath.join(\"\".concat(ID_SEPARATOR));\r\n                if (meta.has(value) && !isUndefined(value)) {\r\n                    var childField_1 = (_b = meta.get(value)) === null || _b === void 0 ? void 0 : _b.childField;\r\n                    meta = meta.get(value).children;\r\n                    if (find(this_1.sortParams, function (item) { return item.sortFieldId === childField_1; }) &&\r\n                        this_1.sortedDimensionValues[childField_1]) {\r\n                        var dimensionValues = (_c = this_1.sortedDimensionValues[childField_1]) === null || _c === void 0 ? void 0 : _c.filter(function (item) { return item === null || item === void 0 ? void 0 : item.includes(cacheKey); });\r\n                        sortedMeta = getDimensionsWithoutPathPre(__spreadArray([], __read(dimensionValues), false));\r\n                    }\r\n                    else {\r\n                        sortedMeta = __spreadArray([], __read(meta.keys()), false);\r\n                    }\r\n                }\r\n            };\r\n            var this_1 = this;\r\n            try {\r\n                for (var dimensions_1 = __values(dimensions), dimensions_1_1 = dimensions_1.next(); !dimensions_1_1.done; dimensions_1_1 = dimensions_1.next()) {\r\n                    var dimension = dimensions_1_1.value;\r\n                    _loop_2(dimension);\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (dimensions_1_1 && !dimensions_1_1.done && (_a = dimensions_1.return)) _a.call(dimensions_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            if (isEmpty(sortedMeta)) {\r\n                return [];\r\n            }\r\n            return filterUndefined(getListBySorted(__spreadArray([], __read(meta.keys()), false), sortedMeta));\r\n        }\r\n        if (this.sortedDimensionValues[field]) {\r\n            return filterUndefined(getDimensionsWithoutPathPre(__spreadArray([], __read(this.sortedDimensionValues[field]), false)));\r\n        }\r\n        return filterUndefined(__spreadArray([], __read(meta.keys()), false));\r\n    };\r\n    PivotDataSet.prototype.getTotalValue = function (query) {\r\n        var _a;\r\n        var _b;\r\n        var _c = getAggregationAndCalcFuncByQuery(this.getTotalStatus(query), (_b = this.spreadsheet.options) === null || _b === void 0 ? void 0 : _b.totals) || {}, aggregation = _c.aggregation, calcFunc = _c.calcFunc;\r\n        var calcAction = calcActionByType[aggregation];\r\n        // 前端计算汇总值\r\n        if (calcAction || calcFunc) {\r\n            var data = this.getMultiData(query);\r\n            var totalValue = void 0;\r\n            if (calcFunc) {\r\n                totalValue = calcFunc(query, data);\r\n            }\r\n            else if (calcAction) {\r\n                totalValue = calcAction(data, VALUE_FIELD);\r\n            }\r\n            return __assign(__assign({}, query), (_a = {}, _a[VALUE_FIELD] = totalValue, _a[query[EXTRA_FIELD]] = totalValue, _a));\r\n        }\r\n    };\r\n    PivotDataSet.prototype.getCellData = function (params) {\r\n        var _a, _b, _c;\r\n        var _d = params || {}, query = _d.query, rowNode = _d.rowNode, _e = _d.isTotals, isTotals = _e === void 0 ? false : _e;\r\n        var _f = this.fields, columns = _f.columns, originRows = _f.rows;\r\n        var rows = originRows;\r\n        var drillDownIdPathMap = (_a = this.spreadsheet) === null || _a === void 0 ? void 0 : _a.store.get('drillDownIdPathMap');\r\n        // 判断当前是否为下钻节点\r\n        // 需检查 rowNode.id 是否属于下钻根节点(drillDownIdPathMap.keys)的下属节点\r\n        var isDrillDown = Array.from((_b = drillDownIdPathMap === null || drillDownIdPathMap === void 0 ? void 0 : drillDownIdPathMap.keys()) !== null && _b !== void 0 ? _b : []).some(function (parentPath) { return rowNode.id.startsWith(parentPath); });\r\n        // 如果是下钻结点，小计行维度在 originRows 中并不存在\r\n        if (!isTotals || isDrillDown) {\r\n            rows = (_c = Node.getFieldPath(rowNode, isDrillDown)) !== null && _c !== void 0 ? _c : originRows;\r\n        }\r\n        var rowDimensionValues = getQueryDimValues(rows, query);\r\n        var colDimensionValues = getQueryDimValues(columns, query);\r\n        var path = getDataPath({\r\n            rowDimensionValues: rowDimensionValues,\r\n            colDimensionValues: colDimensionValues,\r\n            careUndefined: isTotals || isTotalData([].concat(originRows).concat(columns), query),\r\n            rowPivotMeta: this.rowPivotMeta,\r\n            colPivotMeta: this.colPivotMeta,\r\n        });\r\n        var data = get(this.indexesData, path);\r\n        if (data) {\r\n            // 如果已经有数据则取已有数据\r\n            return data;\r\n        }\r\n        return isTotals ? this.getTotalValue(query) : data;\r\n    };\r\n    PivotDataSet.prototype.getMultiData = function (query, isTotals, isRow, drillDownFields) {\r\n        var _a;\r\n        if (isEmpty(query)) {\r\n            return compact(customFlattenDeep(this.indexesData));\r\n        }\r\n        var _b = this.fields, rows = _b.rows, columns = _b.columns, valueList = _b.values;\r\n        var totalRows = !isEmpty(drillDownFields)\r\n            ? rows.concat(drillDownFields)\r\n            : rows;\r\n        var rowDimensionValues = getQueryDimValues(totalRows, query);\r\n        var colDimensionValues = getQueryDimValues(columns, query);\r\n        var path = getDataPath({\r\n            rowDimensionValues: rowDimensionValues,\r\n            colDimensionValues: colDimensionValues,\r\n            careUndefined: true,\r\n            isFirstCreate: true,\r\n            rowPivotMeta: this.rowPivotMeta,\r\n            colPivotMeta: this.colPivotMeta,\r\n        });\r\n        var currentData = this.getCustomData(path);\r\n        var result = compact(customFlatten(currentData));\r\n        if (isTotals) {\r\n            // 总计/小计（行/列）\r\n            // need filter extra data\r\n            // grand total =>  {$$extra$$: 'price'}\r\n            // sub total => {$$extra$$: 'price', category: 'xxxx'}\r\n            // [undefined, undefined, \"price\"] => [category]\r\n            var fieldKeys_1 = [];\r\n            var rowKeys = getFieldKeysByDimensionValues(rowDimensionValues, rows);\r\n            var colKeys = getFieldKeysByDimensionValues(colDimensionValues, columns);\r\n            if (isRow) {\r\n                // 行总计\r\n                fieldKeys_1 = rowKeys;\r\n            }\r\n            else {\r\n                // 只有一个值，此时为列总计\r\n                var isCol = ((_a = keys(query)) === null || _a === void 0 ? void 0 : _a.length) === 1 && has(query, EXTRA_FIELD);\r\n                if (isCol) {\r\n                    fieldKeys_1 = colKeys;\r\n                }\r\n                else {\r\n                    var getTotalStatus = function (dimensions) {\r\n                        return isEveryUndefined(dimensions === null || dimensions === void 0 ? void 0 : dimensions.filter(function (item) { return !(valueList === null || valueList === void 0 ? void 0 : valueList.includes(item)); }));\r\n                    };\r\n                    var isRowTotal = getTotalStatus(colDimensionValues);\r\n                    var isColTotal = getTotalStatus(rowDimensionValues);\r\n                    if (isRowTotal) {\r\n                        // 行小计\r\n                        fieldKeys_1 = rowKeys;\r\n                    }\r\n                    else if (isColTotal) {\r\n                        // 列小计\r\n                        fieldKeys_1 = colKeys;\r\n                    }\r\n                    else {\r\n                        // 行小计+列 or 列小计+行\r\n                        fieldKeys_1 = __spreadArray(__spreadArray([], __read(rowKeys), false), __read(colKeys), false);\r\n                    }\r\n                }\r\n            }\r\n            result = result.filter(function (r) {\r\n                return !(fieldKeys_1 === null || fieldKeys_1 === void 0 ? void 0 : fieldKeys_1.find(function (item) { var _a; return item !== EXTRA_FIELD && ((_a = keys(r)) === null || _a === void 0 ? void 0 : _a.includes(item)); }));\r\n            });\r\n        }\r\n        return result || [];\r\n    };\r\n    PivotDataSet.prototype.getFieldFormatter = function (field, cellMeta) {\r\n        // 兼容总计小计场景\r\n        if (field === TOTAL_VALUE) {\r\n            return this.getFieldFormatterForTotalValue(cellMeta);\r\n        }\r\n        return _super.prototype.getFieldFormatter.call(this, field);\r\n    };\r\n    PivotDataSet.prototype.getFieldFormatterForTotalValue = function (cellMeta) {\r\n        var valueField;\r\n        // 当数据置于行头时，小计总计列尝试去找对应的指标\r\n        if (!this.spreadsheet.isValueInCols() && cellMeta) {\r\n            valueField = get(cellMeta.rowQuery, EXTRA_FIELD);\r\n        }\r\n        // 如果没有找到对应指标，则默认取第一个维度\r\n        valueField = valueField !== null && valueField !== void 0 ? valueField : get(this.fields.values, 0);\r\n        return _super.prototype.getFieldFormatter.call(this, valueField);\r\n    };\r\n    /**\r\n     * 自定义度量组位置值\r\n     * @param customValueOrder 用户配置度量组位置，从 0 开始\r\n     * @param fields Rows || Columns\r\n     */\r\n    PivotDataSet.prototype.handleCustomMeasuresOrder = function (customValueOrder, fields) {\r\n        var newFields = uniq(__spreadArray([], __read(fields), false));\r\n        if (fields.length >= customValueOrder) {\r\n            newFields.splice(customValueOrder, 0, EXTRA_FIELD);\r\n            return newFields;\r\n        }\r\n        // 当用户配置的度量组位置大于等于度量组数量时，默认放在最后\r\n        return __spreadArray(__spreadArray([], __read(newFields), false), [EXTRA_FIELD], false);\r\n    };\r\n    // 是否开启自定义度量组位置值\r\n    PivotDataSet.prototype.isCustomMeasuresPosition = function (customValueOrder) {\r\n        return isNumber(customValueOrder);\r\n    };\r\n    return PivotDataSet;\r\n}(BaseDataSet));\r\nexport { PivotDataSet };\r\n//# sourceMappingURL=pivot-data-set.js.map","references":["F:/Ismart/S2-master/node_modules/@types/lodash/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/node.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/data-set-operate.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/debug/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/i18n/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/index.ts","F:/Ismart/S2-master/packages/s2-core/src/data-set/base-data-set.ts","F:/Ismart/S2-master/packages/s2-core/src/data-set/interface.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/sort-action.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/dataset/pivot-data-set.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/number-calculate.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/data-set-operate.ts"],"map":"{\"version\":3,\"file\":\"pivot-data-set.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/data-set/pivot-data-set.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"F:/Ismart/S2-master/packages/s2-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/data-set/pivot-data-set.d.ts","writeByteOrderMark":false,"text":"import { Node } from \"../facet/layout/node\";\r\nimport { Data, Formatter, S2DataConfig, ViewMeta } from \"../common/interface\";\r\nimport { BaseDataSet } from \"./base-data-set\";\r\nimport { CellDataParams, DataType, PivotMeta, SortedDimensionValues } from \"./interface\";\r\nexport declare class PivotDataSet extends BaseDataSet {\r\n    rowPivotMeta: PivotMeta;\r\n    colPivotMeta: PivotMeta;\r\n    sortedDimensionValues: SortedDimensionValues;\r\n    protected pathIndexMax: any[];\r\n    /**\r\n     * When data related config changed, we need\r\n     * 1、re-process config\r\n     * 2、re-transform origin data\r\n     * 3、sort and other things\r\n     * @param dataCfg\r\n     */\r\n    setDataCfg(dataCfg: S2DataConfig): void;\r\n    /**\r\n     * Provide a way to append some drill-down data in indexesData\r\n     * @param extraRowField\r\n     * @param drillDownData\r\n     * @param rowNode\r\n     */\r\n    transformDrillDownData(extraRowField: string, drillDownData: DataType[], rowNode: Node): void;\r\n    /**\r\n     * Clear drill down data by rowNodeId\r\n     * rowNodeId is undefined => clear all\r\n     * @param rowNodeId\r\n     */\r\n    clearDrillDownData(rowNodeId?: string): void;\r\n    /**\r\n     * 排序优先级：\r\n     * 1、sortParams里的条件优先级高于原始数据\r\n     * 2、sortParams多个item：按照顺序优先级，排在后面的优先级高\r\n     * 3、item中多个条件：sortByField > sortFunc > sortBy > sortMethod\r\n     */\r\n    handleDimensionValuesSort: () => void;\r\n    protected standardTransform(originData: Data[], fieldsValues: string[]): any[];\r\n    processDataCfg(dataCfg: S2DataConfig): S2DataConfig;\r\n    getDimensionValues(field: string, query?: DataType): string[];\r\n    getTotalValue(query: DataType): {\r\n        $$value$$: number;\r\n    };\r\n    getCellData(params: CellDataParams): DataType;\r\n    getCustomData: (path: number[]) => DataType | DataType[] | DataType[][];\r\n    getTotalStatus: (query: DataType) => {\r\n        isRowTotal: boolean;\r\n        isRowSubTotal: boolean;\r\n        isColTotal: boolean;\r\n        isColSubTotal: boolean;\r\n    };\r\n    getMultiData(query: DataType, isTotals?: boolean, isRow?: boolean, drillDownFields?: string[]): DataType[];\r\n    getFieldFormatter(field: string, cellMeta?: ViewMeta): Formatter;\r\n    private getFieldFormatterForTotalValue;\r\n    /**\r\n     * 自定义度量组位置值\r\n     * @param customValueOrder 用户配置度量组位置，从 0 开始\r\n     * @param fields Rows || Columns\r\n     */\r\n    private handleCustomMeasuresOrder;\r\n    private isCustomMeasuresPosition;\r\n}\r\n"}}
