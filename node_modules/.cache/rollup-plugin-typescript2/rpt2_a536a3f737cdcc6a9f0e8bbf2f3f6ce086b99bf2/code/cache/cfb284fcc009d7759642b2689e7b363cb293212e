{"code":"export {};\r\n//# sourceMappingURL=theme.js.map","references":["F:/Ismart/S2-master/node_modules/@antv/g-canvas/lib/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/interaction.ts"],"map":"{\"version\":3,\"file\":\"theme.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/common/interface/theme.ts\"],\"names\":[],\"mappings\":\"\"}","dts":{"name":"F:/Ismart/S2-master/packages/s2-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/common/interface/theme.d.ts","writeByteOrderMark":false,"text":"import { ShapeAttrs } from '@antv/g-canvas';\r\nimport { InteractionStateName } from '../constant';\r\nimport { CellTypes } from \"../constant/interaction\";\r\nexport declare type TextAlign = 'left' | 'center' | 'right';\r\nexport declare type TextBaseline = 'top' | 'middle' | 'bottom';\r\nexport interface Palette {\r\n    basicColors: string[];\r\n    semanticColors: {\r\n        red?: string;\r\n        green?: string;\r\n        [key: string]: string;\r\n    };\r\n}\r\nexport interface Padding {\r\n    top?: number;\r\n    right?: number;\r\n    bottom?: number;\r\n    left?: number;\r\n}\r\nexport interface Background {\r\n    opacity?: number;\r\n    color?: string;\r\n}\r\nexport interface InteractionStateTheme {\r\n    backgroundOpacity?: number;\r\n    backgroundColor?: string;\r\n    textOpacity?: number;\r\n    borderColor?: string;\r\n    borderWidth?: number;\r\n    borderOpacity?: number;\r\n    opacity?: number;\r\n}\r\nexport declare type InteractionState = {\r\n    [K in InteractionStateName]?: InteractionStateTheme;\r\n};\r\nexport declare type Margin = Padding;\r\nexport interface TextAlignCfg {\r\n    textAlign?: TextAlign;\r\n    textBaseline?: TextBaseline;\r\n}\r\nexport interface TextTheme extends TextAlignCfg {\r\n    fontFamily?: string;\r\n    fontSize?: number;\r\n    fontWeight?: number | 'normal' | 'bold' | 'bolder' | 'lighter';\r\n    fill?: string;\r\n    linkTextFill?: string;\r\n    opacity?: number;\r\n}\r\nexport interface CellTheme {\r\n    crossBackgroundColor?: string;\r\n    backgroundColor?: string;\r\n    backgroundColorOpacity?: number;\r\n    horizontalBorderColor?: string;\r\n    horizontalBorderColorOpacity?: number;\r\n    verticalBorderColor?: string;\r\n    verticalBorderColorOpacity?: number;\r\n    horizontalBorderWidth?: number;\r\n    verticalBorderWidth?: number;\r\n    padding: Padding;\r\n    interactionState?: InteractionState;\r\n    miniBarChartHeight?: number;\r\n    miniBarChartFillColor?: string;\r\n}\r\nexport interface IconTheme {\r\n    fill?: string;\r\n    downIconColor?: string;\r\n    upIconColor?: string;\r\n    size?: number;\r\n    margin?: Margin;\r\n}\r\nexport interface ResizeArea {\r\n    size?: number;\r\n    background?: string;\r\n    guideLineColor?: string;\r\n    guideLineDash?: number[];\r\n    backgroundOpacity?: number;\r\n    interactionState?: InteractionState;\r\n}\r\nexport interface ScrollBarTheme {\r\n    trackColor?: string;\r\n    thumbHoverColor?: string;\r\n    thumbColor?: string;\r\n    size?: number;\r\n    hoverSize?: number;\r\n    /** 指定如何绘制每一条线段末端，lineCap?: 'butt' | 'round' | 'square'; */\r\n    lineCap?: ShapeAttrs['lineCap'];\r\n}\r\nexport interface SplitLine {\r\n    horizontalBorderColor?: string;\r\n    horizontalBorderColorOpacity?: number;\r\n    horizontalBorderWidth?: number;\r\n    verticalBorderColor?: string;\r\n    verticalBorderColorOpacity?: number;\r\n    verticalBorderWidth?: number;\r\n    showShadow?: boolean;\r\n    shadowWidth?: number;\r\n    shadowColors?: {\r\n        left: string;\r\n        right: string;\r\n    };\r\n}\r\nexport interface DefaultCellTheme extends GridAnalysisCellTheme {\r\n    bolderText?: TextTheme;\r\n    text?: TextTheme;\r\n    cell?: CellTheme;\r\n    icon?: IconTheme;\r\n    seriesNumberWidth?: number;\r\n}\r\nexport interface GridAnalysisCellTheme {\r\n    minorText?: TextTheme;\r\n    derivedMeasureText?: {\r\n        mainUp: string;\r\n        mainDown: string;\r\n        minorUp: string;\r\n        minorDown: string;\r\n    };\r\n}\r\nexport declare type CellThemes = {\r\n    [K in CellTypes]?: DefaultCellTheme;\r\n};\r\nexport interface S2Theme extends CellThemes {\r\n    resizeArea?: ResizeArea;\r\n    scrollBar?: ScrollBarTheme;\r\n    splitLine?: SplitLine;\r\n    prepareSelectMask?: InteractionStateTheme;\r\n    background?: Background;\r\n}\r\nexport declare type ThemeName = 'default' | 'colorful' | 'gray';\r\nexport interface ThemeCfg {\r\n    theme?: S2Theme;\r\n    palette?: Palette;\r\n    name?: ThemeName;\r\n}\r\n"}}
