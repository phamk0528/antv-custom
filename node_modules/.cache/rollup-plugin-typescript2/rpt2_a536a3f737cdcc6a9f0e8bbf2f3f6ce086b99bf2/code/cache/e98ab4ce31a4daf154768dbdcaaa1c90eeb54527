{"code":"import { Hierarchy } from \"./hierarchy\";\r\nimport { Node } from \"./node\";\r\nimport { buildRowTreeHierarchy } from \"./build-row-tree-hierarchy\";\r\nimport { buildGridHierarchy } from \"./build-gird-hierarchy\";\r\nimport { buildTableHierarchy } from \"./build-table-hierarchy\";\r\nimport { buildRowCustomTreeHierarchy } from \"./build-row-custom-tree-hierarchy\";\r\nvar handleGridRowColHierarchy = function (params) {\r\n    var isValueInCols = params.isValueInCols, moreThanOneValue = params.moreThanOneValue, rootNode = params.rootNode, facetCfg = params.facetCfg, hierarchy = params.hierarchy, fields = params.fields, isRowHeader = params.isRowHeader;\r\n    // add new total measure in total node\r\n    var addTotalMeasureInTotal;\r\n    // add measure info in total query\r\n    var addMeasureInTotalQuery;\r\n    if (isRowHeader) {\r\n        addTotalMeasureInTotal = !isValueInCols && moreThanOneValue;\r\n        addMeasureInTotalQuery = !isValueInCols && !moreThanOneValue;\r\n    }\r\n    else {\r\n        addTotalMeasureInTotal = isValueInCols && moreThanOneValue;\r\n        addMeasureInTotalQuery = isValueInCols && !moreThanOneValue;\r\n    }\r\n    buildGridHierarchy({\r\n        addTotalMeasureInTotal: addTotalMeasureInTotal,\r\n        addMeasureInTotalQuery: addMeasureInTotalQuery,\r\n        parentNode: rootNode,\r\n        currentField: fields[0],\r\n        fields: fields,\r\n        facetCfg: facetCfg,\r\n        hierarchy: hierarchy,\r\n    });\r\n};\r\nvar handleCustomTreeRowHierarchy = function (params) {\r\n    var facetCfg = params.facetCfg, rootNode = params.rootNode, hierarchy = params.hierarchy;\r\n    var customTreeItems = facetCfg.dataSet.fields.customTreeItems;\r\n    // row custom tree header\r\n    buildRowCustomTreeHierarchy({\r\n        customTreeItems: customTreeItems,\r\n        facetCfg: facetCfg,\r\n        level: 0,\r\n        parentNode: rootNode,\r\n        hierarchy: hierarchy,\r\n    });\r\n};\r\nvar handleTreeRowHierarchy = function (params) {\r\n    var facetCfg = params.facetCfg, rootNode = params.rootNode, hierarchy = params.hierarchy;\r\n    var hierarchyType = facetCfg.hierarchyType, rows = facetCfg.rows, dataSet = facetCfg.dataSet;\r\n    if (hierarchyType === 'tree') {\r\n        // row tree hierarchy(value must stay in colHeader)\r\n        buildRowTreeHierarchy({\r\n            level: 0,\r\n            currentField: rows[0],\r\n            pivotMeta: dataSet.rowPivotMeta,\r\n            facetCfg: facetCfg,\r\n            parentNode: rootNode,\r\n            hierarchy: hierarchy,\r\n        });\r\n    }\r\n    else {\r\n        handleCustomTreeRowHierarchy(params);\r\n    }\r\n};\r\nvar handleRowHeaderHierarchy = function (params) {\r\n    // 只有透视表有行头\r\n    var spreadsheet = params.spreadsheet;\r\n    if (spreadsheet.isHierarchyTreeType()) {\r\n        handleTreeRowHierarchy(params);\r\n    }\r\n    else {\r\n        handleGridRowColHierarchy(params);\r\n    }\r\n};\r\nvar handleColHeaderHierarchy = function (params) {\r\n    var isPivotMode = params.isPivotMode, hierarchy = params.hierarchy, rootNode = params.rootNode, facetCfg = params.facetCfg;\r\n    if (isPivotMode) {\r\n        handleGridRowColHierarchy(params);\r\n    }\r\n    else {\r\n        buildTableHierarchy({\r\n            parentNode: rootNode,\r\n            hierarchy: hierarchy,\r\n            facetCfg: facetCfg,\r\n        });\r\n    }\r\n};\r\n/**\r\n * Header Hierarchy\r\n * - row header\r\n *   - tree layout\r\n *     - custom tree layout\r\n *   - grid layout\r\n *   - table layout\r\n * - col header\r\n *   - grid layout\r\n *     - single value\r\n *       - total + sub_total\r\n *     - more than one value\r\n *       - total + sub_total\r\n *         - separate by values\r\n *   - table layout\r\n * @param params\r\n */\r\nexport var buildHeaderHierarchy = function (params) {\r\n    var isRowHeader = params.isRowHeader, facetCfg = params.facetCfg;\r\n    var spreadsheet = facetCfg.spreadsheet, _a = facetCfg.rows, rows = _a === void 0 ? [] : _a, _b = facetCfg.columns, columns = _b === void 0 ? [] : _b;\r\n    var isValueInCols = spreadsheet.dataCfg.fields.valueInCols;\r\n    var isPivotMode = spreadsheet.isPivotMode();\r\n    var moreThanOneValue = facetCfg.dataSet.moreThanOneValue();\r\n    var rootNode = Node.rootNode();\r\n    var hierarchy = new Hierarchy();\r\n    var headParams = {\r\n        isValueInCols: isValueInCols,\r\n        isPivotMode: isPivotMode,\r\n        moreThanOneValue: moreThanOneValue,\r\n        rootNode: rootNode,\r\n        hierarchy: hierarchy,\r\n        spreadsheet: spreadsheet,\r\n        facetCfg: facetCfg,\r\n        fields: isRowHeader ? rows : columns,\r\n        isRowHeader: isRowHeader,\r\n    };\r\n    if (isRowHeader) {\r\n        handleRowHeaderHierarchy(headParams);\r\n    }\r\n    else {\r\n        handleColHeaderHierarchy(headParams);\r\n    }\r\n    var getLeafNodes = function () {\r\n        if (!isRowHeader)\r\n            return hierarchy.getLeaves();\r\n        return spreadsheet.isHierarchyTreeType()\r\n            ? hierarchy.getNodes()\r\n            : hierarchy.getLeaves();\r\n    };\r\n    return {\r\n        hierarchy: hierarchy,\r\n        leafNodes: getLeafNodes(),\r\n    };\r\n};\r\n//# sourceMappingURL=build-header-hierarchy.js.map","references":["F:/Ismart/S2-master/packages/s2-core/src/facet/layout/interface.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/hierarchy.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/node.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/build-row-tree-hierarchy.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/build-gird-hierarchy.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/build-table-hierarchy.ts","F:/Ismart/S2-master/packages/s2-core/src/data-set/index.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/build-row-custom-tree-hierarchy.ts","F:/Ismart/S2-master/packages/s2-core/src/sheet-type/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/index.ts"],"map":"{\"version\":3,\"file\":\"build-header-hierarchy.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/facet/layout/build-header-hierarchy.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"F:/Ismart/S2-master/packages/s2-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/facet/layout/build-header-hierarchy.d.ts","writeByteOrderMark":false,"text":"import { BuildHeaderParams, BuildHeaderResult } from \"./interface\";\r\n/**\r\n * Header Hierarchy\r\n * - row header\r\n *   - tree layout\r\n *     - custom tree layout\r\n *   - grid layout\r\n *   - table layout\r\n * - col header\r\n *   - grid layout\r\n *     - single value\r\n *       - total + sub_total\r\n *     - more than one value\r\n *       - total + sub_total\r\n *         - separate by values\r\n *   - table layout\r\n * @param params\r\n */\r\nexport declare const buildHeaderHierarchy: (params: BuildHeaderParams) => BuildHeaderResult;\r\n"}}
