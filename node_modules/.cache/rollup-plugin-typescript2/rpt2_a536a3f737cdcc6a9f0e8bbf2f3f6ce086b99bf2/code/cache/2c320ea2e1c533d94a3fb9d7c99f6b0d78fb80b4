{"code":"import { __assign, __read, __spreadArray } from \"tslib\";\r\nimport { keys, has, map, toUpper, endsWith, uniq } from 'lodash';\r\nimport { EXTRA_FIELD, ID_SEPARATOR, TOTAL_VALUE } from \"../common/constant\";\r\nimport { sortByItems, getListBySorted } from \"./data-set-operate\";\r\nimport { getDimensionsWithParentPath } from \"./dataset/pivot-data-set\";\r\nexport var isAscSort = function (sortMethod) { return toUpper(sortMethod) === 'ASC'; };\r\nexport var isDescSort = function (sortMethod) { return toUpper(sortMethod) === 'DESC'; };\r\n/**\r\n * 执行排序\r\n * @param list - 待排序数组\r\n * @param sortMethod - 升、降序\r\n * @param key - 根据key数值排序，如果有key代表根据维度值排序，故按数字排，如果没有按照字典排\r\n */\r\nexport var sortAction = function (list, sortMethod, key) {\r\n    var sort = isAscSort(sortMethod) ? 1 : -1;\r\n    var specialValues = ['-', undefined];\r\n    return list === null || list === void 0 ? void 0 : list.sort(function (pre, next) {\r\n        var a = pre;\r\n        var b = next;\r\n        if (key) {\r\n            a = pre[key];\r\n            b = next[key];\r\n            if (Number(a) && Number(b)) {\r\n                return (Number(a) - Number(b)) * sort;\r\n            }\r\n            if (a && (specialValues === null || specialValues === void 0 ? void 0 : specialValues.includes(a === null || a === void 0 ? void 0 : a.toString()))) {\r\n                return -sort;\r\n            }\r\n            if (Number(a) && (specialValues === null || specialValues === void 0 ? void 0 : specialValues.includes(b === null || b === void 0 ? void 0 : b.toString()))) {\r\n                return sort;\r\n            }\r\n        }\r\n        if (a && b) {\r\n            // 数据健全兼容，用户数据不全时，能够展示.\r\n            return a.toString().localeCompare(b.toString(), 'zh') * sort;\r\n        }\r\n        if (a) {\r\n            return sort;\r\n        }\r\n        return -sort;\r\n    });\r\n};\r\nvar mergeDataWhenASC = function (sortedValues, originValues, asc) {\r\n    if (asc) {\r\n        // 如果是升序，需要将无数据的项放到前面\r\n        return sortByItems(originValues, uniq(sortedValues));\r\n    }\r\n    return __spreadArray([], __read(new Set(__spreadArray(__spreadArray([], __read(sortedValues), false), __read(originValues), false))), false);\r\n};\r\nexport var sortByFunc = function (params) {\r\n    var originValues = params.originValues, measureValues = params.measureValues, sortParam = params.sortParam;\r\n    var sortFunc = sortParam.sortFunc;\r\n    return (sortFunc(__assign({ data: measureValues }, sortParam)) ||\r\n        originValues);\r\n};\r\nexport var sortByCustom = function (params) {\r\n    var sortByValues = params.sortByValues, originValues = params.originValues;\r\n    // 从 originValues 中过滤出所有包含 sortByValue 的 id\r\n    var idWithPre = originValues.filter(function (originItem) {\r\n        return sortByValues.find(function (value) { return endsWith(originItem, value); });\r\n    });\r\n    // 将 id 拆分为父节点和目标节点\r\n    var idListWithPre = idWithPre.map(function (idStr) {\r\n        var ids = idStr.split(ID_SEPARATOR);\r\n        if (ids.length > 1) {\r\n            var parentId = ids.slice(0, ids.length - 1).join(ID_SEPARATOR);\r\n            return [parentId, ids[ids.length - 1]];\r\n        }\r\n        return ids;\r\n    });\r\n    // 获取父节点顺序\r\n    var parentOrder = Array.from(new Set(idListWithPre.map(function (id) { return id[0]; })));\r\n    // 排序\r\n    idListWithPre.sort(function (a, b) {\r\n        var aParent = a.slice(0, a.length - 1);\r\n        var bParent = b.slice(0, b.length - 1);\r\n        // 父节点不同时，按 parentOrder 排序\r\n        if (aParent.join() !== bParent.join()) {\r\n            var aParentIndex = parentOrder.indexOf(aParent[0]);\r\n            var bParentIndex = parentOrder.indexOf(bParent[0]);\r\n            return aParentIndex - bParentIndex;\r\n        }\r\n        // 父节点相同时，按 sortByValues 排序\r\n        var aIndex = sortByValues.indexOf(a[a.length - 1]);\r\n        var bIndex = sortByValues.indexOf(b[b.length - 1]);\r\n        return aIndex - bIndex;\r\n    });\r\n    // 拼接 id\r\n    var sortedIdWithPre = idListWithPre.map(function (idArr) {\r\n        return idArr.join(ID_SEPARATOR);\r\n    });\r\n    return getListBySorted(originValues, sortedIdWithPre);\r\n};\r\nexport var sortByMethod = function (params) {\r\n    var sortParam = params.sortParam, measureValues = params.measureValues, originValues = params.originValues, dataSet = params.dataSet;\r\n    var sortByMeasure = sortParam.sortByMeasure, query = sortParam.query, sortFieldId = sortParam.sortFieldId, sortMethod = sortParam.sortMethod;\r\n    var _a = dataSet.fields, rows = _a.rows, columns = _a.columns;\r\n    var isInRows = rows.includes(sortFieldId);\r\n    var result = originValues;\r\n    if (sortByMeasure) {\r\n        var dimensions = sortAction(measureValues, sortMethod, sortByMeasure === TOTAL_VALUE ? query[EXTRA_FIELD] : sortByMeasure);\r\n        result = getDimensionsWithParentPath(sortFieldId, isInRows ? rows : columns, dimensions);\r\n    }\r\n    else {\r\n        result = map(sortAction(measureValues, sortMethod));\r\n    }\r\n    return mergeDataWhenASC(result, originValues, isAscSort(sortMethod));\r\n};\r\nexport var processSort = function (params) {\r\n    var sortParam = params.sortParam, originValues = params.originValues, measureValues = params.measureValues, dataSet = params.dataSet;\r\n    var sortFunc = sortParam.sortFunc, sortMethod = sortParam.sortMethod, sortBy = sortParam.sortBy;\r\n    var result = originValues;\r\n    var sortActionParams = {\r\n        originValues: originValues,\r\n        measureValues: measureValues,\r\n        sortParam: sortParam,\r\n        dataSet: dataSet,\r\n    };\r\n    if (sortFunc) {\r\n        result = sortByFunc(sortActionParams);\r\n    }\r\n    else if (sortBy) {\r\n        // 自定义列表\r\n        result = sortByCustom({ sortByValues: sortBy, originValues: originValues });\r\n    }\r\n    else if (isAscSort(sortMethod) || isDescSort(sortMethod)) {\r\n        // 如果是升序，需要将无数据的项放到前面\r\n        result = sortByMethod(sortActionParams);\r\n    }\r\n    return result;\r\n};\r\nexport var handleSortAction = function (params) {\r\n    var _a, _b;\r\n    var dataSet = params.dataSet, sortParam = params.sortParam, originValues = params.originValues, isSortByMeasure = params.isSortByMeasure;\r\n    var fields = dataSet.fields;\r\n    var sortByMeasure = sortParam.sortByMeasure, query = sortParam.query, sortFieldId = sortParam.sortFieldId;\r\n    var measureValues;\r\n    if (isSortByMeasure) {\r\n        // 根据指标排序，需要首先找到指标的对应的值\r\n        if (sortByMeasure === TOTAL_VALUE) {\r\n            // 按小计，总计排序\r\n            var isRow = ((_a = fields === null || fields === void 0 ? void 0 : fields.columns) === null || _a === void 0 ? void 0 : _a.includes(sortFieldId)) &&\r\n                ((_b = keys(query)) === null || _b === void 0 ? void 0 : _b.length) === 1 &&\r\n                has(query, EXTRA_FIELD);\r\n            measureValues = dataSet.getMultiData(query, true, isRow);\r\n        }\r\n        else {\r\n            measureValues = dataSet.getMultiData(query);\r\n        }\r\n    }\r\n    else {\r\n        // 其他都是维度本身的排序方式\r\n        measureValues = originValues;\r\n    }\r\n    return processSort({\r\n        sortParam: sortParam,\r\n        originValues: originValues,\r\n        measureValues: measureValues,\r\n        dataSet: dataSet,\r\n    });\r\n};\r\nexport var getSortTypeIcon = function (sortParam, isSortCell) {\r\n    if (sortParam === null || sortParam === void 0 ? void 0 : sortParam.sortMethod) {\r\n        if (isAscSort(sortParam === null || sortParam === void 0 ? void 0 : sortParam.sortMethod)) {\r\n            return 'groupAsc';\r\n        }\r\n        if (isDescSort(sortParam === null || sortParam === void 0 ? void 0 : sortParam.sortMethod)) {\r\n            return 'groupDesc';\r\n        }\r\n    }\r\n    if (isSortCell) {\r\n        return 'SortDown';\r\n    }\r\n};\r\n//# sourceMappingURL=sort-action.js.map","references":["F:/Ismart/S2-master/node_modules/@types/lodash/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/index.ts","F:/Ismart/S2-master/packages/s2-core/src/data-set/interface.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/index.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/data-set-operate.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/dataset/pivot-data-set.ts"],"map":"{\"version\":3,\"file\":\"sort-action.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/sort-action.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"F:/Ismart/S2-master/packages/s2-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/utils/sort-action.d.ts","writeByteOrderMark":false,"text":"import { SortMethod, SortParam } from \"../common/interface\";\r\nimport { DataType, SortActionParams } from \"../data-set/interface\";\r\nexport declare const isAscSort: (sortMethod: any) => boolean;\r\nexport declare const isDescSort: (sortMethod: any) => boolean;\r\n/**\r\n * 执行排序\r\n * @param list - 待排序数组\r\n * @param sortMethod - 升、降序\r\n * @param key - 根据key数值排序，如果有key代表根据维度值排序，故按数字排，如果没有按照字典排\r\n */\r\nexport declare const sortAction: (list: Array<string | number | DataType>, sortMethod?: SortMethod, key?: string) => (string | number | DataType)[];\r\nexport declare const sortByFunc: (params: SortActionParams) => string[];\r\nexport declare const sortByCustom: (params: SortActionParams) => string[];\r\nexport declare const sortByMethod: (params: SortActionParams) => string[];\r\nexport declare const processSort: (params: SortActionParams) => string[];\r\nexport declare const handleSortAction: (params: SortActionParams) => string[];\r\nexport declare const getSortTypeIcon: (sortParam: SortParam, isSortCell?: boolean) => \"groupAsc\" | \"groupDesc\" | \"SortDown\";\r\n"}}
