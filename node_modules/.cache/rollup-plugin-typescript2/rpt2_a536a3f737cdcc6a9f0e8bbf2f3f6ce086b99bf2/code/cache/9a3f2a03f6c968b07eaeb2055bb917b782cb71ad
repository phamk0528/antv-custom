{"code":"import { __assign, __read, __spreadArray, __values } from \"tslib\";\r\nimport { clone, isArray, isEmpty, isNil, isNumber, isString, memoize, reverse, toString, trim, values, } from 'lodash';\r\nimport { renderText } from \"./g-renders\";\r\nimport { CellTypes, EMPTY_PLACEHOLDER } from \"../common/constant\";\r\nvar canvas = document.createElement('canvas');\r\nvar ctx = canvas.getContext('2d');\r\n/**\r\n * 计算文本在画布中的宽度\r\n */\r\nexport var measureTextWidth = memoize(function (text, font) {\r\n    if (text === void 0) { text = ''; }\r\n    if (!font) {\r\n        return 0;\r\n    }\r\n    var _a = font, fontSize = _a.fontSize, fontFamily = _a.fontFamily, fontWeight = _a.fontWeight, fontStyle = _a.fontStyle, fontVariant = _a.fontVariant;\r\n    // copy G 里面的处理逻辑\r\n    ctx.font = [fontStyle, fontVariant, fontWeight, \"\".concat(fontSize, \"px\"), fontFamily]\r\n        .join(' ')\r\n        .trim();\r\n    return ctx.measureText(\"\".concat(text)).width;\r\n}, function (text, font) { return __spreadArray([text], __read(values(font)), false).join(''); });\r\n/**\r\n * 获取文本的 ... 文本。\r\n * 算法（减少每次 measureText 的长度，measureText 的性能跟字符串时间相关）：\r\n * 1. 先通过 STEP 逐步计算，找到最后一个小于 maxWidth 的字符串\r\n * 2. 然后对最后这个字符串二分计算\r\n * @param text 需要计算的文本, 由于历史原因 除了支持string，还支持空值,number和数组等\r\n * @param maxWidth\r\n * @param font\r\n */\r\nexport var getEllipsisTextInner = function (text, maxWidth, font) {\r\n    var STEP = 16; // 每次 16，调参工程师\r\n    var DOT_WIDTH = measureTextWidth('...', font);\r\n    var leftText;\r\n    if (!isString(text)) {\r\n        leftText = toString(text);\r\n    }\r\n    else {\r\n        leftText = text;\r\n    }\r\n    var leftWidth = maxWidth;\r\n    var r = []; // 最终的分段字符串\r\n    var currentText;\r\n    var currentWidth;\r\n    if (measureTextWidth(text, font) <= maxWidth) {\r\n        return text;\r\n    }\r\n    var runningStep1 = true;\r\n    // 首先通过 step 计算，找出最大的未超出长度的\r\n    while (runningStep1) {\r\n        // 更新字符串\r\n        currentText = leftText.substr(0, STEP);\r\n        // 计算宽度\r\n        currentWidth = measureTextWidth(currentText, font);\r\n        // 超出剩余宽度，则停止\r\n        if (currentWidth + DOT_WIDTH > leftWidth) {\r\n            if (currentWidth > leftWidth) {\r\n                runningStep1 = false;\r\n                break;\r\n            }\r\n        }\r\n        r.push(currentText);\r\n        // 没有超出，则计算剩余宽度\r\n        leftWidth -= currentWidth;\r\n        leftText = leftText.substr(STEP);\r\n        // 字符串整体没有超出\r\n        if (!leftText) {\r\n            return r.join('');\r\n        }\r\n    }\r\n    var runningStep2 = true;\r\n    // 最下的最后一个 STEP，使用 1 递增（用二分效果更高）\r\n    while (runningStep2) {\r\n        // 更新字符串\r\n        currentText = leftText.substr(0, 1);\r\n        // 计算宽度\r\n        currentWidth = measureTextWidth(currentText, font);\r\n        // 超出剩余宽度，则停止\r\n        if (currentWidth + DOT_WIDTH > leftWidth) {\r\n            runningStep2 = false;\r\n            break;\r\n        }\r\n        r.push(currentText);\r\n        // 没有超出，则计算剩余宽度\r\n        leftWidth -= currentWidth;\r\n        leftText = leftText.substr(1);\r\n        if (!leftText) {\r\n            return r.join('');\r\n        }\r\n    }\r\n    return \"\".concat(r.join(''), \"...\");\r\n};\r\n/**\r\n * 追求性能，粗略的计算文本的宽高！\r\n *\r\n * 算法逻辑：\r\n * 计算一个字符串中，符号[0-255]，中文（其他）的个数\r\n * 然后分别乘以中文、符号的宽度\r\n * @param text\r\n * @param font\r\n */\r\nexport var measureTextWidthRoughly = function (text, font) {\r\n    var e_1, _a;\r\n    if (font === void 0) { font = {}; }\r\n    var alphaWidth = measureTextWidth('a', font);\r\n    var chineseWidth = measureTextWidth('蚂', font);\r\n    var w = 0;\r\n    if (!text) {\r\n        return w;\r\n    }\r\n    try {\r\n        // eslint-disable-next-line no-restricted-syntax\r\n        for (var text_1 = __values(text), text_1_1 = text_1.next(); !text_1_1.done; text_1_1 = text_1.next()) {\r\n            var char = text_1_1.value;\r\n            var code = char.charCodeAt(0);\r\n            // /[\\u0000-\\u00ff]/\r\n            w += code >= 0 && code <= 255 ? alphaWidth : chineseWidth;\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (text_1_1 && !text_1_1.done && (_a = text_1.return)) _a.call(text_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return w;\r\n};\r\n/**\r\n * @desc 改良版 获取文本的 ... 文本（可传入 优先文本片段）\r\n * @param text 需要计算的文本\r\n * @param maxWidth\r\n * @param font optional 文本字体 或 优先显示的文本\r\n * @param priority optional 优先显示的文本\r\n */\r\nexport var getEllipsisText = function (_a) {\r\n    var text = _a.text, maxWidth = _a.maxWidth, fontParam = _a.fontParam, priorityParam = _a.priorityParam, placeholder = _a.placeholder;\r\n    var font = {};\r\n    var empty = placeholder !== null && placeholder !== void 0 ? placeholder : EMPTY_PLACEHOLDER;\r\n    // [null, undefined, ''] will return empty\r\n    var finalText = isNil(text) || text === '' ? empty : \"\".concat(text);\r\n    var priority = priorityParam;\r\n    if (fontParam && isArray(fontParam)) {\r\n        priority = fontParam;\r\n    }\r\n    else {\r\n        font = fontParam || {};\r\n    }\r\n    if (!priority || !priority.length) {\r\n        return getEllipsisTextInner(finalText, maxWidth, font);\r\n    }\r\n    var leftSubTexts = [];\r\n    var subTexts = [finalText];\r\n    priority.forEach(function (priorityItem) {\r\n        subTexts.forEach(function (tempSubText, index) {\r\n            // 处理 leftText\r\n            var startIdx = -1;\r\n            var matched = tempSubText.match(new RegExp(priorityItem));\r\n            if (matched) {\r\n                var matchedText = matched[0];\r\n                startIdx = matched.index;\r\n                leftSubTexts.push(matchedText);\r\n                var endIdx = startIdx + matchedText.length;\r\n                var left = tempSubText.slice(0, startIdx);\r\n                var right = tempSubText.slice(endIdx);\r\n                var tmp = [left, right].filter(function (v) { return !!v; });\r\n                subTexts.splice.apply(subTexts, __spreadArray([index, 1], __read(tmp), false));\r\n            }\r\n        });\r\n    });\r\n    // original text is split into serval texts by priority\r\n    subTexts = leftSubTexts.concat(subTexts);\r\n    var result = finalText;\r\n    var DOT_WIDTH = measureTextWidth('...', font);\r\n    var remainWidth = maxWidth;\r\n    subTexts.forEach(function (subText) {\r\n        if (remainWidth <= 0) {\r\n            var originIdx = result.indexOf(subText);\r\n            var prev = result.slice(originIdx - 3, originIdx);\r\n            if (prev && prev !== '...') {\r\n                var subWidth = measureTextWidth(subText, font);\r\n                // fix-边界处理: when subWidth <= DOT_WIDTH 不做 ... 处理\r\n                result = result.replace(subText, subWidth > DOT_WIDTH ? '...' : subText);\r\n            }\r\n            else {\r\n                result = result.replace(subText, '');\r\n            }\r\n            remainWidth -= DOT_WIDTH;\r\n        }\r\n        else {\r\n            var subWidth = measureTextWidth(subText, font);\r\n            // fix-边界处理: when subWidth <= DOT_WIDTH 不做 ... 处理\r\n            if (remainWidth < subWidth && subWidth > DOT_WIDTH) {\r\n                var ellipsis = getEllipsisTextInner(subText, remainWidth, font);\r\n                result = result.replace(subText, ellipsis);\r\n                remainWidth = 0;\r\n            }\r\n            else {\r\n                remainWidth -= subWidth;\r\n            }\r\n        }\r\n    });\r\n    return result;\r\n};\r\n/**\r\n * To decide whether the data is positive or negative.\r\n * Two cases needed to be considered since  the derived value could be number or string.\r\n * @param value\r\n * @param font\r\n */\r\nexport var isUpDataValue = function (value) {\r\n    if (isNumber(value)) {\r\n        return value >= 0;\r\n    }\r\n    return !!value && !trim(value).startsWith('-');\r\n};\r\nvar calX = function (x, paddingRight, total, textAlign) {\r\n    if (textAlign === void 0) { textAlign = 'left'; }\r\n    var extra = total || 0;\r\n    if (textAlign === 'left') {\r\n        return x + paddingRight / 2 + extra;\r\n    }\r\n    if (textAlign === 'right') {\r\n        return x - paddingRight / 2 - extra;\r\n    }\r\n    // TODO 兼容 textAlign 为居中\r\n    return x;\r\n};\r\nvar getTextStyle = function (rowIndex, colIndex, meta, data, dataCellTheme, textCondition) {\r\n    var isTotals = meta.isTotals;\r\n    var textStyle = isTotals ? dataCellTheme.bolderText : dataCellTheme.text;\r\n    var fill = textStyle.fill;\r\n    if (textCondition === null || textCondition === void 0 ? void 0 : textCondition.mapping) {\r\n        fill = textCondition === null || textCondition === void 0 ? void 0 : textCondition.mapping(data, {\r\n            rowIndex: rowIndex,\r\n            colIndex: colIndex,\r\n            meta: meta,\r\n        }).fill;\r\n    }\r\n    return __assign(__assign({}, textStyle), { fill: fill });\r\n};\r\n/**\r\n * @desc draw text shape of object\r\n * @param cell\r\n * @multiData 自定义文本内容\r\n * @disabledConditions 是否禁用条件格式\r\n */\r\nexport var drawObjectText = function (cell, multiData, disabledConditions) {\r\n    var _a;\r\n    var x = cell.getTextAndIconPosition().text.x;\r\n    var _b = cell.getContentArea(), y = _b.y, totalTextHeight = _b.height, totalTextWidth = _b.width;\r\n    var text = multiData || cell.getMeta().fieldValue;\r\n    var valuesCfg = (cell === null || cell === void 0 ? void 0 : cell.getMeta().spreadsheet.options.style.cellCfg).valuesCfg;\r\n    var textCondition = disabledConditions ? null : (_a = valuesCfg === null || valuesCfg === void 0 ? void 0 : valuesCfg.conditions) === null || _a === void 0 ? void 0 : _a.text;\r\n    var widthPercentCfg = valuesCfg === null || valuesCfg === void 0 ? void 0 : valuesCfg.widthPercentCfg;\r\n    var dataCellStyle = cell.getStyle(CellTypes.DATA_CELL);\r\n    var textAlign = dataCellStyle.text.textAlign;\r\n    var padding = dataCellStyle.cell.padding;\r\n    var realHeight = totalTextHeight / (text.values.length + 1);\r\n    var labelHeight = 0;\r\n    // 绘制单元格主标题\r\n    if (text === null || text === void 0 ? void 0 : text.label) {\r\n        labelHeight = realHeight / 2;\r\n        var labelStyle = dataCellStyle.bolderText;\r\n        renderText(cell, [], calX(x, padding.right), y + labelHeight, getEllipsisText({\r\n            text: text.label,\r\n            maxWidth: totalTextWidth,\r\n            fontParam: labelStyle,\r\n        }), labelStyle);\r\n    }\r\n    // 绘制指标\r\n    var textValues = text.values;\r\n    var curText;\r\n    var curX;\r\n    var curY = y + realHeight / 2;\r\n    var curWidth;\r\n    var totalWidth = 0;\r\n    for (var i = 0; i < textValues.length; i += 1) {\r\n        curY = y + realHeight * (i + 1) + labelHeight; // 加上label的高度\r\n        totalWidth = 0;\r\n        var measures = clone(textValues[i]);\r\n        if (textAlign === 'right') {\r\n            reverse(measures); // 右对齐拿到的x坐标为最右坐标，指标顺序需要反过来\r\n        }\r\n        for (var j = 0; j < measures.length; j += 1) {\r\n            curText = measures[j];\r\n            var curStyle = getTextStyle(i, j, cell === null || cell === void 0 ? void 0 : cell.getMeta(), curText, dataCellStyle, textCondition);\r\n            curWidth = !isEmpty(widthPercentCfg)\r\n                ? totalTextWidth * (widthPercentCfg[j] / 100)\r\n                : totalTextWidth / text.values[0].length; // 指标个数相同，任取其一即可\r\n            curX = calX(x, padding.right, totalWidth, textAlign);\r\n            totalWidth += curWidth;\r\n            renderText(cell, [], curX, curY, getEllipsisText({\r\n                text: curText,\r\n                maxWidth: curWidth,\r\n                fontParam: curStyle,\r\n                placeholder: cell === null || cell === void 0 ? void 0 : cell.getMeta().spreadsheet.options.placeholder,\r\n            }), curStyle);\r\n        }\r\n    }\r\n};\r\n/**\r\n * 根据 cellCfg 配置获取当前单元格宽度\r\n */\r\nexport var getCellWidth = function (cellCfg, labelSize) {\r\n    if (labelSize === void 0) { labelSize = 1; }\r\n    var width = cellCfg.width;\r\n    var cellWidth = width;\r\n    return cellWidth * labelSize;\r\n};\r\nexport var safeJsonParse = function (val) {\r\n    try {\r\n        return JSON.parse(val);\r\n    }\r\n    catch (err) {\r\n        return null;\r\n    }\r\n};\r\n//# sourceMappingURL=text.js.map","references":["F:/Ismart/S2-master/node_modules/@types/lodash/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/theme.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/g-renders.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/index.ts"],"map":"{\"version\":3,\"file\":\"text.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/text.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"F:/Ismart/S2-master/packages/s2-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/utils/text.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"lodash\" />\r\nimport { CellCfg, MultiData, S2CellType } from \"../common/interface\";\r\n/**\r\n * 计算文本在画布中的宽度\r\n */\r\nexport declare const measureTextWidth: ((text: number | string, font: unknown) => number) & import(\"lodash\").MemoizedFunction;\r\n/**\r\n * 获取文本的 ... 文本。\r\n * 算法（减少每次 measureText 的长度，measureText 的性能跟字符串时间相关）：\r\n * 1. 先通过 STEP 逐步计算，找到最后一个小于 maxWidth 的字符串\r\n * 2. 然后对最后这个字符串二分计算\r\n * @param text 需要计算的文本, 由于历史原因 除了支持string，还支持空值,number和数组等\r\n * @param maxWidth\r\n * @param font\r\n */\r\nexport declare const getEllipsisTextInner: (text: any, maxWidth: number, font: CSSStyleDeclaration) => any;\r\n/**\r\n * 追求性能，粗略的计算文本的宽高！\r\n *\r\n * 算法逻辑：\r\n * 计算一个字符串中，符号[0-255]，中文（其他）的个数\r\n * 然后分别乘以中文、符号的宽度\r\n * @param text\r\n * @param font\r\n */\r\nexport declare const measureTextWidthRoughly: (text: any, font?: any) => number;\r\n/**\r\n * @desc 改良版 获取文本的 ... 文本（可传入 优先文本片段）\r\n * @param text 需要计算的文本\r\n * @param maxWidth\r\n * @param font optional 文本字体 或 优先显示的文本\r\n * @param priority optional 优先显示的文本\r\n */\r\nexport declare const getEllipsisText: ({ text, maxWidth, fontParam, priorityParam, placeholder, }: {\r\n    text: string | number;\r\n    maxWidth: number;\r\n    fontParam?: unknown;\r\n    priorityParam?: string[];\r\n    placeholder?: string;\r\n}) => any;\r\n/**\r\n * To decide whether the data is positive or negative.\r\n * Two cases needed to be considered since  the derived value could be number or string.\r\n * @param value\r\n * @param font\r\n */\r\nexport declare const isUpDataValue: (value: number | string) => boolean;\r\n/**\r\n * @desc draw text shape of object\r\n * @param cell\r\n * @multiData 自定义文本内容\r\n * @disabledConditions 是否禁用条件格式\r\n */\r\nexport declare const drawObjectText: (cell: S2CellType, multiData?: MultiData, disabledConditions?: boolean) => void;\r\n/**\r\n * 根据 cellCfg 配置获取当前单元格宽度\r\n */\r\nexport declare const getCellWidth: (cellCfg: CellCfg, labelSize?: number) => number;\r\nexport declare const safeJsonParse: (val: string) => any;\r\n"}}
