{"code":"import { S2Event } from \"../constant\";\r\n//# sourceMappingURL=emitter.js.map","references":["F:/Ismart/S2-master/node_modules/@antv/g-canvas/lib/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/resize.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/s2DataConfig.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/basic.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/index.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/node.ts","F:/Ismart/S2-master/packages/s2-core/src/cell/data-cell.ts"],"map":"{\"version\":3,\"file\":\"emitter.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/common/interface/emitter.ts\"],\"names\":[],\"mappings\":\"AAYA,OAAO,EAAE,OAAO,EAAE,oBAA0B\"}","dts":{"name":"F:/Ismart/S2-master/packages/s2-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/common/interface/emitter.d.ts","writeByteOrderMark":false,"text":"import { Event as CanvasEvent } from '@antv/g-canvas';\r\nimport { ResizeInfo } from './resize';\r\nimport { Data } from \"./s2DataConfig\";\r\nimport { FilterParam, SortParams, Style } from \"./basic\";\r\nimport { HiddenColumnsInfo, S2CellType, ViewMeta, LayoutResult, CellScrollPosition } from \"./\";\r\nimport { S2Event } from \"../constant\";\r\nimport { Node } from \"../../facet/layout/node\";\r\nimport { DataCell } from \"../../cell/data-cell\";\r\nexport declare type CollapsedRowsType = {\r\n    collapsedRows: Record<string, boolean> & {\r\n        [x: number]: any;\r\n    };\r\n    meta?: Node;\r\n};\r\nexport declare type RowCellCollapseTreeRowsType = {\r\n    id: string;\r\n    isCollapsed: boolean;\r\n    node: Node;\r\n};\r\ndeclare type CanvasEventHandler = (event: CanvasEvent) => void;\r\ndeclare type KeyboardEventHandler = (event: KeyboardEvent) => void;\r\ndeclare type MouseEventHandler = (event: MouseEvent) => void;\r\ndeclare type EventHandler = (event: Event) => void;\r\ndeclare type ResizeHandler = (data: {\r\n    info: ResizeInfo;\r\n    style?: Style;\r\n    seriesNumberWidth?: number;\r\n}) => void;\r\ndeclare type SelectedHandler = (cells: S2CellType[]) => void;\r\ndeclare type SortedHandler = (rangeData: Data[]) => any;\r\nexport interface EmitterType {\r\n    /** ================ Global ================  */\r\n    [S2Event.GLOBAL_ACTION_ICON_CLICK]: CanvasEventHandler;\r\n    [S2Event.GLOBAL_ACTION_ICON_HOVER]: CanvasEventHandler;\r\n    [S2Event.GLOBAL_COPIED]: (data: string) => void;\r\n    [S2Event.GLOBAL_KEYBOARD_DOWN]: KeyboardEventHandler;\r\n    [S2Event.GLOBAL_KEYBOARD_UP]: KeyboardEventHandler;\r\n    [S2Event.GLOBAL_MOUSE_UP]: MouseEventHandler;\r\n    [S2Event.GLOBAL_MOUSE_MOVE]: MouseEventHandler;\r\n    [S2Event.LAYOUT_RESIZE_MOUSE_DOWN]: CanvasEventHandler;\r\n    [S2Event.LAYOUT_RESIZE_MOUSE_UP]: CanvasEventHandler;\r\n    [S2Event.LAYOUT_RESIZE_MOUSE_MOVE]: CanvasEventHandler;\r\n    [S2Event.GLOBAL_CONTEXT_MENU]: CanvasEventHandler;\r\n    [S2Event.GLOBAL_RESET]: EventHandler;\r\n    [S2Event.GLOBAL_HOVER]: CanvasEventHandler;\r\n    [S2Event.GLOBAL_SELECTED]: SelectedHandler;\r\n    /** ================ Sort ================  */\r\n    [S2Event.RANGE_SORT]: (info: SortParams) => void;\r\n    [S2Event.RANGE_SORTED]: SortedHandler | CanvasEventHandler;\r\n    /** ================ Filter ================  */\r\n    [S2Event.RANGE_FILTER]: (info: FilterParam) => void;\r\n    [S2Event.RANGE_FILTERED]: (data: Data[]) => any;\r\n    /** ================ Cell ================  */\r\n    [S2Event.GLOBAL_LINK_FIELD_JUMP]: (data: {\r\n        key: string;\r\n        record: Data;\r\n    }) => void;\r\n    /** ================ Date Cell ================  */\r\n    [S2Event.DATA_CELL_MOUSE_DOWN]: CanvasEventHandler;\r\n    [S2Event.DATA_CELL_MOUSE_UP]: CanvasEventHandler;\r\n    [S2Event.DATA_CELL_MOUSE_MOVE]: CanvasEventHandler;\r\n    [S2Event.DATA_CELL_HOVER]: CanvasEventHandler;\r\n    [S2Event.DATA_CELL_CLICK]: CanvasEventHandler;\r\n    [S2Event.DATA_CELL_DOUBLE_CLICK]: CanvasEventHandler;\r\n    [S2Event.DATA_CELL_TREND_ICON_CLICK]: (data: ViewMeta) => void;\r\n    [S2Event.DATE_CELL_BRUSH_SELECTION]: (cells: DataCell[]) => void;\r\n    /** ================ Row Cell ================  */\r\n    [S2Event.ROW_CELL_MOUSE_DOWN]: CanvasEventHandler;\r\n    [S2Event.ROW_CELL_MOUSE_MOVE]: CanvasEventHandler;\r\n    [S2Event.ROW_CELL_HOVER]: CanvasEventHandler;\r\n    [S2Event.ROW_CELL_CLICK]: CanvasEventHandler;\r\n    [S2Event.ROW_CELL_DOUBLE_CLICK]: CanvasEventHandler;\r\n    [S2Event.ROW_CELL_MOUSE_UP]: CanvasEventHandler;\r\n    [S2Event.ROW_CELL_COLLAPSE_TREE_ROWS]: (data: RowCellCollapseTreeRowsType) => void;\r\n    /** ================ Col Cell ================  */\r\n    [S2Event.COL_CELL_MOUSE_DOWN]: CanvasEventHandler;\r\n    [S2Event.COL_CELL_MOUSE_MOVE]: CanvasEventHandler;\r\n    [S2Event.COL_CELL_HOVER]: CanvasEventHandler;\r\n    [S2Event.COL_CELL_CLICK]: CanvasEventHandler;\r\n    [S2Event.COL_CELL_DOUBLE_CLICK]: CanvasEventHandler;\r\n    [S2Event.COL_CELL_MOUSE_UP]: CanvasEventHandler;\r\n    /** ================ Corner Cell ================  */\r\n    [S2Event.CORNER_CELL_MOUSE_MOVE]: CanvasEventHandler;\r\n    [S2Event.CORNER_CELL_MOUSE_DOWN]: CanvasEventHandler;\r\n    [S2Event.CORNER_CELL_HOVER]: CanvasEventHandler;\r\n    [S2Event.CORNER_CELL_CLICK]: CanvasEventHandler;\r\n    [S2Event.CORNER_CELL_DOUBLE_CLICK]: CanvasEventHandler;\r\n    [S2Event.CORNER_CELL_MOUSE_UP]: CanvasEventHandler;\r\n    /** ================ Merged Cells ================  */\r\n    [S2Event.MERGED_CELLS_MOUSE_DOWN]: CanvasEventHandler;\r\n    [S2Event.MERGED_CELLS_MOUSE_MOVE]: CanvasEventHandler;\r\n    [S2Event.MERGED_CELLS_HOVER]: CanvasEventHandler;\r\n    [S2Event.MERGED_CELLS_MOUSE_UP]: CanvasEventHandler;\r\n    [S2Event.MERGED_CELLS_CLICK]: CanvasEventHandler;\r\n    [S2Event.MERGED_CELLS_DOUBLE_CLICK]: CanvasEventHandler;\r\n    /** ================ Layout ================  */\r\n    [S2Event.LAYOUT_COLLAPSE_ROWS]: (data: CollapsedRowsType) => void;\r\n    [S2Event.LAYOUT_AFTER_COLLAPSE_ROWS]: (data: CollapsedRowsType) => void;\r\n    [S2Event.LAYOUT_TREE_ROWS_COLLAPSE_ALL]: (hierarchyCollapse: boolean) => void;\r\n    [S2Event.LAYOUT_PAGINATION]: (data: {\r\n        pageSize: number;\r\n        pageCount: number;\r\n        total: number;\r\n        current: number;\r\n    }) => void;\r\n    [S2Event.LAYOUT_AFTER_HEADER_LAYOUT]: (data: LayoutResult) => void;\r\n    [S2Event.LAYOUT_CELL_SCROLL]: (data: CellScrollPosition) => void;\r\n    [S2Event.LAYOUT_COLS_EXPANDED]: (expandedNode: Node) => void;\r\n    [S2Event.LAYOUT_COLS_HIDDEN]: (currentHiddenColumnsInfo: HiddenColumnsInfo, hiddenColumnsDetail: HiddenColumnsInfo[]) => void;\r\n    [S2Event.LAYOUT_BEFORE_RENDER]: () => void;\r\n    [S2Event.LAYOUT_AFTER_RENDER]: () => void;\r\n    [S2Event.LAYOUT_DESTROY]: () => void;\r\n    /** ================ Layout Resize ================  */\r\n    [S2Event.LAYOUT_RESIZE]: ResizeHandler;\r\n    [S2Event.LAYOUT_RESIZE_SERIES_WIDTH]: ResizeHandler;\r\n    [S2Event.LAYOUT_RESIZE_ROW_WIDTH]: ResizeHandler;\r\n    [S2Event.LAYOUT_RESIZE_ROW_HEIGHT]: ResizeHandler;\r\n    [S2Event.LAYOUT_RESIZE_COL_WIDTH]: ResizeHandler;\r\n    [S2Event.LAYOUT_RESIZE_COL_HEIGHT]: ResizeHandler;\r\n    [S2Event.LAYOUT_RESIZE_TREE_WIDTH]: ResizeHandler;\r\n}\r\nexport {};\r\n"}}
