{"code":"import { __extends } from \"tslib\";\r\nimport { Group } from '@antv/g-canvas';\r\n/**\r\n * New Base Header for all headers(cornerHeader, rowHeader, colHeader)\r\n * NOTE: Do not use this.cfg(which lays in group) to get header config,\r\n * use {@see headerConfig} instead\r\n */\r\nvar BaseHeader = /** @class */ (function (_super) {\r\n    __extends(BaseHeader, _super);\r\n    function BaseHeader(cfg) {\r\n        var _this = _super.call(this, cfg) || this;\r\n        /**\r\n         * Check whether header cell in viewPort\r\n         * @param gridPos\r\n         * @param gridSize\r\n         * @param viewportPos\r\n         * @param viewportSize\r\n         */\r\n        _this.isHeaderCellInViewport = function (gridPos, gridSize, viewportPos, viewportSize) {\r\n            return (gridPos + gridSize >= viewportPos && viewportPos + viewportSize >= gridPos);\r\n        };\r\n        _this.headerConfig = cfg;\r\n        return _this;\r\n    }\r\n    /**\r\n     * 清空热区，为重绘做准备，防止热区重复渲染\r\n     * @param type 当前重绘的header类型\r\n     */\r\n    BaseHeader.prototype.clearResizeAreaGroup = function (type) {\r\n        var foregroundGroup = this.get('parent');\r\n        var resizerGroup = foregroundGroup === null || foregroundGroup === void 0 ? void 0 : foregroundGroup.findById(type);\r\n        resizerGroup === null || resizerGroup === void 0 ? void 0 : resizerGroup.clear();\r\n    };\r\n    // start render header\r\n    BaseHeader.prototype.render = function (type) {\r\n        // clear resize group\r\n        this.clearResizeAreaGroup(type);\r\n        // clear self first\r\n        this.clear();\r\n        // draw by new data\r\n        this.layout();\r\n        // offset group\r\n        this.offset();\r\n        // clip group\r\n        this.clip();\r\n    };\r\n    /**\r\n     * Scroll header group's x,y\r\n     * @param scrollX hScrollBar horizontal offset\r\n     * @param scrollY hScrollBar vertical offset\r\n     * @param type\r\n     */\r\n    BaseHeader.prototype.onScrollXY = function (scrollX, scrollY, type) {\r\n        this.headerConfig.scrollX = scrollX;\r\n        this.headerConfig.scrollY = scrollY;\r\n        this.render(type);\r\n    };\r\n    /**\r\n     * Only call when hRowScrollBar scrolls\r\n     * @param rowScrollX  hRowScrollbar horizontal offset\r\n     * @param type\r\n     */\r\n    BaseHeader.prototype.onRowScrollX = function (rowScrollX, type) {\r\n        this.headerConfig.scrollX = rowScrollX;\r\n        this.render(type);\r\n    };\r\n    BaseHeader.prototype.clear = function () {\r\n        _super.prototype.clear.call(this);\r\n    };\r\n    return BaseHeader;\r\n}(Group));\r\nexport { BaseHeader };\r\n//# sourceMappingURL=base.js.map","references":["F:/Ismart/S2-master/node_modules/@antv/g-canvas/lib/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/index.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/node.ts","F:/Ismart/S2-master/packages/s2-core/src/sheet-type/index.ts"],"map":"{\"version\":3,\"file\":\"base.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/facet/header/base.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EAAE,KAAK,EAAS,MAAM,gBAAgB,CAAC;AAmC9C;;;;GAIG;AACH;IAAqE,8BAAK;IAIxE,oBAAsB,GAAM;QAA5B,YACE,kBAAM,GAAG,CAAC,SAEX;QA6DD;;;;;;WAMG;QACO,4BAAsB,GAAG,UACjC,OAAO,EACP,QAAQ,EACR,WAAW,EACX,YAAY;YAEZ,OAAO,CACL,OAAO,GAAG,QAAQ,IAAI,WAAW,IAAI,WAAW,GAAG,YAAY,IAAI,OAAO,CAC3E,CAAC;QACJ,CAAC,CAAC;QA9EA,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC;;IAC1B,CAAC;IAED;;;OAGG;IACO,yCAAoB,GAA9B,UAA+B,IAAY;QACzC,IAAM,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAM,YAAY,GAAG,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QACrD,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,KAAK,EAAE,CAAC;IACxB,CAAC;IAED,sBAAsB;IACf,2BAAM,GAAb,UAAc,IAAY;QACxB,qBAAqB;QACrB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QAChC,mBAAmB;QACnB,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,mBAAmB;QACnB,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,eAAe;QACf,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,aAAa;QACb,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED;;;;;OAKG;IACI,+BAAU,GAAjB,UAAkB,OAAe,EAAE,OAAe,EAAE,IAAY;QAC9D,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,OAAO,CAAC;QACpC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,OAAO,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAED;;;;OAIG;IACI,iCAAY,GAAnB,UAAoB,UAAkB,EAAE,IAAY;QAClD,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,UAAU,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAWM,0BAAK,GAAZ;QACE,iBAAM,KAAK,WAAE,CAAC;IAChB,CAAC;IAmBH,iBAAC;AAAD,CAAC,AArFD,CAAqE,KAAK,GAqFzE\"}","dts":{"name":"F:/Ismart/S2-master/packages/s2-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/facet/header/base.d.ts","writeByteOrderMark":false,"text":"import { Group, Point } from '@antv/g-canvas';\r\nimport { SortParam } from \"../../common/interface\";\r\nimport { Node } from \"../layout/node\";\r\nimport { SpreadSheet } from \"../../sheet-type\";\r\n/**\r\n * Base header config interface\r\n */\r\nexport interface BaseHeaderConfig {\r\n    scrollX?: number;\r\n    scrollY?: number;\r\n    width: number;\r\n    height: number;\r\n    originalWidth?: number;\r\n    originalHeight?: number;\r\n    viewportWidth: number;\r\n    viewportHeight: number;\r\n    position: Point;\r\n    data: Node[];\r\n    spreadsheet: SpreadSheet;\r\n    sortParam?: SortParam;\r\n}\r\n/**\r\n * New Base Header for all headers(cornerHeader, rowHeader, colHeader)\r\n * NOTE: Do not use this.cfg(which lays in group) to get header config,\r\n * use {@see headerConfig} instead\r\n */\r\nexport declare abstract class BaseHeader<T extends BaseHeaderConfig> extends Group {\r\n    protected headerConfig: T;\r\n    protected constructor(cfg: T);\r\n    /**\r\n     * 清空热区，为重绘做准备，防止热区重复渲染\r\n     * @param type 当前重绘的header类型\r\n     */\r\n    protected clearResizeAreaGroup(type: string): void;\r\n    render(type: string): void;\r\n    /**\r\n     * Scroll header group's x,y\r\n     * @param scrollX hScrollBar horizontal offset\r\n     * @param scrollY hScrollBar vertical offset\r\n     * @param type\r\n     */\r\n    onScrollXY(scrollX: number, scrollY: number, type: string): void;\r\n    /**\r\n     * Only call when hRowScrollBar scrolls\r\n     * @param rowScrollX  hRowScrollbar horizontal offset\r\n     * @param type\r\n     */\r\n    onRowScrollX(rowScrollX: number, type: string): void;\r\n    protected abstract layout(): any;\r\n    protected abstract offset(): any;\r\n    protected abstract clip(): any;\r\n    clear(): void;\r\n    /**\r\n     * Check whether header cell in viewPort\r\n     * @param gridPos\r\n     * @param gridSize\r\n     * @param viewportPos\r\n     * @param viewportSize\r\n     */\r\n    protected isHeaderCellInViewport: (gridPos: any, gridSize: any, viewportPos: any, viewportSize: any) => boolean;\r\n}\r\n"}}
