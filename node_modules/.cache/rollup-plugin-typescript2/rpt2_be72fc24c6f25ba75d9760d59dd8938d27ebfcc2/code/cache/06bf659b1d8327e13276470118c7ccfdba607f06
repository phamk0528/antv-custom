{"code":"import { __extends, __read, __spreadArray } from \"tslib\";\r\nimport { Group } from '@antv/g-canvas';\r\nimport { each, get, includes, isBoolean, isNumber, keys, pickBy } from 'lodash';\r\nimport { SHAPE_ATTRS_MAP, SHAPE_STYLE_MAP, } from \"../common/constant\";\r\nimport { getContentArea, getTextAndFollowingIconPosition, } from \"../utils/cell/cell\";\r\nimport { renderLine, renderText, updateShapeAttr } from \"../utils/g-renders\";\r\nimport { isMobile } from \"../utils/is-mobile\";\r\nimport { getEllipsisText, measureTextWidth } from \"../utils/text\";\r\nvar BaseCell = /** @class */ (function (_super) {\r\n    __extends(BaseCell, _super);\r\n    function BaseCell(meta, spreadsheet) {\r\n        var restOptions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            restOptions[_i - 2] = arguments[_i];\r\n        }\r\n        var _this = _super.call(this, {}) || this;\r\n        // actual text width after be ellipsis\r\n        _this.actualTextWidth = 0;\r\n        // interactive control shapes, unify read and manipulate operations\r\n        _this.stateShapes = new Map();\r\n        _this.meta = meta;\r\n        _this.spreadsheet = spreadsheet;\r\n        _this.theme = spreadsheet.theme;\r\n        _this.handleRestOptions.apply(_this, __spreadArray([], __read(restOptions), false));\r\n        _this.initCell();\r\n        return _this;\r\n    }\r\n    BaseCell.prototype.getMeta = function () {\r\n        return this.meta;\r\n    };\r\n    BaseCell.prototype.setMeta = function (viewMeta) {\r\n        this.meta = viewMeta;\r\n    };\r\n    BaseCell.prototype.getIconStyle = function () {\r\n        return this.theme[this.cellType].icon;\r\n    };\r\n    BaseCell.prototype.getTextAndIconPosition = function (iconCount) {\r\n        if (iconCount === void 0) { iconCount = 1; }\r\n        var textStyle = this.getTextStyle();\r\n        var iconCfg = this.getIconStyle();\r\n        return getTextAndFollowingIconPosition(this.getContentArea(), textStyle, this.actualTextWidth, iconCfg, iconCount);\r\n    };\r\n    BaseCell.prototype.getActualText = function () {\r\n        return this.actualText;\r\n    };\r\n    BaseCell.prototype.getFieldValue = function () {\r\n        return this.getFormattedFieldValue().formattedValue;\r\n    };\r\n    /**\r\n     * in case there are more params to be handled\r\n     * @param options any type's rest params\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    BaseCell.prototype.handleRestOptions = function () {\r\n        var options = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            options[_i] = arguments[_i];\r\n        }\r\n        // default do nothing\r\n    };\r\n    /* -------------------------------------------------------------------------- */\r\n    /*                common functions that will be used in subtype               */\r\n    /* -------------------------------------------------------------------------- */\r\n    BaseCell.prototype.getStyle = function (name) {\r\n        return this.theme[name || this.cellType];\r\n    };\r\n    BaseCell.prototype.getResizeAreaStyle = function () {\r\n        return this.getStyle('resizeArea');\r\n    };\r\n    BaseCell.prototype.shouldDrawResizeAreaByType = function (type) {\r\n        var _a, _b;\r\n        var resize = (_b = (_a = this.spreadsheet.options) === null || _a === void 0 ? void 0 : _a.interaction) === null || _b === void 0 ? void 0 : _b.resize;\r\n        if (isBoolean(resize)) {\r\n            return resize;\r\n        }\r\n        return resize[type];\r\n    };\r\n    BaseCell.prototype.getCellArea = function () {\r\n        var _a = this.meta, x = _a.x, y = _a.y, height = _a.height, width = _a.width;\r\n        return { x: x, y: y, height: height, width: width };\r\n    };\r\n    // get content area that exclude padding\r\n    BaseCell.prototype.getContentArea = function () {\r\n        var _a;\r\n        var padding = (((_a = this.getStyle()) === null || _a === void 0 ? void 0 : _a.cell) || this.theme.dataCell.cell).padding;\r\n        return getContentArea(this.getCellArea(), padding);\r\n    };\r\n    BaseCell.prototype.getIconPosition = function (iconCount) {\r\n        if (iconCount === void 0) { iconCount = 1; }\r\n        return this.getTextAndIconPosition(iconCount).icon;\r\n    };\r\n    BaseCell.prototype.drawTextShape = function () {\r\n        var formattedValue = this.getFormattedFieldValue().formattedValue;\r\n        var maxTextWidth = this.getMaxTextWidth();\r\n        var textStyle = this.getTextStyle();\r\n        var ellipsisText = getEllipsisText({\r\n            text: formattedValue,\r\n            maxWidth: maxTextWidth,\r\n            fontParam: textStyle,\r\n            placeholder: this.spreadsheet.options.placeholder,\r\n        });\r\n        this.actualText = ellipsisText;\r\n        this.actualTextWidth = measureTextWidth(ellipsisText, textStyle);\r\n        var position = this.getTextPosition();\r\n        this.textShape = renderText(this, [this.textShape], position.x, position.y, ellipsisText, textStyle);\r\n    };\r\n    BaseCell.prototype.drawLinkFieldShape = function (showLinkFieldShape, linkFillColor) {\r\n        if (!showLinkFieldShape) {\r\n            return;\r\n        }\r\n        var device = this.spreadsheet.options.style.device;\r\n        // 配置了链接跳转\r\n        if (!isMobile(device)) {\r\n            var _a = this.textShape.getBBox(), minX = _a.minX, maxX = _a.maxX, maxY = _a.maxY;\r\n            this.linkFieldShape = renderLine(this, {\r\n                x1: minX,\r\n                y1: maxY + 1,\r\n                x2: maxX,\r\n                y2: maxY + 1,\r\n            }, { stroke: linkFillColor, lineWidth: 1 });\r\n        }\r\n        this.textShape.attr({\r\n            fill: linkFillColor,\r\n            cursor: 'pointer',\r\n            appendInfo: {\r\n                isRowHeaderText: true,\r\n                cellData: this.meta,\r\n            },\r\n        });\r\n    };\r\n    // 根据当前state来更新cell的样式\r\n    BaseCell.prototype.updateByState = function (stateName, cell) {\r\n        var _this = this;\r\n        this.spreadsheet.interaction.setInteractedCells(cell);\r\n        var stateStyles = get(this.theme, \"\".concat(this.cellType, \".cell.interactionState.\").concat(stateName));\r\n        var _a = this.getCellArea(), x = _a.x, y = _a.y, height = _a.height, width = _a.width;\r\n        each(stateStyles, function (style, styleKey) {\r\n            var targetShapeNames = keys(pickBy(SHAPE_ATTRS_MAP, function (attrs) { return includes(attrs, styleKey); }));\r\n            targetShapeNames.forEach(function (shapeName) {\r\n                var shape = _this.stateShapes.has(shapeName)\r\n                    ? _this.stateShapes.get(shapeName)\r\n                    : _this[shapeName];\r\n                // 根据borderWidth更新borderShape大小 https://github.com/antvis/S2/pull/705\r\n                if (shapeName === 'interactiveBorderShape' &&\r\n                    styleKey === 'borderWidth') {\r\n                    if (isNumber(style)) {\r\n                        var marginStyle = {\r\n                            x: x + style / 2,\r\n                            y: y + style / 2,\r\n                            width: width - style - 1,\r\n                            height: height - style - 1,\r\n                        };\r\n                        each(marginStyle, function (currentStyle, currentStyleKey) {\r\n                            updateShapeAttr(shape, currentStyleKey, currentStyle);\r\n                        });\r\n                    }\r\n                }\r\n                updateShapeAttr(shape, SHAPE_STYLE_MAP[styleKey], style);\r\n            });\r\n        });\r\n    };\r\n    BaseCell.prototype.hideInteractionShape = function () {\r\n        this.stateShapes.forEach(function (shape) {\r\n            updateShapeAttr(shape, SHAPE_STYLE_MAP.backgroundOpacity, 0);\r\n            updateShapeAttr(shape, SHAPE_STYLE_MAP.backgroundColor, 'transparent');\r\n            updateShapeAttr(shape, SHAPE_STYLE_MAP.borderOpacity, 0);\r\n            updateShapeAttr(shape, SHAPE_STYLE_MAP.borderWidth, 1);\r\n            updateShapeAttr(shape, SHAPE_STYLE_MAP.borderColor, 'transparent');\r\n        });\r\n    };\r\n    BaseCell.prototype.clearUnselectedState = function () {\r\n        updateShapeAttr(this.backgroundShape, SHAPE_STYLE_MAP.backgroundOpacity, 1);\r\n        updateShapeAttr(this.textShape, SHAPE_STYLE_MAP.textOpacity, 1);\r\n        updateShapeAttr(this.linkFieldShape, SHAPE_STYLE_MAP.opacity, 1);\r\n    };\r\n    return BaseCell;\r\n}(Group));\r\nexport { BaseCell };\r\n//# sourceMappingURL=base-cell.js.map","references":["F:/Ismart/S2-master/node_modules/@antv/g-canvas/lib/index.d.ts","F:/Ismart/S2-master/node_modules/@types/lodash/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/index.ts","F:/Ismart/S2-master/packages/s2-core/src/sheet-type/index.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/cell/cell.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/g-renders.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/is-mobile.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/text.ts"],"map":"{\"version\":3,\"file\":\"base-cell.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/cell/base-cell.ts\"],\"names\":[],\"mappings\":\"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\"}"}
