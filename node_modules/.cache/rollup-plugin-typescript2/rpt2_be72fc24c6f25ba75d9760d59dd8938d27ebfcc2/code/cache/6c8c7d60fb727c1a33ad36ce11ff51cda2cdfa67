{"code":"import { __assign, __read, __spreadArray } from \"tslib\";\r\nimport { differenceWith, filter, find, forEach, isEmpty, isEqual, map, } from 'lodash';\r\nimport { MergedCell } from \"../../cell/merged-cell\";\r\nimport { CellTypes } from \"../../common/constant\";\r\n/**\r\n *  according to the coordinates of the starting point of the rectangle,\r\n * return the four sides of the rectangle in a clockwise direction.\r\n * [TopLeft] --- [TopRight]\r\n *    |               |\r\n * [BottomLeft] -[BottomRight]\r\n * @param x\r\n * @param y\r\n * @param width\r\n * @param height\r\n */\r\nexport var getRectangleEdges = function (x, y, width, height) {\r\n    var topLeft = [x, y];\r\n    var topRight = [x + width, y];\r\n    var bottomRight = [x + width, y + height];\r\n    var bottomLeft = [x, y + height];\r\n    return [\r\n        [topLeft, topRight],\r\n        [topRight, bottomRight],\r\n        [bottomRight, bottomLeft],\r\n        [bottomLeft, topLeft],\r\n    ];\r\n};\r\n/**\r\n * return the edges without overlapping edges\r\n * @param edges the collection of edges\r\n */\r\nexport var unique = function (edges) {\r\n    var result = [];\r\n    forEach(edges, function (edge) {\r\n        var reverseEdge = [edge[1], edge[0]];\r\n        if (!JSON.stringify(edges).includes(JSON.stringify(reverseEdge))) {\r\n            result.push(edge);\r\n        }\r\n    });\r\n    return result;\r\n};\r\n/**\r\n * return the edge according to the  coordinate of current edge\r\n * eg: curEdge: [[0,0], [100,0]] then the next edge: [[100, 0 ], [100, 100]]\r\n * @param curEdge the  coordinate of current edge\r\n * @param edges the collection of edges\r\n */\r\nexport var getNextEdge = function (curEdge, edges) {\r\n    return find(edges, function (edge) { return isEqual(edge[0], curEdge[1]); });\r\n};\r\n/**\r\n * return all the points of the polygon\r\n * @param cells the collection of information of cells which needed be merged\r\n */\r\nexport var getPolygonPoints = function (cells) {\r\n    var allEdges = [];\r\n    cells.forEach(function (cell) {\r\n        var meta = cell.getMeta();\r\n        var x = meta.x, y = meta.y, width = meta.width, height = meta.height;\r\n        allEdges = allEdges.concat(getRectangleEdges(x, y, width, height));\r\n    });\r\n    allEdges = unique(allEdges);\r\n    var allPoints = [];\r\n    var startEdge = allEdges[0];\r\n    var curEdge = startEdge;\r\n    var nextEdge = [];\r\n    while (!isEqual(startEdge, nextEdge)) {\r\n        allPoints = allPoints.concat(curEdge);\r\n        nextEdge = getNextEdge(curEdge, allEdges);\r\n        curEdge = nextEdge;\r\n    }\r\n    return allPoints;\r\n};\r\n/**\r\n * get cells on the outside of visible area through mergeCellInfo\r\n * @param invisibleCellInfo\r\n * @param sheet\r\n */\r\nexport var getInvisibleInfo = function (invisibleCellInfo, sheet) {\r\n    var cells = [];\r\n    var viewMeta;\r\n    forEach(invisibleCellInfo, function (cellInfo) {\r\n        var _a, _b, _c;\r\n        var meta = (_b = (_a = sheet === null || sheet === void 0 ? void 0 : sheet.facet) === null || _a === void 0 ? void 0 : _a.layoutResult) === null || _b === void 0 ? void 0 : _b.getCellMeta(cellInfo.rowIndex, cellInfo.colIndex);\r\n        if (meta) {\r\n            var cell = (_c = sheet === null || sheet === void 0 ? void 0 : sheet.facet) === null || _c === void 0 ? void 0 : _c.cfg.dataCell(meta);\r\n            viewMeta = (cellInfo === null || cellInfo === void 0 ? void 0 : cellInfo.showText) ? meta : viewMeta;\r\n            cells.push(cell);\r\n        }\r\n    });\r\n    return { cells: cells, cellsMeta: viewMeta };\r\n};\r\n/**\r\n * get { cells, invisibleCellInfo, cellsMeta } in the inside of visible area through mergeCellInfo\r\n * @param cellsInfos\r\n * @param allVisibleCells\r\n * @returns { cells, invisibleCellInfo, cellsMeta }\r\n */\r\nexport var getVisibleInfo = function (cellsInfos, allVisibleCells) {\r\n    var cells = [];\r\n    var invisibleCellInfo = [];\r\n    var cellsMeta;\r\n    forEach(cellsInfos, function (cellInfo) {\r\n        var findCell = find(allVisibleCells, function (cell) {\r\n            var _a;\r\n            var meta = (_a = cell === null || cell === void 0 ? void 0 : cell.getMeta) === null || _a === void 0 ? void 0 : _a.call(cell);\r\n            if ((meta === null || meta === void 0 ? void 0 : meta.colIndex) === (cellInfo === null || cellInfo === void 0 ? void 0 : cellInfo.colIndex) &&\r\n                (meta === null || meta === void 0 ? void 0 : meta.rowIndex) === (cellInfo === null || cellInfo === void 0 ? void 0 : cellInfo.rowIndex)) {\r\n                return cell;\r\n            }\r\n        });\r\n        if (findCell) {\r\n            cells.push(findCell);\r\n            cellsMeta = (cellInfo === null || cellInfo === void 0 ? void 0 : cellInfo.showText)\r\n                ? findCell === null || findCell === void 0 ? void 0 : findCell.getMeta()\r\n                : cellsMeta;\r\n        }\r\n        else {\r\n            invisibleCellInfo.push(cellInfo);\r\n        }\r\n    });\r\n    return { cells: cells, invisibleCellInfo: invisibleCellInfo, cellsMeta: cellsMeta };\r\n};\r\n/**\r\n * get the data cell and meta that make up the mergedCell\r\n * @param cellsInfos\r\n * @param allVisibleCells\r\n * @param sheet\r\n */\r\nexport var getTempMergedCell = function (allVisibleCells, sheet, cellsInfos) {\r\n    var _a;\r\n    if (cellsInfos === void 0) { cellsInfos = []; }\r\n    var _b = getVisibleInfo(cellsInfos, allVisibleCells), cellsMeta = _b.cellsMeta, cells = _b.cells, invisibleCellInfo = _b.invisibleCellInfo;\r\n    var viewMeta = cellsMeta;\r\n    var mergedAllCells = cells;\r\n    // some cells are invisible and some cells are visible\r\n    var isPartiallyVisible = (invisibleCellInfo === null || invisibleCellInfo === void 0 ? void 0 : invisibleCellInfo.length) > 0 &&\r\n        invisibleCellInfo.length < cellsInfos.length;\r\n    // 当 MergedCell 只有部分在可视区域时，在此获取 MergedCell 不在可视区域内的 cells\r\n    if (isPartiallyVisible) {\r\n        var _c = getInvisibleInfo(invisibleCellInfo, sheet), invisibleCells = _c.cells, invisibleMeta = _c.cellsMeta;\r\n        viewMeta = viewMeta || invisibleMeta;\r\n        mergedAllCells = cells.concat(invisibleCells);\r\n    }\r\n    if (!isEmpty(cells) && !viewMeta) {\r\n        viewMeta = (_a = mergedAllCells[0]) === null || _a === void 0 ? void 0 : _a.getMeta(); // 如果没有指定合并后的文本绘制的位置，默认画在选择的第一个单元格内\r\n    }\r\n    return {\r\n        cells: mergedAllCells,\r\n        viewMeta: viewMeta,\r\n        isPartiallyVisible: isPartiallyVisible,\r\n    };\r\n};\r\n/**\r\n * get the active cells' info as the default info of merged cells\r\n * @param sheet\r\n */\r\nexport var getActiveCellsInfo = function (sheet) {\r\n    var interaction = sheet.interaction;\r\n    var cells = interaction.getActiveCells();\r\n    var mergedCellsInfo = [];\r\n    forEach(cells, function (cell, index) {\r\n        var meta = cell.getMeta();\r\n        // 在合并单元格中，第一个单元格被标标记为展示数据。\r\n        var showText = index === 0 ? { showText: true } : {};\r\n        mergedCellsInfo.push(__assign(__assign({}, showText), { colIndex: meta === null || meta === void 0 ? void 0 : meta.colIndex, rowIndex: meta === null || meta === void 0 ? void 0 : meta.rowIndex }));\r\n    });\r\n    return mergedCellsInfo;\r\n};\r\n/**\r\n * draw the background of the merged cell\r\n * @param sheet the base sheet instance\r\n * @param cellsInfo\r\n * @param hideData\r\n */\r\nexport var mergeCell = function (sheet, cellsInfo, hideData) {\r\n    var _a;\r\n    var mergeCellInfo = cellsInfo || getActiveCellsInfo(sheet);\r\n    if ((mergeCellInfo === null || mergeCellInfo === void 0 ? void 0 : mergeCellInfo.length) <= 1) {\r\n        // eslint-disable-next-line no-console\r\n        console.error('then merged cells must be more than one');\r\n        return;\r\n    }\r\n    var allVisibleCells = filter(sheet.panelScrollGroup.getChildren(), function (child) { return !(child instanceof MergedCell); });\r\n    var _b = getTempMergedCell(allVisibleCells, sheet, mergeCellInfo), cells = _b.cells, viewMeta = _b.viewMeta, isPartiallyVisible = _b.isPartiallyVisible;\r\n    if (!isEmpty(cells)) {\r\n        var mergedCellInfoList = ((_a = sheet.options) === null || _a === void 0 ? void 0 : _a.mergedCellsInfo) || [];\r\n        mergedCellInfoList.push(mergeCellInfo);\r\n        sheet.setOptions({\r\n            mergedCellsInfo: mergedCellInfoList,\r\n        });\r\n        var meta = hideData ? undefined : viewMeta;\r\n        sheet.panelScrollGroup.add(new MergedCell(sheet, cells, meta, isPartiallyVisible));\r\n    }\r\n};\r\n/**\r\n * remove unmergedCells Info, return new mergedCell info\r\n * @param removeMergedCell\r\n * @param mergedCellsInfo\r\n */\r\nexport var removeUnmergedCellsInfo = function (removeMergedCell, mergedCellsInfo) {\r\n    var removeCellInfo = map(removeMergedCell.cells, function (cell) {\r\n        return {\r\n            colIndex: cell.getMeta().colIndex,\r\n            rowIndex: cell.getMeta().rowIndex,\r\n        };\r\n    });\r\n    return filter(mergedCellsInfo, function (mergedCellInfo) {\r\n        var newMergedCellInfo = mergedCellInfo.map(function (info) {\r\n            if (info.showText) {\r\n                return {\r\n                    colIndex: info.colIndex,\r\n                    rowIndex: info.rowIndex,\r\n                };\r\n            }\r\n            return info;\r\n        });\r\n        return !isEqual(newMergedCellInfo, removeCellInfo);\r\n    });\r\n};\r\n/**\r\n * unmerge MergedCell\r\n * @param removedCells\r\n * @param sheet\r\n */\r\nexport var unmergeCell = function (sheet, removedCells) {\r\n    var _a, _b, _c;\r\n    if (!removedCells || removedCells.cellType !== CellTypes.MERGED_CELL) {\r\n        // eslint-disable-next-line no-console\r\n        console.error(\"unmergeCell: the \".concat(removedCells, \" is not a MergedCell\"));\r\n        return;\r\n    }\r\n    var newMergedCellsInfo = removeUnmergedCellsInfo(removedCells, (_a = sheet.options) === null || _a === void 0 ? void 0 : _a.mergedCellsInfo);\r\n    if ((newMergedCellsInfo === null || newMergedCellsInfo === void 0 ? void 0 : newMergedCellsInfo.length) !== ((_c = (_b = sheet.options) === null || _b === void 0 ? void 0 : _b.mergedCellsInfo) === null || _c === void 0 ? void 0 : _c.length)) {\r\n        sheet.setOptions({\r\n            mergedCellsInfo: newMergedCellsInfo,\r\n        });\r\n        removedCells.remove(true);\r\n    }\r\n};\r\n/**\r\n * 合并 TempMergedCell, 通过 cell.viewMeta.id 判断 TempMergedCell 是否是同一个。\r\n * @param TempMergedCells\r\n * @param otherTempMergedCells\r\n */\r\nexport var mergeTempMergedCell = function (TempMergedCells, otherTempMergedCells) {\r\n    var mergedTempMergedCells = {};\r\n    __spreadArray(__spreadArray([], __read(TempMergedCells), false), __read(otherTempMergedCells), false).forEach(function (cell) {\r\n        mergedTempMergedCells[cell.viewMeta.id] = cell;\r\n    });\r\n    return Object.values(mergedTempMergedCells);\r\n};\r\n/**\r\n * 将 MergedCell 转换成 TempMergedCell\r\n * @param oldMergedCells\r\n * @constructor\r\n */\r\nexport var MergedCellConvertTempMergedCells = function (oldMergedCells) {\r\n    return map(oldMergedCells, function (mergedCell) {\r\n        return {\r\n            cells: mergedCell.cells,\r\n            viewMeta: mergedCell.getMeta(),\r\n            isPartiallyVisible: mergedCell.isPartiallyVisible,\r\n        };\r\n    });\r\n};\r\n/**\r\n * 对比两个TempMergedCell，返回 mainTempMergedCells 中存在的，但是 otherTempMergedCells 中不存在的的 TempMergedCell\r\n * 因为 g-base 无法渲染不在可视区域内的图形，所以 isPartiallyVisible 为 true 时也需要重新渲染\r\n * @param mainTempMergedCells\r\n * @param compareTempMergedCells\r\n */\r\nexport var differenceTempMergedCells = function (mainTempMergedCells, compareTempMergedCells) {\r\n    return differenceWith(mainTempMergedCells, compareTempMergedCells, function (main, compare) {\r\n        return (isEqual(main.viewMeta.id, compare.viewMeta.id) &&\r\n            !main.isPartiallyVisible);\r\n    });\r\n};\r\n/**\r\n * update the mergedCell\r\n * @param sheet the base sheet instance\r\n */\r\nexport var updateMergedCells = function (sheet) {\r\n    var _a;\r\n    var mergedCellsInfo = (_a = sheet.options) === null || _a === void 0 ? void 0 : _a.mergedCellsInfo;\r\n    if (isEmpty(mergedCellsInfo))\r\n        return;\r\n    // 可见区域的所有cells\r\n    var allCells = filter(sheet.panelScrollGroup.getChildren(), function (child) { return !(child instanceof MergedCell); });\r\n    if (isEmpty(allCells))\r\n        return;\r\n    // allVisibleTempMergedCells 所有可视区域的 mergedCell\r\n    var allVisibleTempMergedCells = [];\r\n    mergedCellsInfo.forEach(function (cellsInfo) {\r\n        var tempMergedCell = getTempMergedCell(allCells, sheet, cellsInfo);\r\n        if (tempMergedCell.cells.length > 0) {\r\n            allVisibleTempMergedCells.push(tempMergedCell);\r\n        }\r\n    });\r\n    // 获取 oldTempMergedCells 便用后续进行 diff 操作\r\n    var oldMergedCells = filter(sheet.panelScrollGroup.getChildren(), function (child) { return child instanceof MergedCell; });\r\n    var oldTempMergedCells = MergedCellConvertTempMergedCells(oldMergedCells);\r\n    // compare oldTempMergedCells and allTempMergedCells, find remove MergedCells and add MergedCells\r\n    var removeTempMergedCells = differenceTempMergedCells(oldTempMergedCells, allVisibleTempMergedCells);\r\n    var addTempMergedCells = differenceTempMergedCells(allVisibleTempMergedCells, oldTempMergedCells);\r\n    // remove old MergedCells\r\n    forEach(removeTempMergedCells, function (tempMergedCell) {\r\n        var oldMergedCell = find(oldMergedCells, function (mergedCell) {\r\n            return isEqual(mergedCell.getMeta().id, tempMergedCell.viewMeta.id);\r\n        });\r\n        oldMergedCell === null || oldMergedCell === void 0 ? void 0 : oldMergedCell.remove(true);\r\n    });\r\n    // add new MergedCells\r\n    forEach(addTempMergedCells, function (_a) {\r\n        var cells = _a.cells, viewMeta = _a.viewMeta, isPartiallyVisible = _a.isPartiallyVisible;\r\n        sheet.panelScrollGroup.add(new MergedCell(sheet, cells, viewMeta, isPartiallyVisible));\r\n    });\r\n};\r\n//# sourceMappingURL=merge-cell.js.map","references":["F:/Ismart/S2-master/node_modules/@types/lodash/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/cell/merged-cell.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/interaction.ts","F:/Ismart/S2-master/packages/s2-core/src/sheet-type/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/index.ts"],"map":"{\"version\":3,\"file\":\"merge-cell.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/utils/interaction/merge-cell.ts\"],\"names\":[],\"mappings\":\"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\"}"}
