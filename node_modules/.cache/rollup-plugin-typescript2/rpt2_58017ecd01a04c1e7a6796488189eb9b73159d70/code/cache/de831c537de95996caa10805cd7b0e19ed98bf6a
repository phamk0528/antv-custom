{"code":"import { __assign, __extends } from \"tslib\";\r\nimport { cond, constant, isEmpty, isEqual, last, matches, max, stubTrue, } from 'lodash';\r\nimport { shouldAddResizeArea } from './../utils/interaction/resize';\r\nimport { HeaderCell } from './header-cell';\r\nimport { getResizeAreaAttrs, getOrCreateResizeAreaGroupById, } from \"../utils/interaction/resize\";\r\nimport { CellTypes, EXTRA_FIELD, DEFAULT_CORNER_TEXT, KEY_GROUP_CORNER_RESIZE_AREA, ResizeAreaEffect, ResizeDirectionType, S2Event, } from \"../common/constant\";\r\nimport { CellBorderPosition } from \"../common/interface\";\r\nimport { getTextPosition, getVerticalPosition, getBorderPositionAndStyle, } from \"../utils/cell/cell\";\r\nimport { renderLine, renderRect, renderText, renderTreeIcon, } from \"../utils/g-renders\";\r\nimport { isIPhoneX } from \"../utils/is-mobile\";\r\nimport { getEllipsisText, measureTextWidth } from \"../utils/text\";\r\nimport { CornerNodeType } from \"../common/interface/node\";\r\nvar CornerCell = /** @class */ (function (_super) {\r\n    __extends(CornerCell, _super);\r\n    function CornerCell() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.textShapes = [];\r\n        return _this;\r\n    }\r\n    Object.defineProperty(CornerCell.prototype, \"cellType\", {\r\n        get: function () {\r\n            return CellTypes.CORNER_CELL;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    CornerCell.prototype.update = function () { };\r\n    CornerCell.prototype.initCell = function () {\r\n        _super.prototype.initCell.call(this);\r\n        this.textShapes = [];\r\n        this.drawBackgroundShape();\r\n        this.drawTreeIcon();\r\n        this.drawCellText();\r\n        this.drawActionIcons();\r\n        this.drawBorderShape();\r\n        this.drawResizeArea();\r\n    };\r\n    CornerCell.prototype.drawCellText = function () {\r\n        var label = this.meta.label;\r\n        var x = this.getContentArea().x;\r\n        var _a = this.getCellArea(), y = _a.y, height = _a.height;\r\n        var textStyle = this.getTextStyle();\r\n        var cornerText = this.getCornerText(label);\r\n        // 当为树状结构下需要计算文本前收起展开的icon占的位置\r\n        var maxWidth = this.getMaxTextWidth();\r\n        var text = getEllipsisText({\r\n            text: cornerText,\r\n            maxWidth: maxWidth,\r\n            fontParam: textStyle,\r\n            placeholder: this.spreadsheet.options.placeholder,\r\n        });\r\n        this.actualText = text;\r\n        var ellipseIndex = text.indexOf('...');\r\n        var firstLine = text;\r\n        var secondLine = '';\r\n        // 存在文字的省略号 & 展示为tree结构\r\n        if (ellipseIndex !== -1 && this.spreadsheet.isHierarchyTreeType()) {\r\n            // 剪裁到 ... 最有点的后1个像素位置\r\n            var lastIndex = ellipseIndex + (isIPhoneX() ? 1 : 0);\r\n            firstLine = cornerText.substr(0, lastIndex);\r\n            secondLine = cornerText.slice(lastIndex);\r\n            // 第二行重新计算...逻辑\r\n            secondLine = getEllipsisText({\r\n                text: secondLine,\r\n                maxWidth: maxWidth,\r\n                fontParam: textStyle,\r\n            });\r\n        }\r\n        var textX = getTextPosition({\r\n            x: x + this.getTreeIconWidth(),\r\n            y: y,\r\n            width: maxWidth,\r\n            height: height,\r\n        }, textStyle).x;\r\n        var textY = y + (isEmpty(secondLine) ? height / 2 : height / 4);\r\n        // first line\r\n        this.textShapes.push(renderText(this, [this.textShapes[0]], textX, textY, firstLine, textStyle));\r\n        // second line\r\n        if (!isEmpty(secondLine)) {\r\n            this.textShapes.push(renderText(this, [this.textShapes[1]], textX, y + height * 0.75, secondLine, textStyle));\r\n        }\r\n        this.actualTextWidth = max([\r\n            measureTextWidth(firstLine, textStyle),\r\n            measureTextWidth(secondLine, textStyle),\r\n        ]);\r\n    };\r\n    /**\r\n     * 绘制折叠展开的icon\r\n     */\r\n    CornerCell.prototype.drawTreeIcon = function () {\r\n        var _this = this;\r\n        if (!this.showTreeIcon() || this.meta.cornerType === CornerNodeType.Col) {\r\n            return;\r\n        }\r\n        var hierarchyCollapse = this.headerConfig.hierarchyCollapse;\r\n        var size = this.getStyle().icon.size;\r\n        var _a = this.getTextStyle(), textBaseline = _a.textBaseline, fill = _a.fill;\r\n        var area = this.getContentArea();\r\n        this.treeIcon = renderTreeIcon(this, {\r\n            x: area.x,\r\n            y: getVerticalPosition(area, textBaseline, size),\r\n            width: size,\r\n            height: size,\r\n        }, fill, hierarchyCollapse, function () {\r\n            _this.headerConfig.spreadsheet.store.set('scrollY', 0);\r\n            _this.headerConfig.spreadsheet.emit(S2Event.LAYOUT_TREE_ROWS_COLLAPSE_ALL, hierarchyCollapse);\r\n        });\r\n    };\r\n    CornerCell.prototype.drawBackgroundShape = function () {\r\n        var _a = this.getStyle().cell, backgroundColorOpacity = _a.backgroundColorOpacity, backgroundColor = _a.backgroundColor;\r\n        var attrs = __assign(__assign({}, this.getCellArea()), { fill: backgroundColor, opacity: backgroundColorOpacity });\r\n        this.backgroundShape = renderRect(this, attrs);\r\n    };\r\n    /**\r\n     * Render cell horizontalBorder border\r\n     * @private\r\n     */\r\n    CornerCell.prototype.drawBorderShape = function () {\r\n        var _this = this;\r\n        [CellBorderPosition.TOP, CellBorderPosition.LEFT].forEach(function (type) {\r\n            var _a = getBorderPositionAndStyle(type, _this.getCellArea(), _this.getStyle().cell), position = _a.position, style = _a.style;\r\n            renderLine(_this, position, style);\r\n        });\r\n    };\r\n    CornerCell.prototype.isLastRowCornerCell = function () {\r\n        var _a = this.meta, cornerType = _a.cornerType, field = _a.field;\r\n        var rows = this.headerConfig.rows;\r\n        return (cornerType === CornerNodeType.Row &&\r\n            (this.spreadsheet.isHierarchyTreeType() || last(rows) === field));\r\n    };\r\n    CornerCell.prototype.getResizeAreaEffect = function () {\r\n        var cornerType = this.meta.cornerType;\r\n        if (cornerType === CornerNodeType.Series) {\r\n            return ResizeAreaEffect.Series;\r\n        }\r\n        return this.isLastRowCornerCell() && this.spreadsheet.isHierarchyTreeType()\r\n            ? ResizeAreaEffect.Tree\r\n            : ResizeAreaEffect.Field;\r\n    };\r\n    CornerCell.prototype.drawResizeArea = function () {\r\n        if (!this.shouldDrawResizeAreaByType('cornerCellHorizontal')) {\r\n            return;\r\n        }\r\n        var resizeStyle = this.getResizeAreaStyle();\r\n        var resizeArea = getOrCreateResizeAreaGroupById(this.spreadsheet, KEY_GROUP_CORNER_RESIZE_AREA);\r\n        var _a = this.headerConfig, position = _a.position, scrollX = _a.scrollX, scrollY = _a.scrollY, headerWidth = _a.width, headerHeight = _a.height;\r\n        var _b = this.meta, x = _b.x, y = _b.y, width = _b.width, height = _b.height, field = _b.field, cornerType = _b.cornerType;\r\n        var resizeAreaBBox = {\r\n            x: x + width - resizeStyle.size / 2,\r\n            y: y,\r\n            width: resizeStyle.size,\r\n            height: height,\r\n        };\r\n        var resizeClipAreaBBox = {\r\n            x: 0,\r\n            y: 0,\r\n            width: headerWidth,\r\n            height: headerHeight,\r\n        };\r\n        if (cornerType === CornerNodeType.Col ||\r\n            !shouldAddResizeArea(resizeAreaBBox, resizeClipAreaBBox, {\r\n                scrollX: scrollX,\r\n                scrollY: scrollY,\r\n            })) {\r\n            return;\r\n        }\r\n        // 将相对坐标映射到全局坐标系中\r\n        // 最后一个维度需要撑满角头高度\r\n        var offsetX = position.x + x - scrollX;\r\n        var offsetY = position.y + (this.isLastRowCornerCell() ? 0 : y);\r\n        resizeArea.addShape('rect', {\r\n            attrs: __assign(__assign({}, getResizeAreaAttrs({\r\n                theme: resizeStyle,\r\n                id: field,\r\n                type: ResizeDirectionType.Horizontal,\r\n                effect: this.getResizeAreaEffect(),\r\n                offsetX: offsetX,\r\n                offsetY: offsetY,\r\n                width: width,\r\n                height: height,\r\n            })), { x: offsetX + width - resizeStyle.size / 2, y: offsetY, height: this.isLastRowCornerCell() ? headerHeight : height }),\r\n        });\r\n    };\r\n    CornerCell.prototype.showTreeIcon = function () {\r\n        var _a;\r\n        // 批量折叠或者展开的icon，只存在树状结构的第一个cell前\r\n        return (this.headerConfig.spreadsheet.isHierarchyTreeType() && ((_a = this.meta) === null || _a === void 0 ? void 0 : _a.x) === 0);\r\n    };\r\n    CornerCell.prototype.getIconPosition = function () {\r\n        var _a, _b;\r\n        var textCfg = (_b = (_a = this.textShapes) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.cfg.attrs;\r\n        var _c = this.getTextStyle(), textBaseline = _c.textBaseline, textAlign = _c.textAlign;\r\n        var _d = this.getStyle().icon, size = _d.size, margin = _d.margin;\r\n        var iconX = (textCfg === null || textCfg === void 0 ? void 0 : textCfg.x) +\r\n            cond([\r\n                [matches('center'), constant(this.actualTextWidth / 2)],\r\n                [matches('right'), constant(0)],\r\n                [stubTrue, constant(this.actualTextWidth)],\r\n            ])(textAlign) +\r\n            margin.left;\r\n        var iconY = getVerticalPosition(this.getContentArea(), textBaseline, size);\r\n        return { x: iconX, y: iconY };\r\n    };\r\n    CornerCell.prototype.getTreeIconWidth = function () {\r\n        var _a = this.getStyle().icon, size = _a.size, margin = _a.margin;\r\n        return this.showTreeIcon() ? size + margin.right : 0;\r\n    };\r\n    CornerCell.prototype.getTextStyle = function () {\r\n        var cornerType = this.meta.cornerType;\r\n        var _a = this.getStyle(), text = _a.text, bolderText = _a.bolderText;\r\n        var cornerTextStyle = cornerType === CornerNodeType.Col ? text : bolderText;\r\n        return __assign(__assign({}, cornerTextStyle), { textBaseline: 'middle' });\r\n    };\r\n    CornerCell.prototype.getMaxTextWidth = function () {\r\n        var width = this.getContentArea().width;\r\n        return width - this.getTreeIconWidth() - this.getActionIconsWidth();\r\n    };\r\n    CornerCell.prototype.getTextPosition = function () {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n    };\r\n    CornerCell.prototype.getCornerText = function (label) {\r\n        var _a;\r\n        if (isEqual(label, EXTRA_FIELD)) {\r\n            return ((_a = this.spreadsheet.options) === null || _a === void 0 ? void 0 : _a.cornerText) || DEFAULT_CORNER_TEXT;\r\n        }\r\n        var formattedValue = this.getFormattedFieldValue().formattedValue;\r\n        return formattedValue;\r\n    };\r\n    return CornerCell;\r\n}(HeaderCell));\r\nexport { CornerCell };\r\n//# sourceMappingURL=corner-cell.js.map","references":["F:/Ismart/S2-master/node_modules/@antv/g-canvas/lib/index.d.ts","F:/Ismart/S2-master/node_modules/@types/lodash/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/interaction/resize.ts","F:/Ismart/S2-master/packages/s2-core/src/cell/header-cell.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/interaction/resize.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/index.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/header/corner.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/cell/cell.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/g-renders.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/is-mobile.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/text.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/node.ts"],"map":"{\"version\":3,\"file\":\"corner-cell.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/cell/corner-cell.ts\"],\"names\":[],\"mappings\":\"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\"}"}
