{"code":"import { __extends } from \"tslib\";\r\nimport { get, includes, isEmpty } from 'lodash';\r\nimport { BaseHeader } from './base';\r\nimport { translateGroupX } from \"../utils\";\r\nimport { CornerCell } from \"../../cell/corner-cell\";\r\nimport { KEY_SERIES_NUMBER_NODE } from \"../../common/constant\";\r\nimport { i18n } from \"../../common/i18n\";\r\nimport { Node } from \"../layout/node\";\r\nimport { CornerNodeType } from \"../../common/interface/node\";\r\n/**\r\n * Corner Header for SpreadSheet\r\n */\r\nvar CornerHeader = /** @class */ (function (_super) {\r\n    __extends(CornerHeader, _super);\r\n    function CornerHeader(cfg) {\r\n        return _super.call(this, cfg) || this;\r\n    }\r\n    /**\r\n     * Get corner Header by config\r\n     * @param panelBBox\r\n     * @param cornerBBox\r\n     * @param seriesNumberWidth\r\n     * @param cfg\r\n     * @param layoutResult\r\n     * @param s2 spreadsheet\r\n     */\r\n    CornerHeader.getCornerHeader = function (panelBBox, cornerBBox, seriesNumberWidth, cfg, layoutResult, s2) {\r\n        var width = panelBBox.width, height = panelBBox.height;\r\n        var cornerOriginalWidth = cornerBBox.originalWidth, cornerOriginalHeight = cornerBBox.originalHeight, cornerWidth = cornerBBox.width, cornerHeight = cornerBBox.height;\r\n        var cornerNodes = this.getCornerNodes({ x: cornerBBox.x, y: cornerBBox.y }, cornerOriginalWidth, cornerOriginalHeight, cfg.rows, cfg.columns, layoutResult.rowsHierarchy, layoutResult.colsHierarchy, cfg.dataSet, seriesNumberWidth, s2);\r\n        return new CornerHeader({\r\n            data: cornerNodes,\r\n            position: { x: cornerBBox.x, y: cornerBBox.y },\r\n            width: cornerWidth,\r\n            height: cornerHeight,\r\n            originalHeight: cornerOriginalHeight,\r\n            originalWidth: cornerOriginalWidth,\r\n            viewportWidth: width,\r\n            viewportHeight: height,\r\n            hierarchyType: cfg.hierarchyType,\r\n            hierarchyCollapse: cfg.hierarchyCollapse,\r\n            rows: cfg.rows,\r\n            columns: cfg.columns,\r\n            seriesNumberWidth: seriesNumberWidth,\r\n            spreadsheet: s2,\r\n        });\r\n    };\r\n    CornerHeader.getCornerNodes = function (position, width, height, rows, columns, rowsHierarchy, colsHierarchy, dataSet, seriesNumberWidth, s2) {\r\n        var _a, _b, _c, _d;\r\n        var cornerNodes = [];\r\n        // check if show series number node\r\n        // spreadsheet must have at least one node in last level\r\n        if (seriesNumberWidth && (colsHierarchy === null || colsHierarchy === void 0 ? void 0 : colsHierarchy.sampleNodeForLastLevel)) {\r\n            var sNode = new Node({\r\n                id: '',\r\n                key: KEY_SERIES_NUMBER_NODE,\r\n                value: i18n('序号'),\r\n            });\r\n            sNode.x = position === null || position === void 0 ? void 0 : position.x;\r\n            // different type different y\r\n            sNode.y = (_a = colsHierarchy === null || colsHierarchy === void 0 ? void 0 : colsHierarchy.sampleNodeForLastLevel) === null || _a === void 0 ? void 0 : _a.y;\r\n            sNode.width = seriesNumberWidth;\r\n            // different type different height\r\n            sNode.height = (_b = colsHierarchy === null || colsHierarchy === void 0 ? void 0 : colsHierarchy.sampleNodeForLastLevel) === null || _b === void 0 ? void 0 : _b.height;\r\n            sNode.isPivotMode = true;\r\n            sNode.cornerType = CornerNodeType.Series;\r\n            cornerNodes.push(sNode);\r\n        }\r\n        // spreadsheet type tree mode\r\n        if (colsHierarchy === null || colsHierarchy === void 0 ? void 0 : colsHierarchy.sampleNodeForLastLevel) {\r\n            if (s2.isHierarchyTreeType()) {\r\n                var drillDownFieldInLevel = s2.store.get('drillDownFieldInLevel', []);\r\n                var drillFields_1 = drillDownFieldInLevel.map(function (d) { return d.drillField; });\r\n                var cNode = new Node({\r\n                    key: '',\r\n                    id: '',\r\n                    // 角头过滤下钻的维度\r\n                    value: rows\r\n                        .filter(function (value) { return !includes(drillFields_1, value); })\r\n                        .map(function (key) { return dataSet.getFieldName(key); })\r\n                        .join('/'),\r\n                });\r\n                cNode.x = position.x + seriesNumberWidth;\r\n                cNode.y = (_c = colsHierarchy === null || colsHierarchy === void 0 ? void 0 : colsHierarchy.sampleNodeForLastLevel) === null || _c === void 0 ? void 0 : _c.y;\r\n                // cNode should subtract series width\r\n                cNode.width = width - seriesNumberWidth;\r\n                cNode.height = (_d = colsHierarchy === null || colsHierarchy === void 0 ? void 0 : colsHierarchy.sampleNodeForLastLevel) === null || _d === void 0 ? void 0 : _d.height;\r\n                cNode.seriesNumberWidth = seriesNumberWidth;\r\n                cNode.isPivotMode = true;\r\n                cNode.spreadsheet = s2;\r\n                cNode.cornerType = CornerNodeType.Row;\r\n                cornerNodes.push(cNode);\r\n            }\r\n            else {\r\n                // spreadsheet type grid mode\r\n                rowsHierarchy.sampleNodesForAllLevels.forEach(function (rowNode) {\r\n                    var field = rows[rowNode.level];\r\n                    var cNode = new Node({\r\n                        key: field,\r\n                        id: '',\r\n                        value: dataSet.getFieldName(field),\r\n                    });\r\n                    cNode.x = rowNode.x + seriesNumberWidth;\r\n                    cNode.y = colsHierarchy.sampleNodeForLastLevel.y;\r\n                    cNode.width = rowNode.width;\r\n                    cNode.height = colsHierarchy.sampleNodeForLastLevel.height;\r\n                    cNode.field = field;\r\n                    cNode.isPivotMode = true;\r\n                    cNode.cornerType = CornerNodeType.Row;\r\n                    cNode.spreadsheet = s2;\r\n                    cornerNodes.push(cNode);\r\n                });\r\n            }\r\n        }\r\n        colsHierarchy.sampleNodesForAllLevels.forEach(function (colNode) {\r\n            // 列头最后一个层级的位置为行头 label 标识，需要过滤\r\n            if (colNode.level < colsHierarchy.maxLevel) {\r\n                var field = columns[colNode.level];\r\n                var cNode = new Node({\r\n                    key: field,\r\n                    id: '',\r\n                    value: dataSet.getFieldName(field),\r\n                });\r\n                cNode.x = position.x;\r\n                cNode.y = colNode.y;\r\n                cNode.width = width;\r\n                cNode.height = colNode.height;\r\n                cNode.field = field;\r\n                cNode.isPivotMode = true;\r\n                cNode.cornerType = CornerNodeType.Col;\r\n                cNode.spreadsheet = s2;\r\n                cornerNodes.push(cNode);\r\n            }\r\n        });\r\n        return cornerNodes;\r\n    };\r\n    /**\r\n     *  Make cornerHeader scroll with hScrollBar\r\n     * @param scrollX\r\n     */\r\n    CornerHeader.prototype.onCorScroll = function (scrollX, type) {\r\n        this.headerConfig.scrollX = scrollX;\r\n        this.render(type);\r\n    };\r\n    CornerHeader.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    CornerHeader.prototype.layout = function () {\r\n        this.renderCells();\r\n    };\r\n    CornerHeader.prototype.renderCells = function () {\r\n        var _this = this;\r\n        var _a, _b, _c, _d;\r\n        var _e = this.headerConfig, data = _e.data, spreadsheet = _e.spreadsheet;\r\n        var cornerHeader = (_b = (_a = spreadsheet === null || spreadsheet === void 0 ? void 0 : spreadsheet.facet) === null || _a === void 0 ? void 0 : _a.cfg) === null || _b === void 0 ? void 0 : _b.cornerHeader;\r\n        var cornerCell = (_d = (_c = spreadsheet === null || spreadsheet === void 0 ? void 0 : spreadsheet.facet) === null || _c === void 0 ? void 0 : _c.cfg) === null || _d === void 0 ? void 0 : _d.cornerCell;\r\n        if (cornerHeader) {\r\n            cornerHeader(this, spreadsheet, this.headerConfig);\r\n            return;\r\n        }\r\n        this.addBgRect();\r\n        data.forEach(function (item) {\r\n            var cell;\r\n            if (cornerCell) {\r\n                cell = cornerCell(item, _this.headerConfig.spreadsheet, _this.headerConfig);\r\n            }\r\n            if (isEmpty(cell)) {\r\n                cell = new CornerCell(item, _this.headerConfig.spreadsheet, _this.headerConfig);\r\n            }\r\n            _this.add(cell);\r\n        });\r\n    };\r\n    CornerHeader.prototype.offset = function () {\r\n        var scrollX = this.headerConfig.scrollX;\r\n        translateGroupX(this, -scrollX);\r\n    };\r\n    CornerHeader.prototype.clip = function () {\r\n        var _a = this.headerConfig, width = _a.width, height = _a.height, scrollX = _a.scrollX;\r\n        this.setClip({\r\n            type: 'rect',\r\n            attrs: {\r\n                x: scrollX,\r\n                y: 0,\r\n                width: width,\r\n                height: height,\r\n            },\r\n        });\r\n    };\r\n    CornerHeader.prototype.addBgRect = function () {\r\n        var cfg = this.headerConfig;\r\n        var originalWidth = cfg.originalWidth, originalHeight = cfg.originalHeight, position = cfg.position;\r\n        this.addShape('rect', {\r\n            attrs: {\r\n                x: position.x,\r\n                y: position.y,\r\n                width: originalWidth,\r\n                height: originalHeight,\r\n                fill: get(this.headerConfig, 'spreadsheet.theme.cornerCell.cell.backgroundColor'),\r\n            },\r\n        });\r\n    };\r\n    return CornerHeader;\r\n}(BaseHeader));\r\nexport { CornerHeader };\r\n//# sourceMappingURL=corner.js.map","references":["F:/Ismart/S2-master/node_modules/@antv/g-canvas/lib/index.d.ts","F:/Ismart/S2-master/node_modules/@types/lodash/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/header/base.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/bbox/panelBBox.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/bbox/cornerBBox.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/utils.ts","F:/Ismart/S2-master/packages/s2-core/src/cell/corner-cell.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/i18n/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/index.ts","F:/Ismart/S2-master/packages/s2-core/src/data-set/index.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/hierarchy.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/node.ts","F:/Ismart/S2-master/packages/s2-core/src/sheet-type/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/node.ts"],"map":"{\"version\":3,\"file\":\"corner.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/facet/header/corner.ts\"],\"names\":[],\"mappings\":\"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\"}"}
