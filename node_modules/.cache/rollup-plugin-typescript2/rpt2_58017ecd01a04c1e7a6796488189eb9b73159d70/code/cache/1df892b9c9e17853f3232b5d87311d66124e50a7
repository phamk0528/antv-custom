{"code":"import { __read, __spreadArray, __values } from \"tslib\";\r\nimport { last, isEmpty, clone, trim, max, isObject, forEach, isArray, flatten, size, } from 'lodash';\r\nimport { getCsvString } from './export-worker';\r\nimport { CornerNodeType } from \"../../common/interface\";\r\nimport { ID_SEPARATOR, ROOT_BEGINNING_REGEX } from \"../../common/constant\";\r\nimport { safeJsonParse } from \"../text\";\r\nexport var copyToClipboardByExecCommand = function (str) {\r\n    return new Promise(function (resolve, reject) {\r\n        var textarea = document.createElement('textarea');\r\n        textarea.value = str;\r\n        document.body.appendChild(textarea);\r\n        textarea.focus();\r\n        textarea.select();\r\n        var success = document.execCommand('copy');\r\n        document.body.removeChild(textarea);\r\n        if (success) {\r\n            resolve();\r\n        }\r\n        else {\r\n            reject();\r\n        }\r\n    });\r\n};\r\nexport var copyToClipboardByClipboard = function (str) {\r\n    return navigator.clipboard.writeText(str).catch(function () {\r\n        return copyToClipboardByExecCommand(str);\r\n    });\r\n};\r\nexport var copyToClipboard = function (str, sync) {\r\n    if (sync === void 0) { sync = false; }\r\n    if (!navigator.clipboard || sync) {\r\n        return copyToClipboardByExecCommand(str);\r\n    }\r\n    return copyToClipboardByClipboard(str);\r\n};\r\nexport var download = function (str, fileName) {\r\n    try {\r\n        var link = document.createElement('a');\r\n        link.download = \"\".concat(fileName, \".csv\");\r\n        // Avoid errors in Chinese encoding.\r\n        var dataBlob = new Blob([\"\\uFEFF\".concat(str)], {\r\n            type: 'text/csv;charset=utf-8',\r\n        });\r\n        link.href = URL.createObjectURL(dataBlob);\r\n        link.click();\r\n        URL.revokeObjectURL(link.href);\r\n    }\r\n    catch (e) {\r\n        // eslint-disable-next-line no-console\r\n        console.error(e);\r\n    }\r\n};\r\n/*\r\n * Process the multi-measure with multi-lines\r\n * For Grid-analysis-sheet\r\n * use the ' ' to divide different measures in the same line\r\n * use the '$' to divide different lines\r\n */\r\nvar processObjectValueInCol = function (data) {\r\n    var tempCells = (data === null || data === void 0 ? void 0 : data.label) ? [data === null || data === void 0 ? void 0 : data.label] : [];\r\n    var values = data === null || data === void 0 ? void 0 : data.values;\r\n    if (!isEmpty(values)) {\r\n        forEach(values, function (value) {\r\n            tempCells.push(value.join(' '));\r\n        });\r\n    }\r\n    return tempCells.join('$');\r\n};\r\n/*\r\n * Process the multi-measure with single-lines\r\n * For StrategySheet\r\n */\r\nvar processObjectValueInRow = function (data, isFormat) {\r\n    var _a, _b, _c, _d;\r\n    if (!isFormat) {\r\n        return (_b = (_a = data === null || data === void 0 ? void 0 : data.originalValues) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : (_c = data === null || data === void 0 ? void 0 : data.values) === null || _c === void 0 ? void 0 : _c[0];\r\n    }\r\n    return (_d = data === null || data === void 0 ? void 0 : data.values) === null || _d === void 0 ? void 0 : _d[0];\r\n};\r\n/* Process the data in detail mode. */\r\nvar processValueInDetail = function (sheetInstance, split, isFormat) {\r\n    var e_1, _a;\r\n    var _b;\r\n    var data = sheetInstance.dataSet.getDisplayDataSet();\r\n    var columns = ((_b = sheetInstance.dataCfg) === null || _b === void 0 ? void 0 : _b.fields).columns;\r\n    var res = [];\r\n    var _loop_1 = function (index, record) {\r\n        var tempRows = [];\r\n        if (!isFormat) {\r\n            tempRows = columns.map(function (v) { return getCsvString(record[v]); });\r\n        }\r\n        else {\r\n            tempRows = columns.map(function (v) {\r\n                var mainFormatter = sheetInstance.dataSet.getFieldFormatter(v);\r\n                return getCsvString(mainFormatter(record[v], record));\r\n            });\r\n        }\r\n        if (sheetInstance.options.showSeriesNumber) {\r\n            tempRows = [getCsvString(index + 1)].concat(tempRows);\r\n        }\r\n        res.push(tempRows.join(split));\r\n    };\r\n    try {\r\n        for (var _c = __values(data.entries()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n            var _e = __read(_d.value, 2), index = _e[0], record = _e[1];\r\n            _loop_1(index, record);\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return res;\r\n};\r\n/* Process the data when the value position is on the columns.  */\r\nvar processValueInCol = function (viewMeta, sheetInstance, isFormat) {\r\n    if (!viewMeta) {\r\n        // If the meta equals null, replacing it with blank line.\r\n        return '';\r\n    }\r\n    var fieldValue = viewMeta.fieldValue, valueField = viewMeta.valueField, data = viewMeta.data;\r\n    if (isObject(fieldValue)) {\r\n        return processObjectValueInCol(fieldValue);\r\n    }\r\n    if (!isFormat) {\r\n        return \"\".concat(fieldValue);\r\n    }\r\n    var mainFormatter = sheetInstance.dataSet.getFieldFormatter(valueField);\r\n    return mainFormatter(fieldValue, data);\r\n};\r\n/* Process the data when the value position is on the rows. */\r\nvar processValueInRow = function (viewMeta, sheetInstance, isFormat) {\r\n    var tempCells = [];\r\n    if (viewMeta) {\r\n        var fieldValue = viewMeta.fieldValue, valueField = viewMeta.valueField, data = viewMeta.data;\r\n        if (isObject(fieldValue)) {\r\n            tempCells = processObjectValueInRow(fieldValue, isFormat);\r\n            return tempCells;\r\n        }\r\n        // The main measure.\r\n        if (!isFormat) {\r\n            tempCells.push(fieldValue);\r\n        }\r\n        else {\r\n            var mainFormatter = sheetInstance.dataSet.getFieldFormatter(valueField);\r\n            tempCells.push(mainFormatter(fieldValue, data));\r\n        }\r\n    }\r\n    else {\r\n        // If the meta equals null then it will be replaced by '-'.\r\n        tempCells.push(sheetInstance.options.placeholder);\r\n    }\r\n    return tempCells.join('    ');\r\n};\r\n/* Get the label name for the header. */\r\nvar getHeaderLabel = function (val) {\r\n    var label = safeJsonParse(val);\r\n    if (isArray(label)) {\r\n        return label;\r\n    }\r\n    return val;\r\n};\r\n/**\r\n * 当列头label存在数组情况，需要将其他层级补齐空格\r\n * eg [ ['数值', '环比'], '2021'] => [ ['数值', '环比'], ['2021', '']\r\n */\r\nvar processColHeaders = function (headers, arrayLength) {\r\n    var result = headers.map(function (header) {\r\n        return header.map(function (item) {\r\n            return isArray(item) ? item : __spreadArray([item], __read(new Array(arrayLength - 1)), false);\r\n        });\r\n    });\r\n    return result;\r\n};\r\n/**\r\n * Copy data\r\n * @param sheetInstance\r\n * @param isFormat\r\n * @param split\r\n */\r\nexport var copyData = function (sheetInstance, split, isFormat) {\r\n    var e_2, _a, e_3, _b;\r\n    var _c;\r\n    var _d = (_c = sheetInstance === null || sheetInstance === void 0 ? void 0 : sheetInstance.facet) === null || _c === void 0 ? void 0 : _c.layoutResult, rowsHierarchy = _d.rowsHierarchy, rowLeafNodes = _d.rowLeafNodes, colLeafNodes = _d.colLeafNodes, getCellMeta = _d.getCellMeta;\r\n    var maxLevel = rowsHierarchy.maxLevel;\r\n    var valueInCols = sheetInstance.dataCfg.fields.valueInCols;\r\n    // Generate the table header.\r\n    var rowsHeader = rowsHierarchy.sampleNodesForAllLevels.map(function (item) {\r\n        return sheetInstance.dataSet.getFieldName(item.key);\r\n    });\r\n    // get max query property length\r\n    var rowLength = rowLeafNodes.reduce(function (pre, cur) {\r\n        var length = cur.query ? Object.keys(cur.query).length : 0;\r\n        return length > pre ? length : pre;\r\n    }, 0);\r\n    // Generate the table body.\r\n    var detailRows = [];\r\n    var maxRowLength = 0;\r\n    if (!sheetInstance.isPivotMode()) {\r\n        detailRows = processValueInDetail(sheetInstance, split, isFormat);\r\n    }\r\n    else {\r\n        // Filter out the related row head leaf nodes.\r\n        var caredRowLeafNodes = rowLeafNodes.filter(function (row) { return row.height !== 0; });\r\n        try {\r\n            for (var caredRowLeafNodes_1 = __values(caredRowLeafNodes), caredRowLeafNodes_1_1 = caredRowLeafNodes_1.next(); !caredRowLeafNodes_1_1.done; caredRowLeafNodes_1_1 = caredRowLeafNodes_1.next()) {\r\n                var rowNode = caredRowLeafNodes_1_1.value;\r\n                // Removing the space at the beginning of the line of the label.\r\n                rowNode.label = trim(rowNode === null || rowNode === void 0 ? void 0 : rowNode.label);\r\n                var id = rowNode.id.replace(ROOT_BEGINNING_REGEX, '');\r\n                var tempLine = id.split(ID_SEPARATOR);\r\n                // TODO 兼容下钻，需要获取下钻最大层级\r\n                var totalLevel = maxLevel + 1;\r\n                var emptyLength = totalLevel - tempLine.length;\r\n                if (emptyLength > 0) {\r\n                    tempLine.push.apply(tempLine, __spreadArray([], __read(new Array(emptyLength)), false));\r\n                }\r\n                // 指标挂行头且为平铺模式下，获取指标名称\r\n                var lastLabel = sheetInstance.dataSet.getFieldName(last(tempLine));\r\n                tempLine[tempLine.length - 1] = lastLabel;\r\n                try {\r\n                    for (var colLeafNodes_1 = (e_3 = void 0, __values(colLeafNodes)), colLeafNodes_1_1 = colLeafNodes_1.next(); !colLeafNodes_1_1.done; colLeafNodes_1_1 = colLeafNodes_1.next()) {\r\n                        var colNode = colLeafNodes_1_1.value;\r\n                        if (valueInCols) {\r\n                            var viewMeta = getCellMeta(rowNode.rowIndex, colNode.colIndex);\r\n                            tempLine.push(processValueInCol(viewMeta, sheetInstance, isFormat));\r\n                        }\r\n                        else {\r\n                            var viewMeta = getCellMeta(rowNode.rowIndex, colNode.colIndex);\r\n                            var lintItem = processValueInRow(viewMeta, sheetInstance, isFormat);\r\n                            if (isArray(lintItem)) {\r\n                                tempLine = tempLine.concat.apply(tempLine, __spreadArray([], __read(lintItem), false));\r\n                            }\r\n                            else {\r\n                                tempLine.push(lintItem);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (colLeafNodes_1_1 && !colLeafNodes_1_1.done && (_b = colLeafNodes_1.return)) _b.call(colLeafNodes_1);\r\n                    }\r\n                    finally { if (e_3) throw e_3.error; }\r\n                }\r\n                maxRowLength = max([tempLine.length, maxRowLength]);\r\n                var lineString = tempLine\r\n                    .map(function (value) { return getCsvString(value); })\r\n                    .join(split);\r\n                detailRows.push(lineString);\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (caredRowLeafNodes_1_1 && !caredRowLeafNodes_1_1.done && (_a = caredRowLeafNodes_1.return)) _a.call(caredRowLeafNodes_1);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n    }\r\n    // Generate the table header.\r\n    var headers = [];\r\n    if (isEmpty(colLeafNodes) && !sheetInstance.isPivotMode()) {\r\n        // when there is no column in detail mode\r\n        headers = [rowsHeader];\r\n    }\r\n    else {\r\n        // 当列头label为array时用于补全其他层级的label\r\n        var arrayLength_1 = 0;\r\n        // Get the table header of Columns.\r\n        var tempColHeader = clone(colLeafNodes).map(function (colItem) {\r\n            var curColItem = colItem;\r\n            var tempCol = [];\r\n            // Generate the column dimensions.\r\n            while (curColItem.level !== undefined) {\r\n                var label = getHeaderLabel(curColItem.label);\r\n                if (isArray(label)) {\r\n                    arrayLength_1 = max([arrayLength_1, size(label)]);\r\n                }\r\n                tempCol.push(label);\r\n                curColItem = curColItem.parent;\r\n            }\r\n            return tempCol;\r\n        });\r\n        if (arrayLength_1 > 1) {\r\n            tempColHeader = processColHeaders(tempColHeader, arrayLength_1);\r\n        }\r\n        var colLevels = tempColHeader.map(function (colHeader) { return colHeader.length; });\r\n        var colLevel_1 = max(colLevels);\r\n        var colHeader_1 = [];\r\n        var _loop_2 = function (i) {\r\n            // The map of data set: key-name\r\n            var colHeaderItem = tempColHeader\r\n                // total col completion\r\n                .map(function (item) {\r\n                return item.length < colLevel_1\r\n                    ? __spreadArray(__spreadArray([], __read(new Array(colLevel_1 - item.length)), false), __read(item), false) : item;\r\n            })\r\n                .map(function (item) { return item[i]; })\r\n                .map(function (colItem) { return sheetInstance.dataSet.getFieldName(colItem); });\r\n            colHeader_1.push(flatten(colHeaderItem));\r\n        };\r\n        // Convert the number of column dimension levels to the corresponding array.\r\n        for (var i = colLevel_1 - 1; i >= 0; i -= 1) {\r\n            _loop_2(i);\r\n        }\r\n        // Generate the table header.\r\n        headers = colHeader_1.map(function (item, index) {\r\n            var _a;\r\n            var _b;\r\n            if (sheetInstance.isPivotMode()) {\r\n                var _c = sheetInstance.facet.cornerHeader.cfg, columns_1 = _c.columns, rows = _c.rows, data_1 = _c.data;\r\n                var colNodes = data_1.filter(function (_a) {\r\n                    var cornerType = _a.cornerType;\r\n                    return cornerType === CornerNodeType.Col;\r\n                });\r\n                var rowNodes_1 = data_1.filter(function (_a) {\r\n                    var cornerType = _a.cornerType;\r\n                    return cornerType === CornerNodeType.Row;\r\n                });\r\n                if (index < colHeader_1.length - 1) {\r\n                    return __spreadArray(__spreadArray(__spreadArray([], __read(Array(rowLength - 1).fill('')), false), [\r\n                        ((_b = colNodes.find(function (_a) {\r\n                            var field = _a.field;\r\n                            return field === columns_1[index];\r\n                        })) === null || _b === void 0 ? void 0 : _b.label) || ''\r\n                    ], false), __read(item), false);\r\n                }\r\n                if (index < colHeader_1.length) {\r\n                    return __spreadArray(__spreadArray([], __read(rows.map(function (row) { var _a; return ((_a = rowNodes_1.find(function (_a) {\r\n                        var field = _a.field;\r\n                        return field === row;\r\n                    })) === null || _a === void 0 ? void 0 : _a.label) || ''; })), false), __read(item), false);\r\n                }\r\n                return rowsHeader.concat.apply(rowsHeader, __spreadArray([], __read(item), false));\r\n            }\r\n            return index < colHeader_1.length\r\n                ? (_a = Array(rowLength)\r\n                    .fill(''))\r\n                    .concat.apply(_a, __spreadArray([], __read(item), false)) : rowsHeader.concat.apply(rowsHeader, __spreadArray([], __read(item), false));\r\n        });\r\n    }\r\n    var headerRow = headers\r\n        .map(function (header) {\r\n        var emptyLength = maxRowLength - header.length;\r\n        if (emptyLength > 0) {\r\n            header.unshift.apply(header, __spreadArray([], __read(new Array(emptyLength)), false));\r\n        }\r\n        return header.map(function (h) { return getCsvString(h); }).join(split);\r\n    })\r\n        .join('\\r\\n');\r\n    var data = [headerRow].concat(detailRows);\r\n    var result = data.join('\\r\\n');\r\n    return result;\r\n};\r\n//# sourceMappingURL=index.js.map","references":["F:/Ismart/S2-master/node_modules/@types/lodash/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/export/export-worker.ts","F:/Ismart/S2-master/packages/s2-core/src/sheet-type/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/index.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/text.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/utils/export/index.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EACL,IAAI,EACJ,OAAO,EACP,KAAK,EACL,IAAI,EACJ,GAAG,EACH,QAAQ,EACR,OAAO,EACP,OAAO,EACP,OAAO,EACP,IAAI,GACL,MAAM,QAAQ,CAAC;AAChB,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAE/C,OAAO,EAAE,cAAc,EAAY,+BAA2B;AAC9D,OAAO,EAAE,YAAY,EAAE,oBAAoB,EAAE,8BAA0B;AAEvE,OAAO,EAAE,aAAa,EAAE,gBAAqB;AAE7C,MAAM,CAAC,IAAM,4BAA4B,GAAG,UAAC,GAAW;IACtD,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QACjC,IAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACpD,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC;QACrB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACpC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACjB,QAAQ,CAAC,MAAM,EAAE,CAAC;QAElB,IAAM,OAAO,GAAG,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC7C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAEpC,IAAI,OAAO,EAAE;YACX,OAAO,EAAE,CAAC;SACX;aAAM;YACL,MAAM,EAAE,CAAC;SACV;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,0BAA0B,GAAG,UAAC,GAAW;IACpD,OAAO,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;QAC9C,OAAO,4BAA4B,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,eAAe,GAAG,UAAC,GAAW,EAAE,IAAY;IAAZ,qBAAA,EAAA,YAAY;IACvD,IAAI,CAAC,SAAS,CAAC,SAAS,IAAI,IAAI,EAAE;QAChC,OAAO,4BAA4B,CAAC,GAAG,CAAC,CAAC;KAC1C;IACD,OAAO,0BAA0B,CAAC,GAAG,CAAC,CAAC;AACzC,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,QAAQ,GAAG,UAAC,GAAW,EAAE,QAAgB;IACpD,IAAI;QACF,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,UAAG,QAAQ,SAAM,CAAC;QAClC,oCAAoC;QACpC,IAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,CAAC,gBAAS,GAAG,CAAE,CAAC,EAAE;YAC1C,IAAI,EAAE,wBAAwB;SAC/B,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QAC1C,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAChC;IAAC,OAAO,CAAC,EAAE;QACV,sCAAsC;QACtC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAClB;AACH,CAAC,CAAC;AAEF;;;;;GAKG;AACH,IAAM,uBAAuB,GAAG,UAAC,IAAe;IAC9C,IAAM,SAAS,GAAG,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,EAAC,CAAC,CAAC,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACnD,IAAM,MAAM,GAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,CAAC;IAC5B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QACpB,OAAO,CAAC,MAAM,EAAE,UAAC,KAAK;YACpB,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;KACJ;IACD,OAAO,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7B,CAAC,CAAC;AAEF;;;GAGG;AACH,IAAM,uBAAuB,GAAG,UAAC,IAAe,EAAE,QAAiB;;IACjE,IAAI,CAAC,QAAQ,EAAE;QACb,OAAO,MAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,cAAc,0CAAG,CAAC,CAAC,mCAAI,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,0CAAG,CAAC,CAAC,CAAC;KACvD;IACD,OAAO,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,0CAAG,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC;AAEF,sCAAsC;AACtC,IAAM,oBAAoB,GAAG,UAC3B,aAA0B,EAC1B,KAAa,EACb,QAAkB;;;IAElB,IAAM,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;IAC/C,IAAA,OAAO,GAAK,CAAA,MAAA,aAAa,CAAC,OAAO,0CAAE,MAAM,CAAA,QAAlC,CAAmC;IAClD,IAAM,GAAG,GAAG,EAAE,CAAC;4BACH,KAAK,EAAE,MAAM;QACvB,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,EAAE;YACb,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,UAAC,CAAS,IAAK,OAAA,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAvB,CAAuB,CAAC,CAAC;SAChE;aAAM;YACL,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,UAAC,CAAS;gBAC/B,IAAM,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;gBACjE,OAAO,YAAY,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,aAAa,CAAC,OAAO,CAAC,gBAAgB,EAAE;YAC1C,QAAQ,GAAG,CAAC,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACvD;QAED,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;;;QAdjC,KAA8B,IAAA,KAAA,SAAA,IAAI,CAAC,OAAO,EAAE,CAAA,gBAAA;YAAjC,IAAA,KAAA,mBAAe,EAAd,KAAK,QAAA,EAAE,MAAM,QAAA;oBAAb,KAAK,EAAE,MAAM;SAexB;;;;;;;;;IACD,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAEF,kEAAkE;AAClE,IAAM,iBAAiB,GAAG,UACxB,QAAkB,EAClB,aAA0B,EAC1B,QAAkB;IAElB,IAAI,CAAC,QAAQ,EAAE;QACb,yDAAyD;QACzD,OAAO,EAAE,CAAC;KACX;IACO,IAAA,UAAU,GAAuB,QAAQ,WAA/B,EAAE,UAAU,GAAW,QAAQ,WAAnB,EAAE,IAAI,GAAK,QAAQ,KAAb,CAAc;IAElD,IAAI,QAAQ,CAAC,UAAU,CAAC,EAAE;QACxB,OAAO,uBAAuB,CAAC,UAAU,CAAC,CAAC;KAC5C;IAED,IAAI,CAAC,QAAQ,EAAE;QACb,OAAO,UAAG,UAAU,CAAE,CAAC;KACxB;IACD,IAAM,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;IAC1E,OAAO,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AACzC,CAAC,CAAC;AAEF,8DAA8D;AAC9D,IAAM,iBAAiB,GAAG,UACxB,QAAkB,EAClB,aAA0B,EAC1B,QAAkB;IAElB,IAAI,SAAS,GAAG,EAAE,CAAC;IAEnB,IAAI,QAAQ,EAAE;QACJ,IAAA,UAAU,GAAuB,QAAQ,WAA/B,EAAE,UAAU,GAAW,QAAQ,WAAnB,EAAE,IAAI,GAAK,QAAQ,KAAb,CAAc;QAClD,IAAI,QAAQ,CAAC,UAAU,CAAC,EAAE;YACxB,SAAS,GAAG,uBAAuB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YAC1D,OAAO,SAAS,CAAC;SAClB;QACD,oBAAoB;QACpB,IAAI,CAAC,QAAQ,EAAE;YACb,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC5B;aAAM;YACL,IAAM,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;YAC1E,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;SACjD;KACF;SAAM;QACL,2DAA2D;QAC3D,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;KACnD;IACD,OAAO,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAChC,CAAC,CAAC;AAEF,wCAAwC;AACxC,IAAM,cAAc,GAAG,UAAC,GAAW;IACjC,IAAM,KAAK,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;IACjC,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;QAClB,OAAO,KAAK,CAAC;KACd;IACD,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAEF;;;GAGG;AACH,IAAM,iBAAiB,GAAG,UAAC,OAAgB,EAAE,WAAmB;IAC9D,IAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM;QAChC,OAAA,MAAM,CAAC,GAAG,CAAC,UAAC,IAAI;YACd,OAAA,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,gBAAE,IAAI,UAAK,IAAI,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,SAAC;QAA5D,CAA4D,CAC7D;IAFD,CAEC,CACF,CAAC;IACF,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF;;;;;GAKG;AACH,MAAM,CAAC,IAAM,QAAQ,GAAG,UACtB,aAA0B,EAC1B,KAAa,EACb,QAAkB;;;IAEZ,IAAA,KACJ,MAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,KAAK,0CAAE,YAAY,EAD5B,aAAa,mBAAA,EAAE,YAAY,kBAAA,EAAE,YAAY,kBAAA,EAAE,WAAW,iBAC1B,CAAC;IAC7B,IAAA,QAAQ,GAAK,aAAa,SAAlB,CAAmB;IAC3B,IAAA,WAAW,GAAK,aAAa,CAAC,OAAO,CAAC,MAAM,YAAjC,CAAkC;IACrD,6BAA6B;IAC7B,IAAM,UAAU,GAAG,aAAa,CAAC,uBAAuB,CAAC,GAAG,CAAC,UAAC,IAAI;QAChE,OAAA,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC;IAA5C,CAA4C,CAC7C,CAAC;IAEF,gCAAgC;IAChC,IAAM,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,GAAG;QAC7C,IAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,OAAO,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;IACrC,CAAC,EAAE,CAAC,CAAC,CAAC;IAEN,2BAA2B;IAC3B,IAAI,UAAU,GAAG,EAAE,CAAC;IACpB,IAAI,YAAY,GAAG,CAAC,CAAC;IAErB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,EAAE;QAChC,UAAU,GAAG,oBAAoB,CAAC,aAAa,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;KACnE;SAAM;QACL,8CAA8C;QAC9C,IAAM,iBAAiB,GAAG,YAAY,CAAC,MAAM,CAAC,UAAC,GAAG,IAAK,OAAA,GAAG,CAAC,MAAM,KAAK,CAAC,EAAhB,CAAgB,CAAC,CAAC;;YACzE,KAAsB,IAAA,sBAAA,SAAA,iBAAiB,CAAA,oDAAA,mFAAE;gBAApC,IAAM,OAAO,8BAAA;gBAChB,gEAAgE;gBAChE,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,CAAC,CAAC;gBACrC,IAAM,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAC;gBACxD,IAAI,QAAQ,GAAG,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;gBACtC,uBAAuB;gBACvB,IAAM,UAAU,GAAG,QAAQ,GAAG,CAAC,CAAC;gBAChC,IAAM,WAAW,GAAG,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC;gBACjD,IAAI,WAAW,GAAG,CAAC,EAAE;oBACnB,QAAQ,CAAC,IAAI,OAAb,QAAQ,2BAAS,IAAI,KAAK,CAAC,WAAW,CAAC,WAAE;iBAC1C;gBAED,sBAAsB;gBACtB,IAAM,SAAS,GAAG,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACrE,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;;oBAE1C,KAAsB,IAAA,gCAAA,SAAA,YAAY,CAAA,CAAA,0CAAA,oEAAE;wBAA/B,IAAM,OAAO,yBAAA;wBAChB,IAAI,WAAW,EAAE;4BACf,IAAM,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;4BACjE,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC,CAAC;yBACrE;6BAAM;4BACL,IAAM,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;4BACjE,IAAM,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;4BACtE,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE;gCACrB,QAAQ,GAAG,QAAQ,CAAC,MAAM,OAAf,QAAQ,2BAAW,QAAQ,UAAC,CAAC;6BACzC;iCAAM;gCACL,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;6BACzB;yBACF;qBACF;;;;;;;;;gBACD,YAAY,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC;gBACpD,IAAM,UAAU,GAAG,QAAQ;qBACxB,GAAG,CAAC,UAAC,KAAK,IAAK,OAAA,YAAY,CAAC,KAAK,CAAC,EAAnB,CAAmB,CAAC;qBACnC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAEf,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC7B;;;;;;;;;KACF;IAED,6BAA6B;IAC7B,IAAI,OAAO,GAAe,EAAE,CAAC;IAE7B,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,EAAE;QACzD,yCAAyC;QACzC,OAAO,GAAG,CAAC,UAAU,CAAC,CAAC;KACxB;SAAM;QACL,gCAAgC;QAChC,IAAI,aAAW,GAAG,CAAC,CAAC;QACpB,mCAAmC;QACnC,IAAI,aAAa,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,UAAC,OAAO;YAClD,IAAI,UAAU,GAAG,OAAO,CAAC;YAEzB,IAAM,OAAO,GAAG,EAAE,CAAC;YAEnB,kCAAkC;YAClC,OAAO,UAAU,CAAC,KAAK,KAAK,SAAS,EAAE;gBACrC,IAAM,KAAK,GAAG,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC/C,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;oBAClB,aAAW,GAAG,GAAG,CAAC,CAAC,aAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBAC/C;gBACD,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACpB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC;aAChC;YACD,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,IAAI,aAAW,GAAG,CAAC,EAAE;YACnB,aAAa,GAAG,iBAAiB,CAAC,aAAa,EAAE,aAAW,CAAC,CAAC;SAC/D;QAED,IAAM,SAAS,GAAG,aAAa,CAAC,GAAG,CAAC,UAAC,SAAS,IAAK,OAAA,SAAS,CAAC,MAAM,EAAhB,CAAgB,CAAC,CAAC;QACrE,IAAM,UAAQ,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;QAEhC,IAAM,WAAS,GAAe,EAAE,CAAC;gCAExB,CAAC;YACR,gCAAgC;YAChC,IAAM,aAAa,GAAG,aAAa;gBACjC,uBAAuB;iBACtB,GAAG,CAAC,UAAC,IAAI;gBACR,OAAA,IAAI,CAAC,MAAM,GAAG,UAAQ;oBACpB,CAAC,wCAAK,IAAI,KAAK,CAAC,UAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAK,IAAI,UAChD,CAAC,CAAC,IAAI;YAFR,CAEQ,CACT;iBACA,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,CAAC,CAAC,EAAP,CAAO,CAAC;iBACtB,GAAG,CAAC,UAAC,OAAO,IAAK,OAAA,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,EAA3C,CAA2C,CAAC,CAAC;YACjE,WAAS,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;;QAZzC,4EAA4E;QAC5E,KAAK,IAAI,CAAC,GAAG,UAAQ,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;oBAAhC,CAAC;SAYT;QAED,6BAA6B;QAC7B,OAAO,GAAG,WAAS,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK;;;YAClC,IAAI,aAAa,CAAC,WAAW,EAAE,EAAE;gBACzB,IAAA,KAA0B,aAAa,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,EAA5D,SAAO,aAAA,EAAE,IAAI,UAAA,EAAE,MAAI,UAAyC,CAAC;gBACrE,IAAM,QAAQ,GAAG,MAAI,CAAC,MAAM,CAC1B,UAAC,EAAc;wBAAZ,UAAU,gBAAA;oBAAO,OAAA,UAAU,KAAK,cAAc,CAAC,GAAG;gBAAjC,CAAiC,CACtD,CAAC;gBACF,IAAM,UAAQ,GAAG,MAAI,CAAC,MAAM,CAC1B,UAAC,EAAc;wBAAZ,UAAU,gBAAA;oBAAO,OAAA,UAAU,KAAK,cAAc,CAAC,GAAG;gBAAjC,CAAiC,CACtD,CAAC;gBAEF,IAAI,KAAK,GAAG,WAAS,CAAC,MAAM,GAAG,CAAC,EAAE;oBAChC,4DACK,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;wBAChC,CAAA,MAAA,QAAQ,CAAC,IAAI,CAAC,UAAC,EAAS;gCAAP,KAAK,WAAA;4BAAO,OAAA,KAAK,KAAK,SAAO,CAAC,KAAK,CAAC;wBAAxB,CAAwB,CAAC,0CAAE,KAAK,KAAI,EAAE;sCAChE,IAAI,UACP;iBACH;gBACD,IAAI,KAAK,GAAG,WAAS,CAAC,MAAM,EAAE;oBAC5B,8CACK,IAAI,CAAC,GAAG,CACT,UAAC,GAAG,YAAK,OAAA,CAAA,MAAA,UAAQ,CAAC,IAAI,CAAC,UAAC,EAAS;4BAAP,KAAK,WAAA;wBAAO,OAAA,KAAK,KAAK,GAAG;oBAAb,CAAa,CAAC,0CAAE,KAAK,KAAI,EAAE,CAAA,EAAA,CAClE,kBACE,IAAI,UACP;iBACH;gBAED,OAAO,UAAU,CAAC,MAAM,OAAjB,UAAU,2BAAW,IAAI,WAAE;aACnC;YAED,OAAO,KAAK,GAAG,WAAS,CAAC,MAAM;gBAC7B,CAAC,CAAC,CAAA,KAAA,KAAK,CAAC,SAAS,CAAC;qBACb,IAAI,CAAC,EAAE,CAAC,CAAA;qBACR,MAAM,oCAAI,IAAI,WACnB,CAAC,CAAC,UAAU,CAAC,MAAM,OAAjB,UAAU,2BAAW,IAAI,UAAC,CAAC;QACjC,CAAC,CAAC,CAAC;KACJ;IAED,IAAM,SAAS,GAAG,OAAO;SACtB,GAAG,CAAC,UAAC,MAAM;QACV,IAAM,WAAW,GAAG,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC;QACjD,IAAI,WAAW,GAAG,CAAC,EAAE;YACnB,MAAM,CAAC,OAAO,OAAd,MAAM,2BAAY,IAAI,KAAK,CAAC,WAAW,CAAC,WAAE;SAC3C;QACD,OAAO,MAAM,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,YAAY,CAAC,CAAC,CAAC,EAAf,CAAe,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxD,CAAC,CAAC;SACD,IAAI,CAAC,MAAM,CAAC,CAAC;IAEhB,IAAM,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC5C,IAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACjC,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC\"}"}
