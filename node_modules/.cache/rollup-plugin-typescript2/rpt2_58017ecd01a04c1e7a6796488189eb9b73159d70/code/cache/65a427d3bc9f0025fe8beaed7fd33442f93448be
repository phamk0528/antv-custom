{"code":"import { __assign, __extends, __values } from \"tslib\";\r\nimport { find, forEach, forIn, get, isArray, isEmpty, isObject, last, max, maxBy, merge, reduce, size, } from 'lodash';\r\nimport { BaseFacet } from \"./base-facet\";\r\nimport { getDataCellId } from \"../utils/cell/data-cell\";\r\nimport { getIndexRangeWithOffsets } from \"../utils/facet\";\r\nimport { CellTypes } from \"../common/constant/interaction\";\r\nimport { shouldShowActionIcons } from \"../utils/cell/header-cell\";\r\nimport { EXTRA_FIELD, LayoutWidthTypes, VALUE_FIELD } from \"../common/constant\";\r\nimport { DebuggerUtil } from \"../common/debug\";\r\nimport { buildHeaderHierarchy } from \"./layout/build-header-hierarchy\";\r\nimport { layoutCoordinate, layoutDataPosition, } from \"./layout/layout-hooks\";\r\nimport { Node } from \"./layout/node\";\r\nimport { handleDataItem } from \"../utils/cell/data-cell\";\r\nimport { measureTextWidth, measureTextWidthRoughly, getCellWidth, safeJsonParse, } from \"../utils/text\";\r\nimport { getSubTotalNodeWidthOrHeightByLevel } from \"../utils/facet\";\r\nvar PivotFacet = /** @class */ (function (_super) {\r\n    __extends(PivotFacet, _super);\r\n    function PivotFacet() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(PivotFacet.prototype, \"rowCellTheme\", {\r\n        get: function () {\r\n            return this.spreadsheet.theme.rowCell.cell;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    PivotFacet.prototype.doLayout = function () {\r\n        // 1、layout all nodes in rowHeader and colHeader\r\n        var _a = buildHeaderHierarchy({\r\n            isRowHeader: true,\r\n            facetCfg: this.cfg,\r\n        }), rowLeafNodes = _a.leafNodes, rowsHierarchy = _a.hierarchy;\r\n        var _b = buildHeaderHierarchy({\r\n            isRowHeader: false,\r\n            facetCfg: this.cfg,\r\n        }), colLeafNodes = _b.leafNodes, colsHierarchy = _b.hierarchy;\r\n        // 2、calculate all related nodes coordinate\r\n        this.calculateNodesCoordinate(rowLeafNodes, rowsHierarchy, colLeafNodes, colsHierarchy);\r\n        var _c = this.cfg, dataSet = _c.dataSet, spreadsheet = _c.spreadsheet;\r\n        var getCellMeta = function (rowIndex, colIndex) {\r\n            var _a;\r\n            var _b, _c;\r\n            var i = rowIndex || 0;\r\n            var j = colIndex || 0;\r\n            var row = rowLeafNodes[i];\r\n            var col = colLeafNodes[j];\r\n            if (!row || !col) {\r\n                return null;\r\n            }\r\n            var rowQuery = row.query;\r\n            var colQuery = col.query;\r\n            var isTotals = row.isTotals ||\r\n                row.isTotalMeasure ||\r\n                col.isTotals ||\r\n                col.isTotalMeasure;\r\n            var hierarchyType = spreadsheet.options.hierarchyType;\r\n            var hideMeasure = (_b = get(spreadsheet, 'facet.cfg.colCfg.hideMeasureColumn')) !== null && _b !== void 0 ? _b : false;\r\n            // 如果在非自定义目录情况下hide measure query中是没有度量信息的，所以需要自动补上\r\n            // 存在一个场景的冲突，如果是多个度量，定位数据数据是无法知道哪一列代表什么\r\n            // 因此默认只会去 第一个度量拼接query\r\n            var measureInfo = hideMeasure && hierarchyType !== 'customTree'\r\n                ? (_a = {},\r\n                    _a[EXTRA_FIELD] = (_c = dataSet.fields.values) === null || _c === void 0 ? void 0 : _c[0],\r\n                    _a) : {};\r\n            var dataQuery = merge({}, rowQuery, colQuery, measureInfo);\r\n            var data = dataSet.getCellData({\r\n                query: dataQuery,\r\n                rowNode: row,\r\n                isTotals: isTotals,\r\n            });\r\n            var valueField;\r\n            var fieldValue = null;\r\n            if (!isEmpty(data)) {\r\n                valueField = get(data, [EXTRA_FIELD], '');\r\n                fieldValue = get(data, [VALUE_FIELD], null);\r\n                if (isTotals) {\r\n                    valueField = get(dataQuery, [EXTRA_FIELD], '');\r\n                    fieldValue = get(data, valueField, null);\r\n                }\r\n            }\r\n            else {\r\n                valueField = get(dataQuery, [EXTRA_FIELD], '');\r\n            }\r\n            return {\r\n                spreadsheet: spreadsheet,\r\n                x: col.x,\r\n                y: row.y,\r\n                width: col.width,\r\n                height: row.height,\r\n                data: data,\r\n                rowIndex: i,\r\n                colIndex: j,\r\n                isTotals: isTotals,\r\n                valueField: valueField,\r\n                fieldValue: fieldValue,\r\n                rowQuery: rowQuery,\r\n                colQuery: colQuery,\r\n                rowId: row.id,\r\n                colId: col.id,\r\n                id: getDataCellId(row.id, col.id),\r\n            };\r\n        };\r\n        var layoutResult = {\r\n            colNodes: colsHierarchy.getNodes(),\r\n            colsHierarchy: colsHierarchy,\r\n            rowNodes: rowsHierarchy.getNodes(),\r\n            rowsHierarchy: rowsHierarchy,\r\n            rowLeafNodes: rowLeafNodes,\r\n            colLeafNodes: colLeafNodes,\r\n            getCellMeta: getCellMeta,\r\n            spreadsheet: spreadsheet,\r\n        };\r\n        return layoutDataPosition(this.cfg, layoutResult);\r\n    };\r\n    PivotFacet.prototype.calculateNodesCoordinate = function (rowLeafNodes, rowsHierarchy, colLeafNodes, colsHierarchy) {\r\n        this.calculateRowNodesCoordinate(rowLeafNodes, rowsHierarchy, colLeafNodes);\r\n        this.calculateColNodesCoordinate(colLeafNodes, colsHierarchy, rowsHierarchy.width);\r\n    };\r\n    /**\r\n     * Calculate all col header related coordinate\r\n     * height, width, x, y\r\n     * colsHierarchy's height\r\n     * colsHierarchy's width\r\n     * @param colLeafNodes\r\n     * @param colsHierarchy\r\n     */\r\n    PivotFacet.prototype.calculateColNodesCoordinate = function (colLeafNodes, colsHierarchy, rowHeaderWidth) {\r\n        var e_1, _a;\r\n        var _b, _c;\r\n        var spreadsheet = this.cfg.spreadsheet;\r\n        var preLeafNode = Node.blankNode();\r\n        var allNodes = colsHierarchy.getNodes();\r\n        try {\r\n            for (var _d = __values(colsHierarchy.sampleNodesForAllLevels), _e = _d.next(); !_e.done; _e = _d.next()) {\r\n                var levelSample = _e.value;\r\n                levelSample.height = this.getColNodeHeight(levelSample);\r\n                colsHierarchy.height += levelSample.height;\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        var currentCollIndex = 0;\r\n        var _loop_1 = function (i) {\r\n            var currentNode = allNodes[i];\r\n            if (currentNode.isLeaf) {\r\n                currentNode.colIndex = currentCollIndex;\r\n                currentCollIndex += 1;\r\n                currentNode.x = preLeafNode.x + preLeafNode.width;\r\n                currentNode.width = this_1.calculateColLeafNodesWidth(currentNode, colLeafNodes, rowHeaderWidth);\r\n                colsHierarchy.width += currentNode.width;\r\n                preLeafNode = currentNode;\r\n            }\r\n            if (currentNode.level === 0) {\r\n                currentNode.y = 0;\r\n            }\r\n            else {\r\n                var preLevelSample = colsHierarchy.sampleNodesForAllLevels.find(function (n) { return n.level === currentNode.level - 1; });\r\n                currentNode.y = (_b = (preLevelSample === null || preLevelSample === void 0 ? void 0 : preLevelSample.y) + (preLevelSample === null || preLevelSample === void 0 ? void 0 : preLevelSample.height)) !== null && _b !== void 0 ? _b : 0;\r\n            }\r\n            currentNode.height = this_1.getColNodeHeight(currentNode);\r\n            layoutCoordinate(this_1.cfg, null, currentNode);\r\n        };\r\n        var this_1 = this;\r\n        for (var i = 0; i < allNodes.length; i++) {\r\n            _loop_1(i);\r\n        }\r\n        this.autoCalculateColNodeWidthAndX(colLeafNodes);\r\n        if (!isEmpty((_c = spreadsheet.options.totals) === null || _c === void 0 ? void 0 : _c.col)) {\r\n            this.adustTotalNodesCoordinate(colsHierarchy);\r\n            this.adjustSubTotalNodesCoordinate(colsHierarchy);\r\n        }\r\n    };\r\n    /**\r\n     * Auto Auto Auto column no-leaf node's width and x coordinate\r\n     * @param colLeafNodes\r\n     */\r\n    PivotFacet.prototype.autoCalculateColNodeWidthAndX = function (colLeafNodes) {\r\n        var prevColParent = null;\r\n        var leafNodes = colLeafNodes.slice(0);\r\n        while (leafNodes.length) {\r\n            var node = leafNodes.shift();\r\n            var parent_1 = node.parent;\r\n            if (prevColParent !== parent_1 && parent_1) {\r\n                leafNodes.push(parent_1);\r\n                // parent's x = first child's x\r\n                parent_1.x = parent_1.children[0].x;\r\n                // parent's width = all children's width\r\n                parent_1.width = parent_1.children\r\n                    .map(function (value) { return value.width; })\r\n                    .reduce(function (sum, current) { return sum + current; }, 0);\r\n                prevColParent = parent_1;\r\n            }\r\n        }\r\n    };\r\n    PivotFacet.prototype.calculateColLeafNodesWidth = function (col, colLeafNodes, rowHeaderWidth) {\r\n        var _a, _b, _c, _d;\r\n        var _e = this.cfg, colCfg = _e.colCfg, dataSet = _e.dataSet, filterDisplayDataItem = _e.filterDisplayDataItem;\r\n        // current.width =  get(colCfg, `widthByFieldValue.${current.value}`, current.width);\r\n        var userDragWidth = get(get(colCfg, 'widthByFieldValue'), \"\".concat(col.value), col.width);\r\n        if (userDragWidth) {\r\n            return userDragWidth;\r\n        }\r\n        if (this.spreadsheet.getLayoutWidthType() === LayoutWidthTypes.Compact) {\r\n            var _f = this.spreadsheet.theme.colCell, colCellTextStyle = _f.bolderText, colCellStyle = _f.cell, colIconStyle = _f.icon;\r\n            // leaf node rough width\r\n            var cellFormatter = this.spreadsheet.dataSet.getFieldFormatter(col.field);\r\n            var leafNodeLabel = (_a = cellFormatter === null || cellFormatter === void 0 ? void 0 : cellFormatter(col.value)) !== null && _a !== void 0 ? _a : col.label;\r\n            var iconWidth = this.getExpectedCellIconWidth(CellTypes.COL_CELL, this.spreadsheet.isValueInCols() &&\r\n                this.spreadsheet.options.showDefaultHeaderActionIcon, colIconStyle);\r\n            var leafNodeRoughWidth = measureTextWidthRoughly(leafNodeLabel) + iconWidth;\r\n            // will deal with real width calculation in multiple values render pr\r\n            var multiData = dataSet.getMultiData(col.query, col.isTotals || col.isTotalMeasure);\r\n            var allDataLabels = (_b = multiData\r\n                .map(function (data) { return \"\".concat(handleDataItem(data, filterDisplayDataItem)); })) === null || _b === void 0 ? void 0 : _b.slice(0, 50);\r\n            var maxDataLabel = maxBy(allDataLabels, function (label) {\r\n                return measureTextWidthRoughly(label);\r\n            });\r\n            // compare result\r\n            var isLeafNodeWidthLonger = leafNodeRoughWidth > measureTextWidthRoughly(maxDataLabel);\r\n            var maxLabel = isLeafNodeWidthLonger ? leafNodeLabel : maxDataLabel;\r\n            var appendedWidth = isLeafNodeWidthLonger ? iconWidth : 0;\r\n            DebuggerUtil.getInstance().logger('Max Label In Col:', col.field, maxLabel);\r\n            return (measureTextWidth(maxLabel, colCellTextStyle) +\r\n                ((_c = colCellStyle.padding) === null || _c === void 0 ? void 0 : _c.left) +\r\n                ((_d = colCellStyle.padding) === null || _d === void 0 ? void 0 : _d.right) +\r\n                appendedWidth);\r\n        }\r\n        // adaptive\r\n        if (this.spreadsheet.isHierarchyTreeType()) {\r\n            return this.getAdaptTreeColWidth(col, colLeafNodes);\r\n        }\r\n        return this.getAdaptGridColWidth(colLeafNodes, rowHeaderWidth);\r\n    };\r\n    PivotFacet.prototype.getColNodeHeight = function (col) {\r\n        var colCfg = this.cfg.colCfg;\r\n        var userDraggedHeight = get(colCfg, \"heightByField.\".concat(col.key));\r\n        return userDraggedHeight || colCfg.height;\r\n    };\r\n    /**\r\n     * 获得图标区域预估宽度\r\n     * 不考虑用户自定义的 displayCondition 条件\r\n     * @param iconStyle 图标样式\r\n     * @returns 宽度\r\n     */\r\n    PivotFacet.prototype.getExpectedCellIconWidth = function (cellType, useDefaultIcon, iconStyle) {\r\n        var _a;\r\n        // count icons\r\n        var iconCount = 0;\r\n        if (useDefaultIcon) {\r\n            iconCount = 1;\r\n        }\r\n        else {\r\n            var customIcons = find(this.spreadsheet.options.headerActionIcons, function (headerActionIcon) {\r\n                return shouldShowActionIcons(__assign(__assign({}, headerActionIcon), { \r\n                    // ignore condition func when layout calc\r\n                    displayCondition: function () { return true; } }), null, cellType);\r\n            });\r\n            iconCount = (_a = customIcons === null || customIcons === void 0 ? void 0 : customIcons.iconNames.length) !== null && _a !== void 0 ? _a : 0;\r\n        }\r\n        // calc width\r\n        return iconCount\r\n            ? iconCount * (iconStyle.size + iconStyle.margin.left) +\r\n                iconStyle.margin.right\r\n            : 0;\r\n    };\r\n    /**\r\n     * Calculate all row header related coordinate\r\n     * height, width, x, y\r\n     * rowHierarchy's height\r\n     * rowHierarchy's width\r\n     * @param rowLeafNodes\r\n     * @param rowsHierarchy\r\n     */\r\n    PivotFacet.prototype.calculateRowNodesCoordinate = function (rowLeafNodes, rowsHierarchy, colLeafNodes) {\r\n        var e_2, _a;\r\n        var _b, _c, _d, _e, _f, _g;\r\n        var _h = this.cfg, cellCfg = _h.cellCfg, spreadsheet = _h.spreadsheet;\r\n        var isTree = spreadsheet.isHierarchyTreeType();\r\n        var heightByField = get(spreadsheet, 'options.style.rowCfg.heightByField', {});\r\n        var sampleNodeByLevel = new Map();\r\n        // 1、calculate first node's width in every level\r\n        if (isTree) {\r\n            rowsHierarchy.width = this.getTreeRowHeaderWidth();\r\n        }\r\n        else {\r\n            try {\r\n                for (var _j = __values(rowsHierarchy.sampleNodesForAllLevels), _k = _j.next(); !_k.done; _k = _j.next()) {\r\n                    var levelSample = _k.value;\r\n                    levelSample.width = this.calculateGridRowNodesWidth(levelSample, colLeafNodes);\r\n                    rowsHierarchy.width += levelSample.width;\r\n                    sampleNodeByLevel.set(levelSample.level, levelSample);\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_k && !_k.done && (_a = _j.return)) _a.call(_j);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n        }\r\n        // 2、calculate node's height & y（leaf nodes）, x-coordinate & width(all nodes), height & y (not-leaf),\r\n        var preLeafNode = Node.blankNode();\r\n        var allNodes = rowsHierarchy.getNodes();\r\n        for (var i = 0; i < allNodes.length; i++) {\r\n            var currentNode = allNodes[i];\r\n            // in tree type, all nodes treat as leaf\r\n            var isLeaf = isTree || (!isTree && currentNode.isLeaf);\r\n            if (isLeaf) {\r\n                // leaf node\r\n                (_b = currentNode.rowIndex) !== null && _b !== void 0 ? _b : (currentNode.rowIndex = i);\r\n                (_c = currentNode.colIndex) !== null && _c !== void 0 ? _c : (currentNode.colIndex = i);\r\n                currentNode.y = preLeafNode.y + preLeafNode.height;\r\n                currentNode.height =\r\n                    ((_d = heightByField[currentNode.id]) !== null && _d !== void 0 ? _d : cellCfg.height) +\r\n                        ((_e = this.rowCellTheme.padding) === null || _e === void 0 ? void 0 : _e.top) +\r\n                        ((_f = this.rowCellTheme.padding) === null || _f === void 0 ? void 0 : _f.bottom);\r\n                preLeafNode = currentNode;\r\n                // mark row hierarchy's height\r\n                rowsHierarchy.height += currentNode.height;\r\n            }\r\n            // calc node.x\r\n            if (isTree || currentNode.level === 0) {\r\n                currentNode.x = 0;\r\n            }\r\n            else {\r\n                var preLevelSample = sampleNodeByLevel.get(currentNode.level - 1);\r\n                currentNode.x = (preLevelSample === null || preLevelSample === void 0 ? void 0 : preLevelSample.x) + (preLevelSample === null || preLevelSample === void 0 ? void 0 : preLevelSample.width);\r\n            }\r\n            // calc node.width\r\n            if (isTree) {\r\n                currentNode.width = this.getTreeRowHeaderWidth();\r\n            }\r\n            else {\r\n                // same level -> same width\r\n                var levelSampleNode = sampleNodeByLevel.get(currentNode.level);\r\n                currentNode.width = levelSampleNode === null || levelSampleNode === void 0 ? void 0 : levelSampleNode.width;\r\n            }\r\n            layoutCoordinate(this.cfg, currentNode, null);\r\n        }\r\n        if (!isTree) {\r\n            this.autoCalculateRowNodeHeightAndY(rowLeafNodes);\r\n            if (!isEmpty((_g = spreadsheet.options.totals) === null || _g === void 0 ? void 0 : _g.row)) {\r\n                this.adustTotalNodesCoordinate(rowsHierarchy, true);\r\n                this.adjustSubTotalNodesCoordinate(rowsHierarchy, true);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @description Auto calculate row no-leaf node's height and y coordinate\r\n     * @param rowLeafNodes\r\n     */\r\n    PivotFacet.prototype.autoCalculateRowNodeHeightAndY = function (rowLeafNodes) {\r\n        // 3、in grid type, all no-leaf node's height, y are auto calculated\r\n        var prevRowParent = null;\r\n        var leafNodes = rowLeafNodes.slice(0);\r\n        while (leafNodes.length) {\r\n            var node = leafNodes.shift();\r\n            var parent_2 = node.parent;\r\n            if (prevRowParent !== parent_2 && parent_2) {\r\n                leafNodes.push(parent_2);\r\n                // parent's y = first child's y\r\n                parent_2.y = parent_2.children[0].y;\r\n                // parent's height = all children's height\r\n                parent_2.height = parent_2.children\r\n                    .map(function (value) { return value.height; })\r\n                    .reduce(function (sum, current) { return sum + current; }, 0);\r\n                prevRowParent = parent_2;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @description adjust the coordinate of total nodes and their children\r\n     * @param hierarchy Hierarchy\r\n     * @param isRowHeader boolean\r\n     */\r\n    PivotFacet.prototype.adustTotalNodesCoordinate = function (hierarchy, isRowHeader) {\r\n        var _a, _b, _c;\r\n        var moreThanOneValue = this.cfg.dataSet.moreThanOneValue();\r\n        var maxLevel = hierarchy.maxLevel;\r\n        var grandTotalNode = find(hierarchy.getNodes(0), function (node) { return node.isGrandTotals; });\r\n        if (!(grandTotalNode instanceof Node))\r\n            return;\r\n        var grandTotalChildren = grandTotalNode.children;\r\n        // 总计节点层级 (有且有两级)\r\n        if (isRowHeader) {\r\n            // 填充行总单元格宽度\r\n            grandTotalNode.width = hierarchy.width;\r\n            // 调整其叶子结点位置\r\n            forEach(grandTotalChildren, function (node) {\r\n                node.x = hierarchy.getNodes(maxLevel)[0].x;\r\n            });\r\n        }\r\n        else if (maxLevel > 1 || (maxLevel <= 1 && !moreThanOneValue)) {\r\n            // 只有当列头总层级大于1级或列头为1级单指标时总计格高度才需要填充\r\n            // 填充列总计单元格高度\r\n            var grandTotalChildrenHeight = (_b = (_a = grandTotalChildren === null || grandTotalChildren === void 0 ? void 0 : grandTotalChildren[0]) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0;\r\n            grandTotalNode.height = hierarchy.height - grandTotalChildrenHeight;\r\n            // 调整其叶子结点位置, 以非小计行为准\r\n            var positionY_1 = (_c = find(hierarchy.getNodes(maxLevel), function (node) { return !node.isTotalMeasure; })) === null || _c === void 0 ? void 0 : _c.y;\r\n            forEach(grandTotalChildren, function (node) {\r\n                node.y = positionY_1;\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @description adust the coordinate of subTotal nodes when there is just one value\r\n     * @param hierarchy Hierarchy\r\n     * @param isRowHeader boolean\r\n     */\r\n    PivotFacet.prototype.adjustSubTotalNodesCoordinate = function (hierarchy, isRowHeader) {\r\n        var subTotalNodes = hierarchy\r\n            .getNodes()\r\n            .filter(function (node) { return node.isSubTotals; });\r\n        if (isEmpty(subTotalNodes))\r\n            return;\r\n        var maxLevel = hierarchy.maxLevel;\r\n        forEach(subTotalNodes, function (subTotalNode) {\r\n            var _a, _b, _c;\r\n            var subTotalNodeChildren = subTotalNode.children;\r\n            if (isRowHeader) {\r\n                // 填充行总单元格宽度\r\n                subTotalNode.width = getSubTotalNodeWidthOrHeightByLevel(hierarchy.sampleNodesForAllLevels, subTotalNode.level, 'width');\r\n                // 调整其叶子结点位置\r\n                forEach(subTotalNodeChildren, function (node) {\r\n                    node.x = hierarchy.getNodes(maxLevel)[0].x;\r\n                });\r\n            }\r\n            else {\r\n                // 填充列总单元格高度\r\n                var totalHeight = getSubTotalNodeWidthOrHeightByLevel(hierarchy.sampleNodesForAllLevels, subTotalNode.level, 'height');\r\n                var subTotalNodeChildrenHeight = (_b = (_a = subTotalNodeChildren === null || subTotalNodeChildren === void 0 ? void 0 : subTotalNodeChildren[0]) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0;\r\n                subTotalNode.height = totalHeight - subTotalNodeChildrenHeight;\r\n                // 调整其叶子结点位置,以非小计单元格为准\r\n                forEach(subTotalNodeChildren, function (node) {\r\n                    node.y = hierarchy.getNodes(maxLevel)[0].y;\r\n                });\r\n                // 调整其叶子结点位置, 以非小计行为准\r\n                var positionY_2 = (_c = find(hierarchy.getNodes(maxLevel), function (node) { return !node.isTotalMeasure; })) === null || _c === void 0 ? void 0 : _c.y;\r\n                forEach(subTotalNodeChildren, function (node) {\r\n                    node.y = positionY_2;\r\n                });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * 计算 grid 模式下 node 宽度\r\n     * @param node\r\n     * @returns\r\n     */\r\n    PivotFacet.prototype.calculateGridRowNodesWidth = function (node, colLeafNodes) {\r\n        var _a = this.cfg, rowCfg = _a.rowCfg, spreadsheet = _a.spreadsheet;\r\n        var userDragWidth = get(rowCfg, \"widthByField.\".concat(node.key));\r\n        var userCustomWidth = get(rowCfg, 'width');\r\n        if (userDragWidth) {\r\n            return userDragWidth;\r\n        }\r\n        if (userCustomWidth) {\r\n            return userCustomWidth;\r\n        }\r\n        if (spreadsheet.getLayoutWidthType() !== LayoutWidthTypes.Adaptive) {\r\n            // compact or colAdaptive\r\n            return this.getCompactGridRowWidth(node);\r\n        }\r\n        // adaptive\r\n        return this.getAdaptGridColWidth(colLeafNodes);\r\n    };\r\n    /**\r\n     *  计算树状模式等宽条件下的列宽\r\n     * @returns number\r\n     */\r\n    PivotFacet.prototype.getAdaptTreeColWidth = function (col, colLeafNodes) {\r\n        // tree row width = [config width, canvas / 2]\r\n        var canvasW = this.getCanvasHW().width;\r\n        var rowHeaderWidth = Math.min(canvasW / 2, this.getTreeRowHeaderWidth());\r\n        // calculate col width\r\n        var colSize = Math.max(1, colLeafNodes.length);\r\n        var cellCfg = this.cfg.cellCfg;\r\n        return Math.max(getCellWidth(cellCfg, this.getColLabelLength(col)), (canvasW - rowHeaderWidth) / colSize);\r\n    };\r\n    PivotFacet.prototype.getColLabelLength = function (col) {\r\n        var _a;\r\n        // 如果 label 字段形如 \"[\"xx\",\"xxx\"]\"，直接获取其长度\r\n        var labels = safeJsonParse(col === null || col === void 0 ? void 0 : col.value);\r\n        if (isArray(labels)) {\r\n            return labels.length;\r\n        }\r\n        // 否则动态采样前50条数据，如果数据value是数组类型，获取其长度\r\n        var dataSet = this.cfg.dataSet;\r\n        var multiData = dataSet.getMultiData(col.query, col.isTotals || col.isTotalMeasure);\r\n        // 采样前50，根据指标个数获取单元格列宽\r\n        var demoData = (_a = multiData === null || multiData === void 0 ? void 0 : multiData.slice(0, 50)) !== null && _a !== void 0 ? _a : [];\r\n        var lengths = [];\r\n        forEach(demoData, function (value) {\r\n            forIn(value, function (v) {\r\n                if (isObject(v) && (v === null || v === void 0 ? void 0 : v.values)) {\r\n                    lengths.push(size(v === null || v === void 0 ? void 0 : v.values[0]));\r\n                }\r\n            });\r\n        });\r\n        return max(lengths) || 1;\r\n    };\r\n    /**\r\n     *  计算平铺模式等宽条件下的列宽\r\n     * @returns number\r\n     */\r\n    PivotFacet.prototype.getAdaptGridColWidth = function (colLeafNodes, rowHeaderWidth) {\r\n        var _a = this.cfg, rows = _a.rows, cellCfg = _a.cellCfg;\r\n        var rowHeaderColSize = rows.length;\r\n        var colHeaderColSize = colLeafNodes.length;\r\n        var canvasW = this.getCanvasHW().width;\r\n        var size = Math.max(1, rowHeaderColSize + colHeaderColSize);\r\n        if (!rowHeaderWidth) {\r\n            // canvasW / (rowHeader's col size + colHeader's col size) = [celCfg.width, canvasW]\r\n            return Math.max(getCellWidth(cellCfg), canvasW / size);\r\n        }\r\n        // (canvasW - rowHeaderW) / (colHeader's col size) = [celCfg.width, canvasW]\r\n        return Math.max(getCellWidth(cellCfg), (canvasW - rowHeaderWidth) / colHeaderColSize);\r\n    };\r\n    /**\r\n     * 计算树状结构行头宽度\r\n     * @returns number\r\n     */\r\n    PivotFacet.prototype.getTreeRowHeaderWidth = function () {\r\n        var _a, _b, _c, _d;\r\n        var _e = this.cfg, rows = _e.rows, dataSet = _e.dataSet, rowCfg = _e.rowCfg, treeRowsWidth = _e.treeRowsWidth;\r\n        // user drag happened\r\n        if (rowCfg === null || rowCfg === void 0 ? void 0 : rowCfg.treeRowsWidth) {\r\n            return rowCfg === null || rowCfg === void 0 ? void 0 : rowCfg.treeRowsWidth;\r\n        }\r\n        // + province/city/level\r\n        var treeHeaderLabel = rows\r\n            .map(function (key) { return dataSet.getFieldName(key); })\r\n            .join('/');\r\n        var _f = this.spreadsheet.theme.cornerCell, cornerCellTextStyle = _f.bolderText, cornerIconStyle = _f.icon;\r\n        // 初始化角头时，保证其在树形模式下不换行，给与两个icon的宽度空余（tree icon 和 action icon），减少复杂的 action icon 判断\r\n        var maxLabelWidth = measureTextWidth(treeHeaderLabel, cornerCellTextStyle) +\r\n            cornerIconStyle.size * 2 +\r\n            ((_a = cornerIconStyle.margin) === null || _a === void 0 ? void 0 : _a.left) +\r\n            ((_b = cornerIconStyle.margin) === null || _b === void 0 ? void 0 : _b.right) +\r\n            ((_c = this.rowCellTheme.padding) === null || _c === void 0 ? void 0 : _c.left) +\r\n            ((_d = this.rowCellTheme.padding) === null || _d === void 0 ? void 0 : _d.right);\r\n        var width = Math.max(treeRowsWidth, maxLabelWidth);\r\n        // NOTE: mark as user drag to calculate only one time\r\n        rowCfg.treeRowsWidth = width;\r\n        return width;\r\n    };\r\n    /**\r\n     * 计算 compact 模式下 node 宽度\r\n     *\r\n     * |   fieldName  |\r\n     *  _______________\r\n     * | label - icon  | <- node\r\n     * | label - icon  |\r\n     * | label - icon  |\r\n     *\r\n     * @param node 目标节点\r\n     * @returns 宽度\r\n     */\r\n    PivotFacet.prototype.getCompactGridRowWidth = function (node) {\r\n        var _this = this;\r\n        var _a;\r\n        var _b = this.cfg, dataSet = _b.dataSet, spreadsheet = _b.spreadsheet;\r\n        var _c = spreadsheet.theme.rowCell, rowTextStyle = _c.bolderText, rowIconStyle = _c.icon, rowCellStyle = _c.cell;\r\n        var _d = spreadsheet.theme.cornerCell, cornerTextStyle = _d.bolderText, cornerIconStyle = _d.icon, cornerCellStyle = _d.cell;\r\n        var field = node.field, isLeaf = node.isLeaf;\r\n        // calc rowNodeWitdh\r\n        var rowIconWidth = this.getExpectedCellIconWidth(CellTypes.ROW_CELL, !spreadsheet.isValueInCols() &&\r\n            isLeaf &&\r\n            spreadsheet.options.showDefaultHeaderActionIcon, rowIconStyle);\r\n        var allLabels = (_a = dataSet\r\n            .getDimensionValues(field)) === null || _a === void 0 ? void 0 : _a.slice(0, 50).map(function (dimValue) {\r\n            var _a, _b;\r\n            return (_b = (_a = _this.spreadsheet.dataSet.getFieldFormatter(field)) === null || _a === void 0 ? void 0 : _a(dimValue)) !== null && _b !== void 0 ? _b : dimValue;\r\n        });\r\n        var maxLabel = maxBy(allLabels, function (label) { return \"\".concat(label).length; });\r\n        var rowNodeWidth = measureTextWidth(maxLabel, rowTextStyle) +\r\n            rowIconWidth +\r\n            rowCellStyle.padding.left +\r\n            rowCellStyle.padding.right;\r\n        // calc corner fieldNameNodeWidth\r\n        var fieldName = dataSet.getFieldName(field);\r\n        var cornerIconWidth = this.getExpectedCellIconWidth(CellTypes.CORNER_CELL, false, cornerIconStyle);\r\n        var fieldNameNodeWidth = measureTextWidth(fieldName, cornerTextStyle) +\r\n            cornerIconWidth +\r\n            cornerCellStyle.padding.left +\r\n            cornerCellStyle.padding.right;\r\n        DebuggerUtil.getInstance().logger('Max Label In Row:', field, rowNodeWidth > fieldNameNodeWidth ? maxLabel : fieldName);\r\n        // return max\r\n        return Math.max(rowNodeWidth, fieldNameNodeWidth);\r\n    };\r\n    PivotFacet.prototype.getViewCellHeights = function (layoutResult) {\r\n        var rowLeafNodes = layoutResult.rowLeafNodes;\r\n        var heights = reduce(rowLeafNodes, function (result, node) {\r\n            result.push(last(result) + node.height);\r\n            return result;\r\n        }, [0]);\r\n        return {\r\n            getTotalHeight: function () {\r\n                return last(heights);\r\n            },\r\n            getCellOffsetY: function (index) {\r\n                return heights[index];\r\n            },\r\n            getTotalLength: function () {\r\n                // 多了一个数据 [0]\r\n                return heights.length - 1;\r\n            },\r\n            getIndexRange: function (minHeight, maxHeight) {\r\n                return getIndexRangeWithOffsets(heights, minHeight, maxHeight);\r\n            },\r\n        };\r\n    };\r\n    return PivotFacet;\r\n}(BaseFacet));\r\nexport { PivotFacet };\r\n//# sourceMappingURL=pivot-facet.js.map","references":["F:/Ismart/S2-master/node_modules/@types/lodash/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/base-facet.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/cell/data-cell.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/facet.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/interaction.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/basic.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/cell/header-cell.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/debug/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/interface/index.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/build-header-hierarchy.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/hierarchy.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/layout-hooks.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/node.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/cell/data-cell.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/text.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/facet.ts","F:/Ismart/S2-master/packages/s2-core/src/common/index.ts"],"map":"{\"version\":3,\"file\":\"pivot-facet.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/facet/pivot-facet.ts\"],\"names\":[],\"mappings\":\"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\"}"}
