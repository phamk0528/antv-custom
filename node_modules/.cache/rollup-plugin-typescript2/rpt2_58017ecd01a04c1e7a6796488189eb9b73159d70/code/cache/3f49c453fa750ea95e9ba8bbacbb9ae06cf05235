{"code":"import { __assign, __read, __spreadArray, __values } from \"tslib\";\r\nimport { isEmpty, get } from 'lodash';\r\nimport { layoutArrange, layoutHierarchy } from \"./layout-hooks\";\r\nimport { TotalClass } from \"./total-class\";\r\nimport { i18n } from \"../../common/i18n\";\r\nimport { Node } from \"./node\";\r\nimport { generateId } from \"../../utils/layout/generate-id\";\r\nimport { getListBySorted, filterUndefined } from \"../../utils/data-set-operate\";\r\nimport { getDimensionsWithoutPathPre } from \"../../utils/dataset/pivot-data-set\";\r\nimport { ID_SEPARATOR, ROOT_ID } from \"../../common/constant\";\r\nvar addTotals = function (spreadsheet, currentField, fieldValues) {\r\n    var totalsConfig = spreadsheet.getTotalsConfig(currentField);\r\n    // tree mode only has grand totals, but if there are subTotals configs,\r\n    // it will display in cross-area cell\r\n    // TODO valueInCol = false and one or more values\r\n    if (totalsConfig.showGrandTotals) {\r\n        var func = totalsConfig.reverseLayout ? 'unshift' : 'push';\r\n        fieldValues[func](new TotalClass(totalsConfig.label, false, true));\r\n    }\r\n};\r\n/**\r\n * Only row header has tree hierarchy, in this scene:\r\n * 1、value in rows is not work => valueInCols is ineffective\r\n * 2、can't add extra sub total node in row\r\n * @param params\r\n */\r\nexport var buildRowTreeHierarchy = function (params) {\r\n    var e_1, _a, _b;\r\n    var _c, _d;\r\n    var parentNode = params.parentNode, currentField = params.currentField, level = params.level, facetCfg = params.facetCfg, hierarchy = params.hierarchy, pivotMeta = params.pivotMeta;\r\n    var spreadsheet = facetCfg.spreadsheet, dataSet = facetCfg.dataSet, collapsedRows = facetCfg.collapsedRows, hierarchyCollapse = facetCfg.hierarchyCollapse;\r\n    var query = parentNode.query, id = parentNode.id;\r\n    var isDrillDownItem = ((_c = spreadsheet.dataCfg.fields.rows) === null || _c === void 0 ? void 0 : _c.length) <= level;\r\n    var sortedDimensionValues = ((_d = dataSet === null || dataSet === void 0 ? void 0 : dataSet.sortedDimensionValues) === null || _d === void 0 ? void 0 : _d[currentField]) || [];\r\n    var dimensions = sortedDimensionValues === null || sortedDimensionValues === void 0 ? void 0 : sortedDimensionValues.filter(function (item) {\r\n        return item === null || item === void 0 ? void 0 : item.includes(id === null || id === void 0 ? void 0 : id.split(\"\".concat(ROOT_ID).concat(ID_SEPARATOR))[1]);\r\n    });\r\n    var dimValues = filterUndefined(getListBySorted(__spreadArray([], __read((pivotMeta.keys() || [])), false), __spreadArray([], __read(getDimensionsWithoutPathPre(dimensions)), false)));\r\n    var fieldValues = layoutArrange(dimValues, facetCfg, parentNode, currentField);\r\n    // limit displayed drill down data by drillItemsNum\r\n    var drillItemsNum = spreadsheet.store.get('drillItemsNum');\r\n    if (drillItemsNum && isDrillDownItem) {\r\n        fieldValues = fieldValues.slice(0, drillItemsNum);\r\n    }\r\n    if (level === 0) {\r\n        addTotals(spreadsheet, currentField, fieldValues);\r\n    }\r\n    try {\r\n        for (var fieldValues_1 = __values(fieldValues), fieldValues_1_1 = fieldValues_1.next(); !fieldValues_1_1.done; fieldValues_1_1 = fieldValues_1.next()) {\r\n            var fieldValue = fieldValues_1_1.value;\r\n            var isTotals = fieldValue instanceof TotalClass;\r\n            var pivotMetaValue = isTotals\r\n                ? null\r\n                : pivotMeta.get(fieldValue);\r\n            var value = void 0;\r\n            var nodeQuery = query;\r\n            var isGrandTotals = false;\r\n            var isSubTotals = false;\r\n            if (isTotals) {\r\n                var totalClass = fieldValue;\r\n                isGrandTotals = totalClass.isGrandTotals;\r\n                isSubTotals = totalClass.isSubTotals;\r\n                value = i18n(fieldValue.label);\r\n                nodeQuery = query;\r\n            }\r\n            else {\r\n                value = fieldValue;\r\n                nodeQuery = __assign(__assign({}, query), (_b = {}, _b[currentField] = value, _b));\r\n            }\r\n            var uniqueId = generateId(parentNode.id, value);\r\n            var isCollapsedRow = get(collapsedRows, uniqueId);\r\n            var isCollapse = isCollapsedRow !== null && isCollapsedRow !== void 0 ? isCollapsedRow : hierarchyCollapse;\r\n            var node = new Node({\r\n                id: uniqueId,\r\n                key: currentField,\r\n                label: value,\r\n                value: value,\r\n                level: level,\r\n                parent: parentNode,\r\n                field: currentField,\r\n                isTotals: isTotals,\r\n                isGrandTotals: isGrandTotals,\r\n                isSubTotals: isSubTotals,\r\n                isCollapsed: isCollapse,\r\n                hierarchy: hierarchy,\r\n                query: nodeQuery,\r\n                spreadsheet: spreadsheet,\r\n            });\r\n            if (level > hierarchy.maxLevel) {\r\n                hierarchy.maxLevel = level;\r\n            }\r\n            var emptyChildren = isEmpty(pivotMetaValue === null || pivotMetaValue === void 0 ? void 0 : pivotMetaValue.children);\r\n            if (emptyChildren || isTotals) {\r\n                node.isLeaf = true;\r\n            }\r\n            if (!emptyChildren) {\r\n                node.isTotals = true;\r\n            }\r\n            var expandCurrentNode = layoutHierarchy(facetCfg, parentNode, node, hierarchy);\r\n            if (!emptyChildren && !isCollapse && !isTotals && expandCurrentNode) {\r\n                buildRowTreeHierarchy({\r\n                    level: level + 1,\r\n                    currentField: pivotMetaValue.childField,\r\n                    pivotMeta: pivotMetaValue.children,\r\n                    facetCfg: facetCfg,\r\n                    parentNode: node,\r\n                    hierarchy: hierarchy,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (fieldValues_1_1 && !fieldValues_1_1.done && (_a = fieldValues_1.return)) _a.call(fieldValues_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n};\r\n//# sourceMappingURL=build-row-tree-hierarchy.js.map","references":["F:/Ismart/S2-master/node_modules/@types/lodash/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/interface.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/layout-hooks.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/total-class.ts","F:/Ismart/S2-master/packages/s2-core/src/common/i18n/index.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/node.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/layout/generate-id.ts","F:/Ismart/S2-master/packages/s2-core/src/sheet-type/index.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/data-set-operate.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/dataset/pivot-data-set.ts","F:/Ismart/S2-master/packages/s2-core/src/data-set/index.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/index.ts"],"map":"{\"version\":3,\"file\":\"build-row-tree-hierarchy.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/facet/layout/build-row-tree-hierarchy.ts\"],\"names\":[],\"mappings\":\"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\"}"}
