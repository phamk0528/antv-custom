{"code":"import { __rest, __values } from \"tslib\";\r\nimport { isEmpty, get } from 'lodash';\r\nimport { layoutHierarchy } from './layout-hooks';\r\nimport { Node } from \"./node\";\r\nimport { EXTRA_FIELD } from \"../../common/constant\";\r\nimport { generateId } from \"../../utils/layout/generate-id\";\r\n/**\r\n * 自定义🌲结构设计原则：\r\n * 1、渲染的节点全部跟着定义的数据结构走，如果需要结构变（数据挂父节点）等场景，建议直接改\r\n * 传入的customTreeItems配置\r\n * 2、没有总计小计的概念，如果有类似的，建议也是直接改customTreeItems配置\r\n * 3、是否展开和收起完全由 customTreeItem.collapsed 来控制（默认都展开）\r\n * @param params\r\n */\r\nexport var buildRowCustomTreeHierarchy = function (params) {\r\n    var e_1, _a, _b;\r\n    var facetCfg = params.facetCfg, _c = params.customTreeItems, customTreeItems = _c === void 0 ? [] : _c, level = params.level, parentNode = params.parentNode, hierarchy = params.hierarchy;\r\n    var spreadsheet = facetCfg.spreadsheet, collapsedRows = facetCfg.collapsedRows, hierarchyCollapse = facetCfg.hierarchyCollapse;\r\n    try {\r\n        for (var customTreeItems_1 = __values(customTreeItems), customTreeItems_1_1 = customTreeItems_1.next(); !customTreeItems_1_1.done; customTreeItems_1_1 = customTreeItems_1.next()) {\r\n            var customTreeItem = customTreeItems_1_1.value;\r\n            var key = customTreeItem.key, title = customTreeItem.title, collapsed = customTreeItem.collapsed, children = customTreeItem.children, rest = __rest(customTreeItem, [\"key\", \"title\", \"collapsed\", \"children\"]);\r\n            // query只与值本身有关，不会涉及到parent节点\r\n            var valueQuery = (_b = {}, _b[EXTRA_FIELD] = key, _b);\r\n            // 保持和其他场景头部生成id的格式一致\r\n            var uniqueId = generateId(parentNode.id, title);\r\n            var defaultCollapsed = collapsed !== null && collapsed !== void 0 ? collapsed : false;\r\n            var isCollapsedRow = get(collapsedRows, uniqueId);\r\n            var isCollapsed = isCollapsedRow !== null && isCollapsedRow !== void 0 ? isCollapsedRow : (hierarchyCollapse || defaultCollapsed);\r\n            var node = new Node({\r\n                id: uniqueId,\r\n                key: key,\r\n                label: title,\r\n                value: title,\r\n                level: level,\r\n                parent: parentNode,\r\n                field: key,\r\n                isTotals: false,\r\n                isCollapsed: isCollapsed,\r\n                hierarchy: hierarchy,\r\n                query: valueQuery,\r\n                spreadsheet: spreadsheet,\r\n                extra: rest,\r\n            });\r\n            if (level > hierarchy.maxLevel) {\r\n                hierarchy.maxLevel = level;\r\n            }\r\n            if (isEmpty(children)) {\r\n                node.isLeaf = true;\r\n            }\r\n            var expandCurrentNode = layoutHierarchy(facetCfg, parentNode, node, hierarchy);\r\n            // go recursive\r\n            if (!isEmpty(children) && !isCollapsed && expandCurrentNode) {\r\n                buildRowCustomTreeHierarchy({\r\n                    facetCfg: facetCfg,\r\n                    parentNode: node,\r\n                    level: level + 1,\r\n                    hierarchy: hierarchy,\r\n                    customTreeItems: children,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (customTreeItems_1_1 && !customTreeItems_1_1.done && (_a = customTreeItems_1.return)) _a.call(customTreeItems_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n};\r\n//# sourceMappingURL=build-row-custom-tree-hierarchy.js.map","references":["F:/Ismart/S2-master/node_modules/@types/lodash/index.d.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/layout-hooks.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/interface.ts","F:/Ismart/S2-master/packages/s2-core/src/facet/layout/node.ts","F:/Ismart/S2-master/packages/s2-core/src/common/constant/index.ts","F:/Ismart/S2-master/packages/s2-core/src/utils/layout/generate-id.ts"],"map":"{\"version\":3,\"file\":\"build-row-custom-tree-hierarchy.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/facet/layout/build-row-custom-tree-hierarchy.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AACtC,OAAO,EAAE,eAAe,EAAE,MAAM,gBAAgB,CAAC;AAEjD,OAAO,EAAE,IAAI,EAAE,eAA4B;AAC3C,OAAO,EAAE,WAAW,EAAE,8BAA0B;AAChD,OAAO,EAAE,UAAU,EAAE,uCAAmC;AAExD;;;;;;;GAOG;AACH,MAAM,CAAC,IAAM,2BAA2B,GAAG,UAAC,MAA8B;;IAEtE,IAAA,QAAQ,GAKN,MAAM,SALA,EACR,KAIE,MAAM,gBAJY,EAApB,eAAe,mBAAG,EAAE,KAAA,EACpB,KAAK,GAGH,MAAM,MAHH,EACL,UAAU,GAER,MAAM,WAFE,EACV,SAAS,GACP,MAAM,UADC,CACA;IACH,IAAA,WAAW,GAAuC,QAAQ,YAA/C,EAAE,aAAa,GAAwB,QAAQ,cAAhC,EAAE,iBAAiB,GAAK,QAAQ,kBAAb,CAAc;;QACnE,KAA6B,IAAA,oBAAA,SAAA,eAAe,CAAA,gDAAA,6EAAE;YAAzC,IAAM,cAAc,4BAAA;YACf,IAAA,GAAG,GAA0C,cAAc,IAAxD,EAAE,KAAK,GAAmC,cAAc,MAAjD,EAAE,SAAS,GAAwB,cAAc,UAAtC,EAAE,QAAQ,GAAc,cAAc,SAA5B,EAAK,IAAI,UAAK,cAAc,EAA7D,yCAA4C,CAAF,CAAoB;YACpE,6BAA6B;YAC7B,IAAM,UAAU,aAAK,GAAC,WAAW,IAAG,GAAG,KAAE,CAAC;YAC1C,qBAAqB;YACrB,IAAM,QAAQ,GAAG,UAAU,CAAC,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YAClD,IAAM,gBAAgB,GAAG,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,KAAK,CAAC;YAC5C,IAAM,cAAc,GAAG,GAAG,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;YACpD,IAAM,WAAW,GACf,cAAc,aAAd,cAAc,cAAd,cAAc,GAAI,CAAC,iBAAiB,IAAI,gBAAgB,CAAC,CAAC;YAE5D,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC;gBACpB,EAAE,EAAE,QAAQ;gBACZ,GAAG,KAAA;gBACH,KAAK,EAAE,KAAK;gBACZ,KAAK,EAAE,KAAK;gBACZ,KAAK,OAAA;gBACL,MAAM,EAAE,UAAU;gBAClB,KAAK,EAAE,GAAG;gBACV,QAAQ,EAAE,KAAK;gBACf,WAAW,aAAA;gBACX,SAAS,WAAA;gBACT,KAAK,EAAE,UAAU;gBACjB,WAAW,aAAA;gBACX,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;YAEH,IAAI,KAAK,GAAG,SAAS,CAAC,QAAQ,EAAE;gBAC9B,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC;aAC5B;YAED,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE;gBACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;aACpB;YACD,IAAM,iBAAiB,GAAG,eAAe,CACvC,QAAQ,EACR,UAAU,EACV,IAAI,EACJ,SAAS,CACV,CAAC;YAEF,eAAe;YACf,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,IAAI,iBAAiB,EAAE;gBAC3D,2BAA2B,CAAC;oBAC1B,QAAQ,UAAA;oBACR,UAAU,EAAE,IAAI;oBAChB,KAAK,EAAE,KAAK,GAAG,CAAC;oBAChB,SAAS,WAAA;oBACT,eAAe,EAAE,QAAQ;iBAC1B,CAAC,CAAC;aACJ;SACF;;;;;;;;;AACH,CAAC,CAAC\"}"}
